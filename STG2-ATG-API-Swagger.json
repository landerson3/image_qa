{
   "swagger":"2.0",
   "info":{
      "description":"Lists the various services available to support the eCommerce platform. Swagger lets you 'discover' and explore the API inputs.\n \nBe mindful when using Swagger to verify session-based API functions.  If Swagger is not hosted on the same domain as the application (like in Staging and Production) then you will have different JSESSIONID values. Thus your interactions with swagger will be on a different session than a user on the main site. Any API that needs a user session (i.e. orders, account) must be invoked from the user domain. \n \nIf you need session behavior then copy the Request URL from Swagger and update it to match the user domain. \n \nCommon Status Codes: \n * __200__ - OK.  Success.  Hooray.  You get a cookie.  You Win.\n * __400__ - Bad Request.  Usually means you failed some level of input validation.  Are you sure that was a valid postal code?\n * __403__ - Forbidden.  Used primarily to refuse request params often associated with injection attacks.\n * __404__ - Not Found. The resource you requested doesn't exist.  Seriously.  We don't have it.\n * __409__ - Conflict. The likely cause is incorrect _sessionConf parameter.\n * __500__ - Internal Server Error.  Something unexpected went wrong on our end.  We'll check the logs and get back to you.",
      "version":"1.0.0",
      "title":"RH eCommerce Service APIs"
   },
   "basePath":"/rh/api",
   "tags":[
      {
         "name":"fulfillment"
      },
      {
         "name":"account"
      },
      {
         "name":"display"
      },
      {
         "name":"freight"
      },
      {
         "name":"my-account"
      },
      {
         "name":"postalCode"
      },
      {
         "name":"contractpayment"
      },
      {
         "name":"category"
      },
      {
         "name":"checkout"
      },
      {
         "name":"cart"
      },
      {
         "name":"order"
      },
      {
         "name":"product"
      },
      {
         "name":"registry"
      },
      {
         "name":"product-gallery"
      },
      {
         "name":"membership"
      },
      {
         "name":"marketing"
      },
      {
         "name":"microsite"
      },
      {
         "name":"monogram"
      },
      {
         "name":"trade service request"
      },
      {
         "name":"catalog"
      },
      {
         "name":"payment"
      },
      {
         "name":"giftCard"
      },
      {
         "name":"sku"
      },
      {
         "name":"quicklook"
      },
      {
         "name":"tax"
      },
      {
         "name":"quote"
      },
      {
         "name":"schedule appointment"
      },
      {
         "name":"posscheduling"
      },
      {
         "name":"regions"
      },
      {
         "name":"navigation"
      },
      {
         "name":"price"
      },
      {
         "name":"OpportunityLookup"
      },
      {
         "name":"siteinfo"
      },
      {
         "name":"profile"
      },
      {
         "name":"ProjectFulfillment"
      },
      {
         "name":"wishlist"
      },
      {
         "name":"customShadesDrapes"
      },
      {
         "name":"ads"
      },
      {
         "name":"swatch"
      },
      {
         "name":"email"
      },
      {
         "name":"project"
      },
      {
         "name":"brand"
      },
      {
         "name":"commerceitem"
      },
      {
         "name":"sample"
      },
      {
         "name":"Enterprise"
      }
   ],
   "schemes":[
      "https"
   ],
   "produces":[
      "application/json"
   ],
   "paths":{
      "/account/address/v1/getAddresses":{
         "get":{
            "tags":[
               "account"
            ],
            "summary":"Returns all addresses in user's address book.",
            "description":"Operates on current session profile.  Requires authenticated session prior to invocation.",
            "operationId":"getUserAddresses",
            "produces":[
               "application/json"
            ],
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/account/address/v1/getShippingCountries":{
         "get":{
            "tags":[
               "account"
            ],
            "summary":"Returns all shipping countries list.",
            "description":"Used to get the shipping countries list.",
            "operationId":"getShippingCountries",
            "produces":[
               "application/json"
            ],
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/account/address/v1/getShippingStates":{
         "get":{
            "tags":[
               "account"
            ],
            "summary":"Returns all shipping states list.",
            "description":"Used to get the shipping states list based on the country param passed. Requires authenticated session prior to invocation.",
            "operationId":"getShippingStates",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"countryCode",
                  "in":"query",
                  "description":"This value is used to pull the states list based on teh country code.Either it may be US or CA.  ",
                  "required":false,
                  "type":"string",
                  "x-example":"US"
               }
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/account/address/v1/postAddress":{
         "post":{
            "tags":[
               "account"
            ],
            "summary":"Creates or updates user address.",
            "description":"Used to add an address or update an existing address. The behavior depends upon the JSON object passed in.  To update an address pass the **ID** along with the other fields.  To add an address pass the fields without passing the **ID**. \n\nOperates on current session profile.  Requires authenticated session prior to invocation.\n\n Pass Avsstatus as : \"Unverified\" or \"Verified\" only. For Verified Addresses there is need not to call AVS service.",
            "operationId":"postAddress",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/AddressBeanExtended"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied"
               },
               "500":{
                  "description":"Server Error while processing."
               }
            }
         },
         "options":{
            "tags":[
               "account"
            ],
            "summary":"Handles CORS preflight requests ",
            "description":"",
            "operationId":"postAddressOptions",
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/account/address/v1/removeAddress":{
         "post":{
            "tags":[
               "account"
            ],
            "summary":"Removes an address from the user's address book.",
            "description":"Operates on current session profile.  Requires authenticated session prior to invocation.",
            "operationId":"removeAddress",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "description":"Id of the address to remove.",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/GenericJSONId"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied"
               },
               "500":{
                  "description":"Server error while processing."
               }
            }
         },
         "options":{
            "tags":[
               "account"
            ],
            "summary":"Handles CORS preflight requests ",
            "description":"",
            "operationId":"removeAddressOptions",
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/account/address/v1/removeAllAddresses":{
         "post":{
            "tags":[
               "account"
            ],
            "summary":"Removes all addresses from the user's address book.",
            "description":"Operates on current session profile.  Requires authenticated session prior to invocation.",
            "operationId":"removeAllAddresses",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied"
               },
               "500":{
                  "description":"Server error while processing."
               }
            }
         }
      },
      "/account/address/v1/updateDefaultAddress":{
         "post":{
            "tags":[
               "account"
            ],
            "summary":"Updates  default Address in the user's address book.",
            "description":"Operates on current session profile.  Requires authenticated session prior to invocation.",
            "operationId":"updateDefaultAddress",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "description":"Id of the Address to update.",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/GenericJSONId"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied"
               },
               "500":{
                  "description":"Server error while processing."
               }
            }
         }
      },
      "/account/auth/v1/login":{
         "post":{
            "tags":[
               "account"
            ],
            "summary":"USABLE. Login based on Username and password ",
            "description":"This service allows a user to login. \n\n**Input Attributes** \n\nThese are the standard attributes that may not be obvious based on their names. \n\n*autoLogin*: Indicates whether the system should preserve an auto login cookie. \n\n*giftListToken*: The token used to attach a gift list to a profile.  Comes from Concierge email. \n\n*loginAndCheckoutMergeCart*: boolean indicating we are logging in during checkout flow. \n\n*trustAnswer*: Used for honeypot bot snaring technique.  Passing a value for this results in login failure.",
            "operationId":"loginUser",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/LoginInfo"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied"
               },
               "404":{
                  "description":"User Not Found"
               }
            }
         },
         "options":{
            "tags":[
               "account"
            ],
            "summary":"Handles CORS preflight requests ",
            "description":"",
            "operationId":"postLoginOptions",
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/account/auth/v1/login/concierge":{
         "post":{
            "tags":[
               "account"
            ],
            "summary":"USABLE. Login based on Username and password via LDAP",
            "description":"This service allows an RH Associte to login using LDAP instead of ATG. \n\n**Input Attributes** \n\nThese are the standard attributes that may not be obvious based on their names. \n\n*autoLogin*: Indicates whether the system should preserve an auto login cookie. \n\n*giftListToken*: The token used to attach a gift list to a profile.  Comes from Concierge email. \n\n*loginAndCheckoutMergeCart*: boolean indicating we are logging in during checkout flow. \n\n*trustAnswer*: Used for honeypot bot snaring technique.  Passing a value for this results in login failure.",
            "operationId":"loginUserConcierge",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/LoginInfo"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied"
               },
               "404":{
                  "description":"User Not Found"
               }
            }
         }
      },
      "/account/auth/v1/logout":{
         "get":{
            "tags":[
               "account"
            ],
            "summary":"USABLE.Logout ",
            "description":"",
            "operationId":"logoutUser",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied"
               },
               "404":{
                  "description":"User Not Found"
               }
            }
         }
      },
      "/account/avs/v1/validate":{
         "post":{
            "tags":[
               "account"
            ],
            "summary":"Provides address validation.",
            "description":"Used to verify an address with our 3rd party address verification partner. In Dev environments you need to turn on the 3rd party AVS integration via the /resto/avs/RHAddressValidationService component. \n\nFor this API input an array of address objects to be validated against our 3rd party provider.  The return response from the 3rd party is sent back in the JSON response from this service. \n\nFirst Name, Last Name, and Phone Number fields are not required. \n\nThe 'reserved' field is required and one of: \n\n'shipping' or 'billing' ",
            "operationId":"validateAddressAVS",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/RHAddressValidationRequest"
                     }
                  }
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied"
               },
               "500":{
                  "description":"Server Error while processing."
               }
            }
         },
         "options":{
            "tags":[
               "account"
            ],
            "summary":"Handles CORS preflight requests ",
            "description":"",
            "operationId":"validateAddressAVSOptions",
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/account/payment/v1/getPaymentMethods":{
         "get":{
            "tags":[
               "account"
            ],
            "summary":"Exposes payment methods on user profile.",
            "description":"Operates on current session profile.  Requires authenticated session prior to invocation.",
            "operationId":"getUserPaymentMethods",
            "produces":[
               "application/json"
            ],
            "parameters":[
               
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/PaymentMethodResponse"
                  }
               }
            }
         }
      },
      "/account/payment/v1/postPaymentMethod":{
         "post":{
            "tags":[
               "account"
            ],
            "summary":"Add or update a user credit card.",
            "description":"Used to add a credit card or update an existing credit card.  The behavior depends upon the JSON object passed in.  To update a credit card pass the **ID** along with the other fields.  To add a credit card pass the fields with no **ID**.  \n\nOperates on current session profile.  Requires authenticated session prior to invocation.",
            "operationId":"postPaymentMethod",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/PaymentMethodBean"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied"
               },
               "500":{
                  "description":"Server Error"
               }
            }
         },
         "options":{
            "tags":[
               "account"
            ],
            "summary":"Handles CORS preflight requests ",
            "description":"",
            "operationId":"postPaymentMethodOptions",
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/account/payment/v1/removeAllPaymentMethods":{
         "post":{
            "tags":[
               "account"
            ],
            "summary":"Removes all payment methods from the current user's list of credit cards.",
            "description":"Operates on current session profile.  Requires authenticated session prior to invocation.",
            "operationId":"removeAllPaymentMethods",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied"
               },
               "500":{
                  "description":"Server Error"
               }
            }
         }
      },
      "/account/payment/v1/removePaymentMethod":{
         "post":{
            "tags":[
               "account"
            ],
            "summary":"Removes a credit card from the current user's list of credit cards.",
            "description":"Operates on current session profile.  Requires authenticated session prior to invocation.",
            "operationId":"removePaymentMethod",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "description":"Id (not cc number) of the item to remove.",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/GenericJSONId"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied"
               },
               "500":{
                  "description":"Server Error"
               }
            }
         },
         "options":{
            "tags":[
               "account"
            ],
            "summary":"Handles CORS preflight requests ",
            "description":"",
            "operationId":"removePaymentMethodOptions",
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/account/phoneNumber/v1/getPhoneNumbers":{
         "get":{
            "tags":[
               "account"
            ],
            "summary":"Returns all PhoneNumbers  from Users PhoneBook.",
            "description":"Operates on current session profile.  Requires authenticated session prior to invocation.",
            "operationId":"getPhoneNumbers",
            "produces":[
               "application/json"
            ],
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/account/phoneNumber/v1/postPhoneNumber":{
         "post":{
            "tags":[
               "account"
            ],
            "summary":"Creates or updates Phone Book.",
            "description":"Used to add a phone number or update an existing phone number from Phone book. The behavior depends upon the JSON object passed in.  To update an address pass the **ID** along with the other fields.  To add an address pass the fields without passing the **ID**. \n\nOperates on current session profile.  Requires authenticated session prior to invocation.\n\n Pass Avsstatus as : \"Unverified\" or \"Verified\" only. For Verified Addresses there is need not to call AVS service.",
            "operationId":"postPhoneNumber",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/PhoneNumberBean"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied"
               },
               "500":{
                  "description":"Server Error while processing."
               }
            }
         },
         "options":{
            "tags":[
               "account"
            ],
            "summary":"Handles CORS preflight requests ",
            "description":"",
            "operationId":"postPhoneNumberOptions",
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/account/phoneNumber/v1/removePhoneNumber":{
         "post":{
            "tags":[
               "account"
            ],
            "summary":"Removes phoneNumber from the user's phone book.",
            "description":"Operates on current session profile.  Requires authenticated session prior to invocation.",
            "operationId":"removePhoneNumber",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "description":"Id of the phoneNumber to remove.",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/GenericJSONId"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied"
               },
               "500":{
                  "description":"Server error while processing."
               }
            }
         },
         "options":{
            "tags":[
               "account"
            ],
            "summary":"Handles CORS preflight requests ",
            "description":"",
            "operationId":"removePhoneNumberOptions",
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/account/phoneNumber/v1/updateDefaultPhoneNumber":{
         "post":{
            "tags":[
               "account"
            ],
            "summary":"Updates the default phoneNumber in  the user's phone book.",
            "description":"Operates on current session profile.  Requires authenticated session prior to invocation.",
            "operationId":"updateDefaultPhoneNumber",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "description":"Id of the phoneNumber to update.",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/GenericJSONId"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied"
               },
               "500":{
                  "description":"Server error while processing."
               }
            }
         }
      },
      "/account/user/v1/createWebAccount":{
         "post":{
            "tags":[
               "account"
            ],
            "summary":"Creates a user account in the estore application",
            "description":"This service covers account creation in the My Account Flow, and the Member Flow.  It does not cover Checkout account creation. \n\n**Standard Attributes** \n\nThese are the standard attributes that may not be obvious based on their names. \n\n*optIns*: Used for user opt in to site email communication.  Sent to Responsys.  Values need to be the site ids as 'RH','BC','TN','MO'. \n\n*ipaddress*: This is populated by the system based on the akamai ip header value.  Sent to Responsys. \n\n*giftListToken*: The token used to attach a gift list to a profile.  Comes from Concierge email. \n\n**Member Flow Attributes** \n\n*validateMemberTC*: boolean indicating we are in the member flow.  Tells the system we need to validate membership terms and conditions. \n\n*acceptMembershipTC*: boolean indicating user acceptance of membership TC. ",
            "operationId":"createEstoreWebAccount",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/RegistrationInfo"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/RegistrationInfoResponse"
                  }
               },
               "400":{
                  "description":"Invalid input supplied"
               }
            }
         },
         "options":{
            "tags":[
               "account"
            ],
            "summary":"Handles CORS preflight requests ",
            "description":"",
            "operationId":"createEstoreWebAccountOptions",
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/account/user/v1/info":{
         "get":{
            "tags":[
               "account"
            ],
            "summary":"Gets basic display information for profile.",
            "description":"For Web this will return the basic info of the customer in session.   For Concierge this will return the customer the concierge agent is working on.\n\n**Web Attributes** \n\nfirstName\n\nlastName\n\n**Concierge Attributes** \n\nfirstName \n\nlastName\n\nemail\n\nregistered\n\nhasMembershipSku",
            "operationId":"getCustomerDisplayInfo",
            "produces":[
               "application/json"
            ],
            "parameters":[
               
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/ConciergeCustomerInfo"
                  }
               }
            }
         }
      },
      "/brand/list":{
         "get":{
            "tags":[
               "brand"
            ],
            "summary":" This service lists RH's brands off of site repository.",
            "description":"",
            "operationId":"listBrands",
            "produces":[
               "application/json"
            ],
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/cart/address/v1":{
         "get":{
            "tags":[
               "cart"
            ],
            "summary":"Returns the orders shiiping and billing address .",
            "description":"Returns the shipping and billing  address from the current order.If the Order Id is passed it will pull the Orders billing and shipping Address. Requires a session to be established.",
            "operationId":"getOrderAddress",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"orderId",
                  "in":"query",
                  "description":"Optional value indicating which order in the cart to reference.  Three choices are 'current', 'last', or the actual ID.  If nothing is passed the system defaults to 'current'",
                  "required":false,
                  "type":"string",
                  "x-example":"H12345"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/OrderAddressBean"
                  }
               }
            }
         }
      },
      "/cart/delivery/v1/{itemId}":{
         "get":{
            "tags":[
               "fulfillment"
            ],
            "summary":"Provides delivery information for a line item on the cart.",
            "description":"Requires a session.  Provides delivery information for line items in the cart.",
            "operationId":"fetchItemDeliveryInfo",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"orderId",
                  "in":"query",
                  "description":"Optional value indicating which order in the cart to reference.  Three choices are 'current', 'last', or the actual ID.  If nothing is passed the system defaults to 'current'",
                  "required":false,
                  "type":"string",
                  "x-example":"H12345"
               },
               {
                  "name":"itemId",
                  "in":"path",
                  "description":"The ID of the commerce (line) item on the order.",
                  "required":true,
                  "type":"string",
                  "x-example":"ci1000001"
               },
               {
                  "name":"pc",
                  "in":"cookie",
                  "description":"Optional postal code parameter retrieved from the 'pc' cookie. Used for inventory info.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"postalCode",
                  "in":"query",
                  "description":"Optional postal code parameter, overrides 'pc' parameter. ",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/DeliveryInfoBean"
                  }
               },
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Item does not exist for passed inputs."
               }
            }
         }
      },
      "/cart/fulfillment/v1/{itemId}":{
         "get":{
            "tags":[
               "fulfillment"
            ],
            "summary":"Aggregates availability, delivery, and restriction info for cart line items.",
            "description":"Requires a session.  Provides availability, delivery, and restriction information for line items in the cart.",
            "operationId":"buildFulfillmentInfo",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"orderId",
                  "in":"query",
                  "description":"Optional value indicating which order in the cart to reference.  Three choices are 'current', 'last', or the actual ID.  If nothing is passed the system defaults to 'current'",
                  "required":false,
                  "type":"string",
                  "x-example":"H12345"
               },
               {
                  "name":"itemId",
                  "in":"path",
                  "description":"The ID of the commerce (line) item on the order.",
                  "required":true,
                  "type":"string",
                  "x-example":"ci1000001"
               },
               {
                  "name":"pc",
                  "in":"cookie",
                  "description":"Optional postal code parameter retrieved from the 'pc' cookie. Used for inventory info.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"postalCode",
                  "in":"query",
                  "description":"Optional postal code parameter, overrides 'pc' parameter. ",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/FulfillmentAggrBean"
                  }
               },
               "400":{
                  "description":"Malformed parameter input"
               },
               "404":{
                  "description":"Line item does not exist for passed inputs."
               }
            }
         }
      },
      "/cart/groups/v1":{
         "get":{
            "tags":[
               "cart"
            ],
            "summary":"Returns line item groups in the cart.",
            "description":"Returns the correctly sorted list of line item groups in the cart.  Requires a session to be established.",
            "operationId":"getCartItemGroups",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"orderId",
                  "in":"query",
                  "description":"Optional value indicating which order in the cart to reference.  Three choices are 'current', 'last', or the actual ID.  If nothing is passed the system defaults to 'current'",
                  "required":false,
                  "type":"string",
                  "x-example":"H12345"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/OrderItemGroupBean"
                  }
               }
            }
         }
      },
      "/cart/inventory/v1/{itemId}":{
         "get":{
            "tags":[
               "fulfillment"
            ],
            "summary":"Provides availability information for a specific sku.",
            "description":"Requires a session.  Provides availability information for line items in the cart.",
            "operationId":"fetchInventory",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"orderId",
                  "in":"query",
                  "description":"Optional value indicating which order in the cart to reference.  Three choices are 'current', 'last', or the actual ID.  If nothing is passed the system defaults to 'current'",
                  "required":false,
                  "type":"string",
                  "x-example":"H12345"
               },
               {
                  "name":"itemId",
                  "in":"path",
                  "description":"The ID of the commerce (line) item on the order.",
                  "required":true,
                  "type":"string",
                  "x-example":"ci1000001"
               },
               {
                  "name":"pc",
                  "in":"cookie",
                  "description":"Optional postal code parameter retrieved from the 'pc' cookie. Used for inventory info.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"postalCode",
                  "in":"query",
                  "description":"Optional postal code parameter, overrides 'pc' parameter. ",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/InventoryInfoBean"
                  }
               },
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Item does not exist for passed inputs."
               }
            }
         }
      },
      "/cart/item/v1/{itemId}":{
         "get":{
            "tags":[
               "cart"
            ],
            "summary":"Gives back the line item detail for a given id.",
            "description":"Returns the current state of a given line item.  Requires a session to be established.  Will check both the current cart and the last cart (allows historical thank you page).",
            "operationId":"getLineItem",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"orderId",
                  "in":"query",
                  "description":"Optional value indicating which order in the cart to reference.  Three choices are 'current', 'last', or the actual ID.  If nothing is passed the system defaults to 'current'",
                  "required":false,
                  "type":"string",
                  "x-example":"H12345"
               },
               {
                  "name":"itemId",
                  "in":"path",
                  "description":"The ID of the line item on the order.",
                  "required":true,
                  "type":"string",
                  "x-example":"ci1000001"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/LineItemBean"
                  }
               }
            }
         }
      },
      "/cart/itemList/v1":{
         "get":{
            "tags":[
               "cart"
            ],
            "summary":"Gives back the line item detail for a list of ids.",
            "description":"Returns the current state of a given line item.  Requires a session to be established.  Will check both the current cart and the last cart (allows historical thank you page).",
            "operationId":"getLineItemsById",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"orderId",
                  "in":"query",
                  "description":"Optional value indicating which order in the cart to reference.  Three choices are 'current', 'last', or the actual ID.  If nothing is passed the system defaults to 'current'",
                  "required":false,
                  "type":"string",
                  "x-example":"H12345"
               },
               {
                  "name":"itemIds",
                  "in":"query",
                  "description":"The ID of the line item on the order.",
                  "required":true,
                  "type":"string",
                  "x-example":"ci1000001"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/LineItemBean"
                  }
               }
            }
         }
      },
      "/cart/items/v1":{
         "get":{
            "tags":[
               "cart"
            ],
            "summary":"Returns the item ids in the cart.",
            "description":"Returns the correctly sorted list of line item ids in the cart.  Requires a session to be established.",
            "operationId":"getCartItemIds",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"orderId",
                  "in":"query",
                  "description":"Optional value indicating which order in the cart to reference.  Three choices are 'current', 'last', or the actual ID.  If nothing is passed the system defaults to 'current'",
                  "required":false,
                  "type":"string",
                  "x-example":"H12345"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/OrderItemsBean"
                  }
               }
            }
         }
      },
      "/cart/restrictions/v1/{itemId}":{
         "get":{
            "tags":[
               "fulfillment"
            ],
            "summary":"Provides delivery information for a line item on the cart.",
            "description":"Requires a session.  Provides delivery restriction info for line items in the cart.",
            "operationId":"fetchItemRestrictions",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"orderId",
                  "in":"query",
                  "description":"Optional value indicating which order in the cart to reference.  Three choices are 'current', 'last', or the actual ID.  If nothing is passed the system defaults to 'current'",
                  "required":false,
                  "type":"string",
                  "x-example":"H12345"
               },
               {
                  "name":"itemId",
                  "in":"path",
                  "description":"The ID of the commerce (line) item on the order.",
                  "required":true,
                  "type":"string",
                  "x-example":"ci1000001"
               },
               {
                  "name":"pc",
                  "in":"cookie",
                  "description":"Optional postal code parameter retrieved from the 'pc' cookie. Used for inventory info.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"postalCode",
                  "in":"query",
                  "description":"Optional postal code parameter, overrides 'pc' parameter. ",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/DeliveryInfoBean"
                  }
               },
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Item does not exist for passed inputs."
               }
            }
         }
      },
      "/cart/totals/v1":{
         "get":{
            "tags":[
               "cart"
            ],
            "summary":"Returns the cart totals.",
            "description":"Returns the various order total details for the order.  Requires a session to be established.",
            "operationId":"getCartTotals",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"orderId",
                  "in":"query",
                  "description":"Optional value indicating which order in the cart to reference.  Three choices are 'current', 'last', or the actual ID.  If nothing is passed the system defaults to 'current'",
                  "required":false,
                  "type":"string",
                  "x-example":"H12345"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/OrderTotalBean"
                  }
               }
            }
         }
      },
      "/cart/v1/addItem":{
         "post":{
            "tags":[
               "checkout",
               "cart",
               "order"
            ],
            "summary":"Provides add to cart service for simple sku types (shelf stock and spo).",
            "description":"Requires a session.  Provides add to cart for simple sku types (shelf stock and spo). \n\n This service requires as a minimum the  productId, and full sku id.  \n\n If the caller has the atg sku id then it is recommended to pass it.  Without the ATG sku id the system will  attempt to look up the appropriate one by following the child skus of the product. \n\n Incorporates the following business validations:  \n\n The system has a max line item count that cannot be exceeded. At the time of this writing that value was 170 lines. \n\n Special order items labeled as Pre-Bill need to have the accepted terms boolean passed to add them to cart. \n\n Since this is an open service the system will verify that the arguments passed in actually map to purchasable items.  \n\n Any items that do not map to purchasable items will be filtered out prior to submission. \n\n In the event that all items are filtered out the system will return a 400 response. \n\n If some of the items pass validation and are added then the system will return a 207 response along with the list of items that could not be added",
            "operationId":"addItemToCart",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/AddItemsToOrderRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"All Items added successfully."
               },
               "207":{
                  "description":"Not all items were added."
               },
               "400":{
                  "description":"Invalid Input."
               },
               "500":{
                  "description":"Server Error."
               }
            }
         },
         "options":{
            "tags":[
               "checkout",
               "cart",
               "order"
            ],
            "summary":"Handles CORS preflight requests ",
            "description":"",
            "operationId":"addItemToCartOptions",
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/cart/v1/clearCart":{
         "post":{
            "tags":[
               "checkout",
               "cart",
               "order"
            ],
            "summary":"Clears items in cart.",
            "description":"Requires a session. \n\n Preserves current order id and clears contents of current cart.  \n\n Resets any grouping decisions. \n\n Resets any future dates.",
            "operationId":"clearCart",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid Input."
               },
               "500":{
                  "description":"Server Error."
               }
            }
         },
         "options":{
            "tags":[
               "checkout",
               "cart",
               "order"
            ],
            "summary":"Handles CORS preflight requests ",
            "description":"",
            "operationId":"clearCartOptions",
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/cart/v1/updatePostalCode":{
         "post":{
            "tags":[
               "checkout",
               "cart",
               "order"
            ],
            "summary":"Sets the postal code for the user session.",
            "description":"Operates on current session. Requires a session. \n\nUpdates the user postal code which triggers other updates such as: \n\nChanges membership sku between US and CAN. \n\nReapplies mattress recycling checks. \n\nChanges membership sku between US and CAN. \n\nResets waived shipping. \n\nUpdates price overrides. ",
            "operationId":"applyPostalCode",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/UpdatePostalBean"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid Input."
               },
               "500":{
                  "description":"Server Error."
               }
            }
         },
         "options":{
            "tags":[
               "checkout",
               "cart",
               "order"
            ],
            "summary":"Handles CORS preflight requests ",
            "description":"",
            "operationId":"applyPostalCodeOptions",
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/catalog/v1":{
         "get":{
            "tags":[
               "catalog"
            ],
            "summary":"Json representation of the catalog",
            "description":"Returns the site matching the Url domain.",
            "operationId":"generateCatalog",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"filter",
                  "in":"query",
                  "description":"sale filter param either 'sale' or 'finalSale' - can be empty",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "sale",
                     "finalSale"
                  ]
               },
               {
                  "name":"catalogOverride",
                  "in":"query",
                  "description":"override catalog for beach house / ski house' - can be empty",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"platform",
                  "in":"query",
                  "description":"platform for e.g. ESTORE/CONCIERGE",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/catalog/v1/{id}":{
         "get":{
            "tags":[
               "catalog"
            ],
            "summary":"Json representation of the catalog",
            "description":"Displays the catalog for the given site id",
            "operationId":"generateCatalogNav",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"site id",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"filter",
                  "in":"query",
                  "description":"sale filter param either 'sale' or 'finalSale' - can be empty",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "sale",
                     "finalSale"
                  ]
               },
               {
                  "name":"catalogOverride",
                  "in":"query",
                  "description":"override catalog for beach house / ski house' - can be empty",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"APP_ID",
                  "in":"query",
                  "description":"APP_ID for e.g. ESTORE/CONCIERGE",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "ESTORE",
                     "CONCIERGE"
                  ]
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Site does not exist in the system"
               }
            }
         }
      },
      "/category/collectiongallery/v1/{id}":{
         "get":{
            "tags":[
               "category"
            ],
            "summary":"Provides collection gallery view of a category.  Caller can specify an optional range of entries to return.",
            "description":"Collection gallery view is very specific, it is a flattened hierarchy that exposes all categories marked as collections beneath it.  The caller can specify a range of values to be returned.  This facilitates incremental page loading.  \n \n The system uses the hostname to determine the site when site specific values. \n \n The response is an object array that organizes the categories in order of appearance.",
            "operationId":"generateCollectionGallery",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"id of the desired category",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"filter",
                  "in":"query",
                  "description":"sale filter param either 'sale' or 'finalSale' - can be empty",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "sale",
                     "finalSale"
                  ]
               },
               {
                  "name":"start",
                  "in":"query",
                  "description":"start index for the range.  Base 0.  If no value passed it uses zero '0'",
                  "required":false,
                  "type":"integer",
                  "default":0,
                  "minimum":0,
                  "format":"int32"
               },
               {
                  "name":"count",
                  "in":"query",
                  "description":"Number of product json objects to return including element at 'start' index. Negative value or zero will return the entire set beginning with 'start'.",
                  "required":false,
                  "type":"integer",
                  "default":18,
                  "minimum":0,
                  "format":"int32"
               },
               {
                  "name":"currencyCode",
                  "in":"query",
                  "description":"user's currency code for displaying the correct currency",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "USD",
                     "CAD"
                  ]
               },
               {
                  "name":"countryCode",
                  "in":"query",
                  "description":"user's country code (from ip) for displaying the correct currency",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"userType",
                  "in":"query",
                  "description":"user type for displaying the correct prices",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "regular",
                     "member",
                     "trade",
                     "contract"
                  ]
               },
               {
                  "name":"deviceType",
                  "in":"query",
                  "description":"device type for e.g. mobile/tablet/desktop",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"APP_ID",
                  "in":"query",
                  "description":"platform for e.g. ESTORE/CONCIERGE",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "ESTORE",
                     "CONCIERGE"
                  ]
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Category does not exist in the system"
               }
            }
         }
      },
      "/category/productgallery/v1/{id}":{
         "get":{
            "tags":[
               "category"
            ],
            "summary":"Provides product gallery view of a category.  Caller can specify an optional range of entries to return.",
            "description":"Product gallery view is very specific, it is a flattened hierarchy that exposes all products beneath it.  The caller can specify a range of values to be returned.  This facilitates incremental page loading.  \n \n The system uses the hostname to determine the site when rendering price labels for products. \n \n The response is an object array that organizes the products beneath their anchor category in multiples of 3.   You'll get an ordered array that can look like this \n \n Category  \n Product  \n Product  \n Product  \n Category  \n Product  \n \n The 'type' attribute in the json object can be used to distinguish between them for display purposes. \n \n The 'cols' parameter specifies how many columns the range will display.  Not every category will have child products in multiples of 'cols' value.  To aid the UI display logic the system will supply placeholder products identified with an id of 'BLANK'.  Callers can actively seek these out and omit them from display. \n \n Finally the results will omit duplicate products for the 'finalSale' filter.  The other filter values will include duplicate values as the system does allow a product to belong in multiple categories.",
            "operationId":"generateProductGallery",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"id of the desired category",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"parentCatId",
                  "in":"query",
                  "description":"Parent category Id",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"filter",
                  "in":"query",
                  "description":"Sale filter param either 'sale' or 'finalSale'.  If you don't need to filter then do not pass the param.",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "sale",
                     "finalSale"
                  ]
               },
               {
                  "name":"cols",
                  "in":"query",
                  "description":"Number of columns to display.  If no value passed system derives column count from category template.",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {
                  "name":"start",
                  "in":"query",
                  "description":"start index for the range.  Base 0.  If no value passed it uses zero '0'",
                  "required":false,
                  "type":"integer",
                  "default":0,
                  "minimum":0,
                  "format":"int32"
               },
               {
                  "name":"count",
                  "in":"query",
                  "description":"Number of product json objects to return including element at 'start' index. Negative value or zero will return the entire set beginning with 'start'.",
                  "required":false,
                  "type":"integer",
                  "default":18,
                  "minimum":0,
                  "format":"int32"
               },
               {
                  "name":"currencyCode",
                  "in":"query",
                  "description":"user's currency code for displaying the correct currency",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "USD",
                     "CAD"
                  ]
               },
               {
                  "name":"countryCode",
                  "in":"query",
                  "description":"user's country code (from ip) for displaying the correct currency",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"userType",
                  "in":"query",
                  "description":"user type for displaying the correct prices",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "regular",
                     "member",
                     "trade",
                     "contract"
                  ]
               },
               {
                  "name":"deviceType",
                  "in":"query",
                  "description":"device type for e.g. mobile/tablet/desktop",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"APP_ID",
                  "in":"query",
                  "description":"APP_ID for e.g. ESTORE/CONCIERGE",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "ESTORE",
                     "CONCIERGE"
                  ]
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Category does not exist in the system"
               }
            }
         }
      },
      "/category/products/v1/{id}":{
         "get":{
            "tags":[
               "category"
            ],
            "summary":"Provides product listing for a category.",
            "description":"The caller can specify a range of products to be returned.  This facilitates incremental page loading.  \n \n The system uses the hostname to determine the site when rendering price labels for products. \n \n The response is an object array that organizes the products in multiples of 3.   You'll get an ordered array that can look like this \n \n Product  \n Product  \n Product  \n \n The 'type' attribute in the json object can be used to distinguish between them for display purposes. \n \n The 'cols' parameter specifies how many columns the range will display.  Not every category will have child products in multiples of 'cols' value.  To aid the UI display logic the system will supply placeholder products identified with an id of 'BLANK'.  Callers can actively seek these out and omit them from display. ",
            "operationId":"generateProductGallery",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"id of the desired category",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"filter",
                  "in":"query",
                  "description":"Sale filter param either 'sale' or 'finalSale'.  If you don't need to filter then do not pass the param.",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "sale",
                     "finalSale"
                  ]
               },
               {
                  "name":"cols",
                  "in":"query",
                  "description":"Number of columns to display.  If no value passed system derives column count from category template.",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {
                  "name":"start",
                  "in":"query",
                  "description":"start index for the range.  Base 0.  If no value passed it uses zero '0'",
                  "required":false,
                  "type":"integer",
                  "default":0,
                  "minimum":0,
                  "format":"int32"
               },
               {
                  "name":"count",
                  "in":"query",
                  "description":"Number of product json objects to return including element at 'start' index. Negative value or zero will return the entire set beginning with 'start'.",
                  "required":false,
                  "type":"integer",
                  "default":18,
                  "minimum":0,
                  "format":"int32"
               },
               {
                  "name":"currencyCode",
                  "in":"query",
                  "description":"user's currency code for displaying the correct currency",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "USD",
                     "CAD"
                  ]
               },
               {
                  "name":"countryCode",
                  "in":"query",
                  "description":"user's country code (from ip) for displaying the correct currency",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"userType",
                  "in":"query",
                  "description":"user type for displaying the correct prices",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "regular",
                     "member",
                     "trade",
                     "contract"
                  ]
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Category does not exist in the system"
               }
            }
         }
      },
      "/commerceitem/v1/setNotes":{
         "post":{
            "tags":[
               "commerceitem"
            ],
            "summary":"Update CommerceItem Notes",
            "description":"",
            "operationId":"setNotes",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/CommerceItemNotesRequestBean"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to update the Order"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            }
         }
      },
      "/content/fragment/v1/{group}/{key}":{
         "get":{
            "tags":[
               "display"
            ],
            "summary":"Returns copy fragments from the dynamic content repository.",
            "description":"",
            "operationId":"getContentFragment",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"group",
                  "in":"path",
                  "description":"Group identifier for the content block.",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"key",
                  "in":"path",
                  "description":"Key identifier for the content block.",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"args",
                  "in":"query",
                  "description":"Optional comma-separated list of args passed into the copy for formatting.Important : {2},{3},{4} are reserved args. System with autmatically generate value for thesearg2 {2} used to setting currency symbol based on countryarg3 {3} used for setting Membership price based on countryarg4 {4} used to show currency label based on country eg US,CA",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "404":{
                  "description":"Fragment not found for passed in group and key combination."
               }
            }
         }
      },
      "/content/geotarget/v1/myLocation":{
         "get":{
            "tags":[
               "display"
            ],
            "summary":"Convenience method to show your geo location as pulled from Akamai Header.",
            "description":"",
            "operationId":"showAkamaiHeaderValues",
            "produces":[
               "application/json"
            ],
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/content/geotarget/v1/{context}":{
         "get":{
            "tags":[
               "display"
            ],
            "summary":"Only provides geo-target promotions",
            "description":"The results will include any geo-target promotions valid for the X-Akamai-Edgescape header. \n \nReturned promotions are sorted by distance to location priority.\n \nLatitude and Longitude parameters are accepted and will override header values.  These are provided as a convenience for development and testing.",
            "operationId":"generateGeoTargetDisplay",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"context",
                  "in":"path",
                  "description":"Name of the context for which to fetch content",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"categoryId",
                  "in":"query",
                  "description":"If passed the system will filter out any promos whose 'applicableForCategories' does not contain the passed value.  Promos with no values in 'applicableForCategories' are considered valid",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"lat",
                  "in":"query",
                  "description":"latitude (overrides header)",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"long",
                  "in":"query",
                  "description":"longitude (overrides header)",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "404":{
                  "description":"Context does not exist in the system"
               }
            }
         }
      },
      "/content/promodisplay/v1":{
         "get":{
            "tags":[
               "display"
            ],
            "summary":"Displays available contexts",
            "description":"Provided as a convenience to allow discovery of the available contexts.",
            "operationId":"fetchDisplayContexts",
            "produces":[
               "application/json"
            ],
            "parameters":[
               
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "type":"string"
                  }
               }
            }
         }
      },
      "/content/promodisplay/v1/id/{promoId}":{
         "get":{
            "tags":[
               "display"
            ],
            "summary":"Returns Promotion Display Content based on Promo Id.",
            "description":"This API will return promotion display based on promo id as input.\nThe response will be a json object containing one promotion display and may have one or more sub items.",
            "operationId":"findPromoDisplayById",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"promoId",
                  "in":"path",
                  "description":"Promo Id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "404":{
                  "description":"PromoId does not exist in the system"
               }
            }
         }
      },
      "/content/promodisplay/v1/{context}":{
         "get":{
            "tags":[
               "display"
            ],
            "summary":"Returns Promotion Display Content by context region and geo-target location",
            "description":"Here the term context really just refers to a keyword used to fetch content elements mapped to it.  Use the /content/{version}/promodisplay api to view the current list of available contexts \n \nThe results will include any geo-target promotions valid for the X-Akamai-Edgescape header. \n \nReturned promotions are sorted by marketing priority (including geo-target)",
            "operationId":"generatePromoDisplay",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"context",
                  "in":"path",
                  "description":"Name of the context for which to fetch content",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"categoryId",
                  "in":"query",
                  "description":"If passed the system will filter out any promos whose 'applicableForCategories' does not contain the passed value.  Promos with no values in 'applicableForCategories' are considered valid",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "404":{
                  "description":"Context does not exist in the system"
               }
            }
         }
      },
      "/contract/payment/make-payment":{
         "post":{
            "tags":[
               "contractpayment"
            ],
            "summary":"This Resource accepts Payment For Contract Orders ",
            "description":"",
            "operationId":"makePayment",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "type":"string"
                  }
               }
            }
         },
         "options":{
            "tags":[
               "contractpayment"
            ],
            "summary":"Handles CORS preflight requests ",
            "description":"",
            "operationId":"makePaymentOptions",
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/contract/payment/remove-payment":{
         "post":{
            "tags":[
               "contractpayment"
            ],
            "summary":"This Resource removes Payment For Contract Orders ",
            "description":"",
            "operationId":"removePayment",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "type":"string"
                  }
               }
            }
         },
         "options":{
            "tags":[
               "contractpayment"
            ],
            "summary":"Handles CORS preflight requests ",
            "description":"",
            "operationId":"removePaymentOptions",
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/contract/payment/validate-token":{
         "get":{
            "tags":[
               "contractpayment"
            ],
            "summary":"This Resource provides Validation for the PaymentToken ",
            "description":"",
            "operationId":"validatePaymentToken",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"orderId",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"paymentToken",
                  "in":"query",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "type":"string"
                  }
               }
            }
         }
      },
      "/customer-expirience/v1/unsubsribeEmail":{
         "post":{
            "tags":[
               "email"
            ],
            "summary":"Sends email to Gallery Locator.",
            "description":"Posting request to form so that email can be sent to Gallery Contact person for scheduling appointment.",
            "operationId":"unsubscribeEmail",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/MarketingRequestBean"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to submit the request."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/custsku/delivery/v1/{productId}":{
         "get":{
            "tags":[
               "fulfillment",
               "sku"
            ],
            "summary":"Provides delivery info for custom products.",
            "description":"This service exposes delivery type and fee information for custom skus.  It has the same arguments as the main sku delivery service plus additional arguments required to determine whether or not the customized product is oversized and therefore should be shipped differently due to its dimensions.  See the main sku delivery service endpoint /sku/delivery/v1/{productId} for additional details",
            "operationId":"fetchDeliveryInfo",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"pc",
                  "in":"cookie",
                  "description":"Optional postal code parameter retrieved from the 'pc' cookie. Used for inventory info.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"postalCode",
                  "in":"query",
                  "description":"Optional postal code parameter, overrides 'pc' parameter. Used for inventory info.  Passing 'unset' will pass null for pc.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"productId",
                  "in":"path",
                  "description":"The ID of the product the sku belongs to.",
                  "required":true,
                  "type":"string",
                  "x-example":"prod1617246"
               },
               {
                  "name":"fullSkuId",
                  "in":"query",
                  "description":"full sku id",
                  "required":false,
                  "type":"string",
                  "x-example":"62930640 BLBK"
               },
               {
                  "name":"length",
                  "in":"query",
                  "description":"length",
                  "required":false,
                  "type":"number",
                  "minimum":0,
                  "format":"double"
               },
               {
                  "name":"width",
                  "in":"query",
                  "description":"width",
                  "required":false,
                  "type":"number",
                  "minimum":0,
                  "format":"double"
               },
               {
                  "name":"diameter",
                  "in":"query",
                  "description":"diameter",
                  "required":false,
                  "type":"number",
                  "minimum":0,
                  "format":"double"
               },
               {
                  "name":"continuousLoop",
                  "in":"query",
                  "description":"Optional custom rug boolean. Defaults to 'false' if not passed.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"siteId",
                  "in":"query",
                  "description":"Optional site id passed in to override the one pulled from the domain context.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"lineId",
                  "in":"query",
                  "description":"Optional parameter passed into the service and returned back to the caller as the lineId.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"isProject",
                  "in":"query",
                  "description":"Optional parameter indicating this call came from within a concierge project. This has the effect of forcing the currency and country codes to that of the passed in postal",
                  "required":false,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/DeliveryInfoBean"
                  }
               },
               "400":{
                  "description":"Malformed parameter input."
               },
               "404":{
                  "description":"Delivery data does not exist for passed id."
               }
            }
         }
      },
      "/custsku/inventory/v1/{productId}":{
         "get":{
            "tags":[
               "fulfillment",
               "sku"
            ],
            "summary":"Provides availability information for custom skus.",
            "description":"This service exposes availability information for custom skus.  It has the same arguments as the main sku availability service plus additional arguments required to determine whether or not the customized product is oversized and therefore should be shipped differently due to its dimensions.  See the main sku availability service endpoint /sku/inventory/v1/{productId} for additional details",
            "operationId":"fetchInventory",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"productId",
                  "in":"path",
                  "description":"The ID of the product the sku belongs to.",
                  "required":true,
                  "type":"string",
                  "x-example":"prod1617246"
               },
               {
                  "name":"pc",
                  "in":"cookie",
                  "description":"Optional postal code parameter retrieved from the 'pc' cookie. Used for inventory info.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"postalCode",
                  "in":"query",
                  "description":"Optional postal code parameter, overrides 'pc' parameter. Used for inventory info.  Passing 'unset' will pass null for pc.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"fullSkuId",
                  "in":"query",
                  "description":"full sku id",
                  "required":false,
                  "type":"string",
                  "x-example":"62930640 BLBK"
               },
               {
                  "name":"optionIds",
                  "in":"query",
                  "description":"csv list of option ids",
                  "required":false,
                  "type":"string",
                  "x-example":"37200035,400022,49700003"
               },
               {
                  "name":"qty",
                  "in":"query",
                  "description":"Optional quantity parameter used for inventory info. Defaults to '0' if not passed.",
                  "required":false,
                  "type":"integer",
                  "minimum":0,
                  "format":"int32"
               },
               {
                  "name":"monogram",
                  "in":"query",
                  "description":"Optional boolean indicates monogram. Defaults to 'false' if not passed.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"length",
                  "in":"query",
                  "description":"length",
                  "required":false,
                  "type":"number",
                  "minimum":0,
                  "format":"double"
               },
               {
                  "name":"width",
                  "in":"query",
                  "description":"width",
                  "required":false,
                  "type":"number",
                  "minimum":0,
                  "format":"double"
               },
               {
                  "name":"diameter",
                  "in":"query",
                  "description":"diameter",
                  "required":false,
                  "type":"number",
                  "minimum":0,
                  "format":"double"
               },
               {
                  "name":"continuousLoop",
                  "in":"query",
                  "description":"Optional custom rug boolean. Defaults to 'false' if not passed.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"siteId",
                  "in":"query",
                  "description":"Optional site id passed in to override the one pulled from the domain context.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"lineId",
                  "in":"query",
                  "description":"Optional parameter passed into the service and returned back to the caller as the lineId.",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/InventoryInfoBean"
                  }
               },
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Sku does not exist for passed inputs."
               }
            }
         }
      },
      "/custsku/restrictions/v1/{productId}":{
         "get":{
            "tags":[
               "fulfillment",
               "sku"
            ],
            "summary":"Provides delivery restriction messages for custom products.",
            "description":"This service fetches delivery restrictions for custom skus.  It has the same arguments as the main restrictions service plus additional arguments required to determine whether or not the customized product is oversized and therefore has different messages due to its dimensions.  \n\n**Custom Product Restrictions and Fees** \n\n*railroadMessage*: Roller shades over specific widths AND lengths will be made with a 'railroad' seam. This message informs the customer of this.  The maximum value before a railroad seam is required varies by sku but generally is around 96 inches or greater in width and length.",
            "operationId":"fetchDeliveryRestriction",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"pc",
                  "in":"cookie",
                  "description":"Optional postal code parameter retrieved from the 'pc' cookie. Used for inventory info.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"postalCode",
                  "in":"query",
                  "description":"Optional postal code parameter, overrides 'pc' parameter. Used for inventory info.  Passing 'unset' will pass null for pc.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"productId",
                  "in":"path",
                  "description":"The ID of the product the sku belongs to.",
                  "required":true,
                  "type":"string",
                  "x-example":"prod1617246"
               },
               {
                  "name":"fullSkuId",
                  "in":"query",
                  "description":"full sku id",
                  "required":false,
                  "type":"string",
                  "x-example":"62930640 BLBK"
               },
               {
                  "name":"qty",
                  "in":"query",
                  "description":"Optional quantity parameter used for inventory info. Defaults to '0' if not passed.",
                  "required":false,
                  "type":"integer",
                  "default":1,
                  "minimum":0,
                  "format":"int32"
               },
               {
                  "name":"length",
                  "in":"query",
                  "description":"length",
                  "required":false,
                  "type":"number",
                  "minimum":0,
                  "format":"double"
               },
               {
                  "name":"width",
                  "in":"query",
                  "description":"width",
                  "required":false,
                  "type":"number",
                  "minimum":0,
                  "format":"double"
               },
               {
                  "name":"diameter",
                  "in":"query",
                  "description":"diameter",
                  "required":false,
                  "type":"number",
                  "minimum":0,
                  "format":"double"
               },
               {
                  "name":"continuousLoop",
                  "in":"query",
                  "description":"Optional custom rug boolean. Defaults to 'false' if not passed.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"siteId",
                  "in":"query",
                  "description":"Optional site id passed in to override the one pulled from the domain context.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"lineId",
                  "in":"query",
                  "description":"Optional parameter passed into the service and returned back to the caller as the lineId.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"isProject",
                  "in":"query",
                  "description":"Optional parameter indicating this call came from within a concierge project. This has the effect of forcing the currency and country codes to that of the passed in postal",
                  "required":false,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/DeliveryRestrictionBean"
                  }
               },
               "400":{
                  "description":"Malformed parameter input."
               },
               "404":{
                  "description":"Delivery data does not exist for passed id."
               }
            }
         }
      },
      "/enterprise/freightexempt/v1/{fullSkuId}":{
         "get":{
            "tags":[
               "Enterprise"
            ],
            "summary":"Provides freight exempt information for a specific full sku id.",
            "description":"Primarily used to providing freight exempt information. This API requires Full Sku Id as param passed as query arguments in the request.  ",
            "operationId":"getFreightExemptInformation",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"fullSkuId",
                  "in":"path",
                  "description":"Full Sku Id",
                  "required":true,
                  "type":"string",
                  "x-example":"62930640 BLBK"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/FreightExemptInfoBean"
                  }
               },
               "400":{
                  "description":"Malformed parameter input - missing or not valid alphanumerics"
               },
               "404":{
                  "description":"Freight Exempt information does not exist for passed Full Sku Id."
               }
            }
         }
      },
      "/forecasting/opportunity/v1/{id}":{
         "get":{
            "tags":[
               "OpportunityLookup"
            ],
            "summary":"Fetch opportunity",
            "description":"Get the opportunity based on the opportunityId",
            "operationId":"getOpportunity",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"Opportunity Id to be fetch",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/freight/rates/v1":{
         "get":{
            "tags":[
               "freight"
            ],
            "summary":"Provides the list of freight types.",
            "description":"",
            "operationId":"fetchRateTypes",
            "produces":[
               "application/json"
            ],
            "parameters":[
               
            ],
            "responses":{
               "400":{
                  "description":"Malformed input"
               },
               "404":{
                  "description":"Item does not exist for passed input."
               }
            }
         }
      },
      "/freight/rates/v1/{freightType}":{
         "get":{
            "tags":[
               "freight"
            ],
            "summary":"Provides shipping rate tables.",
            "description":"Returns the shipping rates for a given rate type.  Country code accepted for US or CA.  Default is US. You can obtain the list of available types using the /rh/api/freight/rates/v1 endpoint",
            "operationId":"fetchFreightRates",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"freightType",
                  "in":"path",
                  "description":"Freight Type",
                  "required":true,
                  "type":"string",
                  "x-example":"ground"
               },
               {
                  "name":"country",
                  "in":"query",
                  "description":"(optional) 2-digit country code",
                  "required":false,
                  "type":"string",
                  "x-example":"US"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/FreightInfo"
                  }
               },
               "400":{
                  "description":"Malformed input"
               },
               "404":{
                  "description":"Item does not exist for passed input."
               }
            }
         }
      },
      "/freight/ufd/v1/{postalCode}":{
         "get":{
            "tags":[
               "freight"
            ],
            "summary":"Returns the Ulimited Furniture Delivery freight by postal code.",
            "description":"Returns the UFD shipping cost and zone for a given postal code.",
            "operationId":"fetchUFDRate",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"postalCode",
                  "in":"path",
                  "description":"Postal Code",
                  "required":true,
                  "type":"string",
                  "x-example":"M5V 1J9"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/HomeDeliveryFreight"
                  }
               },
               "400":{
                  "description":"Malformed input"
               },
               "404":{
                  "description":"Item does not exist for passed input."
               }
            }
         }
      },
      "/giftlist/item/v1/addItem":{
         "post":{
            "tags":[
               "checkout",
               "cart",
               "order"
            ],
            "summary":"Provides add to cart service for simple sku types (shelf stock and spo).",
            "description":"Requires a session.  Provides add to cart for simple sku types (shelf stock and spo). \n\n This service requires as a minimum the  productId, and full sku id.  \n\n If the caller has the atg sku id then it is recommended to pass it.  Without the ATG sku id the system will  attempt to look up the appropriate one by following the child skus of the product. \n\n Incorporates the following business validations:  \n\n The system has a max line item count that cannot be exceeded. At the time of this writing that value was 170 lines. \n\n Special order items labeled as Pre-Bill need to have the accepted terms boolean passed to add them to cart. \n\n Since this is an open service the system will verify that the arguments passed in actually map to purchasable items.  \n\n Any items that do not map to purchasable items will be filtered out prior to submission. \n\n In the event that all items are filtered out the system will return a 400 response. \n\n If some of the items pass validation and are added then the system will return a 207 response along with the list of items that could not be added",
            "operationId":"addItemToGiftList",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/AddItemsToWishlistRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"All Items added successfully."
               },
               "207":{
                  "description":"Not all items were added."
               },
               "400":{
                  "description":"Invalid Input."
               },
               "500":{
                  "description":"Server Error."
               }
            }
         }
      },
      "/giftlist/item/v1/list":{
         "get":{
            "tags":[
               "checkout",
               "cart",
               "order"
            ],
            "summary":"Gets gift lists of the logged in profile.",
            "description":"",
            "operationId":"getGiftListsInfo",
            "produces":[
               "application/json"
            ],
            "parameters":[
               
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/GiftListResponse"
                  }
               }
            }
         }
      },
      "/internal/ads/lookupAccount":{
         "post":{
            "tags":[
               "ads",
               "payment"
            ],
            "summary":"Lookup Ads account.",
            "description":"Requires a session. Ads lookup service.",
            "operationId":"lookupAccount",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/AdsAccountLookupRequest"
                  }
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied"
               }
            }
         }
      },
      "/internal/cart/items":{
         "get":{
            "tags":[
               "cart"
            ],
            "summary":"Returns the items detail in the cart.",
            "description":"Returns the list of line item details in the user's current cart.",
            "operationId":"getUserCartDetails",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"profileId",
                  "in":"query",
                  "description":"Value indicating profile Id for which cart details are fetched. Required if Login param value is not passed",
                  "required":false,
                  "type":"string",
                  "x-example":"H12345"
               },
               {
                  "name":"login",
                  "in":"query",
                  "description":"Optional value indicating profile Id for which cart details are fetched. Required if Profile Id param value is not passed",
                  "required":false,
                  "type":"string",
                  "x-example":"abc@test.com"
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/internal/cart/updateState":{
         "post":{
            "tags":[
               "cart"
            ],
            "summary":"Mark the order state as MERGED.",
            "description":"Returns the list of line item details in the user's current cart.",
            "operationId":"updateOrderState",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"orderId",
                  "in":"query",
                  "description":"Value indicating order Id for which the state is updated",
                  "required":false,
                  "type":"string",
                  "x-example":"H12345"
               },
               {
                  "name":"cartId",
                  "in":"query",
                  "description":"Value indicating rhapsody Cart Id",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/internal/giftCard/checkBalance":{
         "post":{
            "tags":[
               "giftCard",
               "payment"
            ],
            "summary":"Check balance of Gift Card.",
            "description":"Requires a session. Check Balance on the Gift Card. It accepts gift card number, pin, currency code, order Id and card type",
            "operationId":"checkBalance",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/GiftCardPaymentServiceInfo"
                  }
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied"
               }
            }
         }
      },
      "/internal/giftCard/fetchTransactions":{
         "post":{
            "tags":[
               "giftCard",
               "payment"
            ],
            "summary":"Fetches transactions of Gift Card.",
            "description":"Requires a session. Fetches all transactions of Gift Card. It accepts gift card number, pin, currency code, order Id and card type",
            "operationId":"fetchTransactions",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/GiftCardPaymentServiceInfo"
                  }
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied"
               }
            }
         }
      },
      "/internal/giftCard/redeemGiftCard":{
         "post":{
            "tags":[
               "giftCard",
               "payment"
            ],
            "summary":"Redeem Gift Card.",
            "description":"Requires a session. Redeem Gift Card. It accepts gift card number,currency code, amount, order Id, store number, pin and card type",
            "operationId":"debit",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/GiftCardPaymentServiceInfo"
                  }
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied"
               }
            }
         }
      },
      "/internal/order/v1/addOrderNotes":{
         "post":{
            "tags":[
               "order"
            ],
            "summary":"Add order notes",
            "description":"Adds order history notes by orderId.",
            "operationId":"addOrderNotes",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/OrderNotesBean"
                  }
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied"
               }
            }
         }
      },
      "/internal/order/v1/getCwOrderNumber":{
         "get":{
            "tags":[
               "order"
            ],
            "summary":"Returns the spo terms message and accepted date.",
            "description":"Returns order history notes by orderId.",
            "operationId":"getCwOrderNumber",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"orderId",
                  "in":"query",
                  "description":"orderId",
                  "required":true,
                  "type":"string",
                  "x-example":"H12345"
               }
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/internal/order/v1/getOrderNotes":{
         "get":{
            "tags":[
               "order"
            ],
            "summary":"Returns the spo terms message and accepted date.",
            "description":"Returns order history notes by orderId.",
            "operationId":"getOrderNotes",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"orderId",
                  "in":"query",
                  "description":"orderId",
                  "required":true,
                  "type":"string",
                  "x-example":"H12345"
               },
               {
                  "name":"shipId",
                  "in":"query",
                  "description":"shipId",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"notesCount",
                  "in":"query",
                  "description":"notes",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"start",
                  "in":"query",
                  "description":"start",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"sort",
                  "in":"query",
                  "description":"sort",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/internal/product/skus/v1/{id}":{
         "get":{
            "tags":[
               "product"
            ],
            "summary":"Exposes the skus that are attached to the given product",
            "description":"",
            "operationId":"generateProductSkus",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"id of the desired product",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input, incorrect projections"
               },
               "404":{
                  "description":"Product does not exist for passed id."
               }
            }
         }
      },
      "/internal/project/sendCommunicationEmailForProject":{
         "post":{
            "tags":[
               "registry"
            ],
            "summary":"Create Communication for a project",
            "description":"Creating a communication.ProjectId, Selected Items, list of recipients are mandatory parameters. ",
            "operationId":"sendCommunicationEmailForProject",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/SendProjectEmailRequest"
                  }
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to create these project."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/internal/quote/v1/activity/{quoteId}":{
         "get":{
            "tags":[
               "quote"
            ],
            "summary":"Fetch quote order",
            "description":"Get the order for a quote",
            "operationId":"fetchQuoteActivity",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"quoteId",
                  "in":"path",
                  "description":"Quote Id for Activity to be fetched",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/internal/quote/v1/archive/{quoteId}":{
         "post":{
            "tags":[
               "quote"
            ],
            "summary":"Archive a Quote",
            "description":"Archives an existing Quote",
            "operationId":"archiveQuote",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"quoteId",
                  "in":"path",
                  "description":"Quote Id to be archived",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/QuoteArchiveRequest"
                  }
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid QuoteArchiveRequest supplied"
               },
               "403":{
                  "description":"Invalid authorization supplied"
               },
               "409":{
                  "description":"Invalid _sessionConf supplied"
               },
               "500":{
                  "description":"Server Error while processing."
               }
            }
         }
      },
      "/internal/quote/v1/movetocart{quoteId}":{
         "post":{
            "tags":[
               "quote"
            ],
            "summary":"Move to Cart",
            "description":"Moves the quote items into the cart",
            "operationId":"moveToCart",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"quoteId",
                  "in":"path",
                  "description":"ID of quote item to be moved to cart",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/internal/quote/v1/note/{quoteId}":{
         "post":{
            "tags":[
               "quote"
            ],
            "summary":"Add Quote Note ",
            "description":"Adds a note to an existing Quote",
            "operationId":"addQuoteNote",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"quoteId",
                  "in":"path",
                  "description":"Quote Id for note to be added",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/QuoteNoteAddRequest"
                  }
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid QuoteNoteAddRequest supplied"
               },
               "403":{
                  "description":"Invalid authorization supplied"
               },
               "409":{
                  "description":"Invalid _sessionConf supplied"
               },
               "500":{
                  "description":"Server Error while processing."
               }
            }
         },
         "options":{
            "tags":[
               "quote"
            ],
            "summary":"Handles CORS preflight requests",
            "description":"",
            "operationId":"addQuoteNoteOptions",
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/internal/quote/v1/notes/{quoteId}":{
         "get":{
            "tags":[
               "quote"
            ],
            "summary":"Fetch quote notes",
            "description":"Get the notes for a quote",
            "operationId":"fetchQuoteNotes",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"quoteId",
                  "in":"path",
                  "description":"Quote Id for notes to be fetched",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/internal/quote/v1/opportunity/{quoteId}":{
         "post":{
            "tags":[
               "quote"
            ],
            "summary":"Update a Quote Opportunity ",
            "description":"Changes the Opportunity info for an existing Quote",
            "operationId":"updateQuoteOpportunity",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"quoteId",
                  "in":"path",
                  "description":"Quote Id for opportunity to be updated",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/OpportunityUpdateRequest"
                  }
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid OpportunityUpdateRequest supplied"
               },
               "403":{
                  "description":"Invalid authorization supplied"
               },
               "409":{
                  "description":"Invalid _sessionConf supplied"
               },
               "500":{
                  "description":"Server Error while processing."
               }
            }
         },
         "options":{
            "tags":[
               "quote"
            ],
            "summary":"Handles CORS preflight requests ",
            "description":"",
            "operationId":"archiveQuoteOptions",
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/internal/quote/v1/order/{quoteId}":{
         "get":{
            "tags":[
               "quote"
            ],
            "summary":"Fetch quote order",
            "description":"Get the order for a quote",
            "operationId":"fetchQuoteOrder",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"quoteId",
                  "in":"path",
                  "description":"Quote Id for Order to be fetched",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/internal/quote/v1/search":{
         "get":{
            "tags":[
               "quote"
            ],
            "summary":"Search Quotes",
            "description":"Search for Quotes",
            "operationId":"searchQuotes",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"quoteFilter",
                  "in":"query",
                  "description":"Predefined filter for quotes: ALL, OPEN, CONVERTED.",
                  "required":false,
                  "type":"string",
                  "default":"ALL",
                  "enum":[
                     "ALL",
                     "OPEN",
                     "CONVERTED",
                     "ARCHIVED"
                  ]
               },
               {
                  "name":"sortByField",
                  "in":"query",
                  "description":"Represent the sort field name.",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "amount",
                     "customer",
                     "client",
                     "createdBy",
                     "createdOn",
                     "expiredDate",
                     "id",
                     "quoteId",
                     "opportunityId",
                     "forecast",
                     "state"
                  ]
               },
               {
                  "name":"sortDirection",
                  "in":"query",
                  "description":"Represent the sort direction either ascending or decending",
                  "required":false,
                  "type":"string",
                  "default":"asc",
                  "enum":[
                     "asc",
                     "desc"
                  ]
               },
               {
                  "name":"fieldName",
                  "in":"query",
                  "description":"The parameter is used to specify the field name in which the actual search will be performed.",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "PROFILEID",
                     "ASNUM",
                     "QID",
                     "CNAME",
                     "STNUM",
                     "EMAIL",
                     "COMP",
                     "OPTNID"
                  ]
               },
               {
                  "name":"fieldText",
                  "in":"query",
                  "description":"The parameter is used to specify the actual search text.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"pageNum",
                  "in":"query",
                  "description":"Represent the page number.If not present, then default to first page.",
                  "required":false,
                  "type":"integer",
                  "default":0,
                  "format":"int32"
               },
               {
                  "name":"recordsPerPage",
                  "in":"query",
                  "description":"Represent the number of records per page.",
                  "required":false,
                  "type":"integer",
                  "default":10,
                  "format":"int32"
               },
               {
                  "name":"paginationEnabled",
                  "in":"query",
                  "description":"Flag to enable pagination",
                  "required":true,
                  "type":"boolean",
                  "default":false,
                  "enum":[
                     "true",
                     "false"
                  ]
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         },
         "options":{
            "tags":[
               "quote"
            ],
            "summary":"Handles CORS preflight requests ",
            "description":"",
            "operationId":"searchQuotesOptions",
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/internal/quote/v1/store/{storeNumber}":{
         "get":{
            "tags":[
               "quote"
            ],
            "summary":"Fetch Information about a Store",
            "description":"Get Name, Address for a Store",
            "operationId":"fetchStoreInfo",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"storeNumber",
                  "in":"path",
                  "description":"a store number",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/internal/quote/v1/{quoteId}":{
         "get":{
            "tags":[
               "quote"
            ],
            "summary":"Fetch quote",
            "description":"Get the quote based on the QuoteId",
            "operationId":"fetchSingleQuote",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"quoteId",
                  "in":"path",
                  "description":"Quote Id to be fetch",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/internal/registry/close":{
         "post":{
            "tags":[
               "registry"
            ],
            "summary":"close registry",
            "description":"",
            "operationId":"closeRegistry",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "type":"object",
                     "additionalProperties":{
                        "type":"string"
                     }
                  }
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid Input."
               },
               "500":{
                  "description":"Server Error."
               }
            }
         }
      },
      "/internal/registry/create":{
         "post":{
            "tags":[
               "registry"
            ],
            "summary":"Creates new registry",
            "description":"",
            "operationId":"createRegistry",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/RegistryBean"
                  }
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid Input."
               },
               "500":{
                  "description":"Server Error."
               }
            }
         }
      },
      "/internal/registry/items":{
         "get":{
            "tags":[
               "registry"
            ],
            "summary":"Returns the gift registries associated with user.",
            "description":"Returns the list of registries for user.",
            "operationId":"getUserRegistries",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"profileId",
                  "in":"query",
                  "description":"Value indicating profile Id for which registries are fetched. Required if Login param value is not passed",
                  "required":false,
                  "type":"string",
                  "x-example":"H12345"
               },
               {
                  "name":"login",
                  "in":"query",
                  "description":"Optional value indicating profile Id for which registries are fetched. Required if Profile Id param value is not passed",
                  "required":false,
                  "type":"string",
                  "x-example":"abc@test.com"
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/internal/registry/requestCards":{
         "post":{
            "tags":[
               "registry"
            ],
            "summary":"Request Registry Announcement Cards",
            "description":"",
            "operationId":"requestAnnouncementCards",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/RegistryAnnoucementCardsBean"
                  }
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid Input."
               },
               "500":{
                  "description":"Server Error."
               }
            }
         }
      },
      "/internal/registry/search":{
         "post":{
            "tags":[
               "registry"
            ],
            "summary":"Search registries",
            "description":"",
            "operationId":"search",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/GiftRegistrySearchBean"
                  }
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid Input."
               },
               "500":{
                  "description":"Server Error."
               }
            }
         }
      },
      "/internal/registry/sendEmail":{
         "post":{
            "tags":[
               "registry"
            ],
            "summary":"Send New Registry Confirmation Email",
            "description":"",
            "operationId":"sendNewRegistryEmail",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/RegistryEmailBean"
                  }
               },
               {
                  "name":"emailType",
                  "in":"query",
                  "description":"Value indicating type of email to send. Required",
                  "required":true,
                  "type":"string",
                  "x-example":"web_reg_confirm"
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid Input."
               },
               "500":{
                  "description":"Server Error."
               }
            }
         }
      },
      "/internal/registry/update":{
         "post":{
            "tags":[
               "registry"
            ],
            "summary":"Updates registry",
            "description":"",
            "operationId":"updateRegistry",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/RegistryBean"
                  }
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid Input."
               },
               "500":{
                  "description":"Server Error."
               }
            }
         }
      },
      "/internal/registry/{giftListId}/addItems":{
         "post":{
            "tags":[
               "registry"
            ],
            "summary":"Add item to registry",
            "description":"",
            "operationId":"addItems",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"giftListId",
                  "in":"path",
                  "description":"Value indicating gift registry Id for which items needs to be added. Required",
                  "required":true,
                  "type":"string",
                  "x-example":"gl1234567"
               },
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/CBLineItem"
                     }
                  }
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid Input."
               },
               "500":{
                  "description":"Server Error."
               }
            }
         }
      },
      "/internal/registry/{giftListId}/purchaseItems":{
         "post":{
            "tags":[
               "registry"
            ],
            "summary":"Add item to registry",
            "description":"",
            "operationId":"purchaseItems",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"giftListId",
                  "in":"path",
                  "description":"Value indicating gift registry Id for which items needs to be added. Required",
                  "required":true,
                  "type":"string",
                  "x-example":"gl1234567"
               },
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/RecordPurchasedItemBean"
                     }
                  }
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid Input."
               },
               "500":{
                  "description":"Server Error."
               }
            }
         }
      },
      "/internal/registry/{giftListId}/updateItems":{
         "post":{
            "tags":[
               "registry"
            ],
            "summary":"Add item to registry",
            "description":"",
            "operationId":"updateItems",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"giftListId",
                  "in":"path",
                  "description":"Value indicating gift registry Id for which items needs to be added. Required",
                  "required":true,
                  "type":"string",
                  "x-example":"gl1234567"
               },
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/UpdateItemBean"
                     }
                  }
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid Input."
               },
               "500":{
                  "description":"Server Error."
               }
            }
         }
      },
      "/internal/sku/inventory/v1":{
         "get":{
            "tags":[
               "fulfillment"
            ],
            "summary":"Provides sku inventory information.",
            "description":"This service provides inventory warehouse information for a given sku. It sits in the /rh/api/internal path which requires the caller to be whitelisted and pass a basic authentication header for access.",
            "operationId":"getSkuInventory",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"query",
                  "description":"Full sku id to fetch inventory position for.",
                  "required":true,
                  "type":"string",
                  "x-example":"62870053 SGRY"
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/InventoryMaster"
                  }
               },
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Sku does not exist for passed id."
               }
            }
         },
         "post":{
            "tags":[
               "fulfillment"
            ],
            "summary":"Provides sku inventory information.",
            "description":"This service provides inventory warehouse information for a given sku. It sits in the /rh/api/internal path which requires the caller to be whitelisted and pass a basic authentication header for access.",
            "operationId":"getSkusInventory",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "description":"Json array of the skus to fetch inventory positions for.",
                  "required":true,
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     }
                  }
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/InventoryMaster"
                     }
                  }
               }
            }
         }
      },
      "/internal/sku/logistics/v1":{
         "get":{
            "tags":[
               "fulfillment"
            ],
            "summary":"Provides sku logistics information including inventory.",
            "description":"This service provides logistical information for a given sku. Version 1 includes inventory while Version 2 excludes it for performance. Inventory can not be obtained independently via /internal/sku/inventory/v1. This service sits in the /rh/api/internal path which requires the calling network to be whitelisted. Caller must also pass a basic authentication header for access. ",
            "operationId":"getSkuLogisticsByQuery",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"query",
                  "description":"Full sku id to fetch logistics information for.",
                  "required":true,
                  "type":"string",
                  "x-example":"62870053 SGRY"
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/SkuLogistics"
                  }
               },
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Sku does not exist for passed id."
               }
            }
         },
         "post":{
            "tags":[
               "fulfillment"
            ],
            "summary":"Array Response.  Provides sku logistics information including inventory.",
            "description":"This service provides logistical information for a given sku. Version 1 includes inventory while Version 2 excludes it for performance. Inventory can not be obtained independently via /internal/sku/inventory/v1. This service sits in the /rh/api/internal path which requires the calling network to be whitelisted. Caller must also pass a basic authentication header for access. ",
            "operationId":"getSkuLogisticsAsArray",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "description":"Json array of the skus to fetch logistics positions for.",
                  "required":true,
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     }
                  }
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/SkuLogistics"
                     }
                  }
               },
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Sku does not exist for passed id."
               }
            }
         }
      },
      "/internal/sku/logistics/v1/{id}":{
         "get":{
            "tags":[
               "fulfillment"
            ],
            "summary":"Provides sku logistics information including inventory.",
            "description":"This service provides logistical information for a given sku. Version 1 includes inventory while Version 2 excludes it for performance. Inventory can not be obtained independently via /internal/sku/inventory/v1. This service sits in the /rh/api/internal path which requires the calling network to be whitelisted. Caller must also pass a basic authentication header for access. ",
            "operationId":"getSkuLogisticsByPath",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"Full sku id to fetch logistics information for.",
                  "required":true,
                  "type":"string",
                  "x-example":"62870053 SGRY"
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/SkuLogistics"
                  }
               },
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Sku does not exist for passed id."
               }
            }
         }
      },
      "/internal/sku/logistics/v2":{
         "get":{
            "tags":[
               "fulfillment"
            ],
            "summary":"Provides sku logistics information without inventory.",
            "description":"This service provides logistical information for a given sku. Version 1 includes inventory while Version 2 excludes it for performance. Inventory can not be obtained independently via /internal/sku/inventory/v1. This service sits in the /rh/api/internal path which requires the calling network to be whitelisted. Caller must also pass a basic authentication header for access. ",
            "operationId":"getSkuLogisticsByQuerySkipInventory",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"query",
                  "description":"Full sku id to fetch logistics information for.",
                  "required":true,
                  "type":"string",
                  "x-example":"62870053 SGRY"
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/SkuLogistics"
                  }
               },
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Sku does not exist for passed id."
               }
            }
         },
         "post":{
            "tags":[
               "fulfillment"
            ],
            "summary":"Array Response.  Provides sku logistics information without inventory.",
            "description":"This service provides logistical information for a given sku. Version 1 includes inventory while Version 2 excludes it for performance. Inventory can not be obtained independently via /internal/sku/inventory/v1. This service sits in the /rh/api/internal path which requires the calling network to be whitelisted. Caller must also pass a basic authentication header for access. ",
            "operationId":"getSkuLogisticsAsArrayNoInventory",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "description":"Json array of the skus to fetch logistics positions for.",
                  "required":true,
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     }
                  }
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/SkuLogistics"
                     }
                  }
               },
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Sku does not exist for passed id."
               }
            }
         }
      },
      "/internal/sku/logistics/v2/{id}":{
         "get":{
            "tags":[
               "fulfillment"
            ],
            "summary":"Provides sku logistics information without inventory.",
            "description":"This service provides logistical information for a given sku. Version 1 includes inventory while Version 2 excludes it for performance. Inventory can not be obtained independently via /internal/sku/inventory/v1. This service sits in the /rh/api/internal path which requires the calling network to be whitelisted. Caller must also pass a basic authentication header for access. ",
            "operationId":"getSkuLogisticsByPathSkipInventory",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"Full sku id to fetch logistics information for.",
                  "required":true,
                  "type":"string",
                  "x-example":"62870053 SGRY"
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/SkuLogistics"
                  }
               },
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Sku does not exist for passed id."
               }
            }
         }
      },
      "/internal/sku/spoConsolidation":{
         "get":{
            "tags":[
               "fulfillment"
            ],
            "summary":"Provides spo consolidation dc for the given sku and postal code.",
            "description":"This service returns the spo consolidation dc for the given sku and postal area",
            "operationId":"getConsolidationWarehouse",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"skuId",
                  "in":"query",
                  "description":"The sku id to lookup the consolidation dc for.",
                  "required":true,
                  "type":"string",
                  "x-example":"21410887 BWPT"
               },
               {
                  "name":"postalCode",
                  "in":"query",
                  "description":"Postal code used in determining consolidation dc.",
                  "required":false,
                  "type":"string",
                  "x-example":"99732"
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/Market"
                  }
               },
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Market does not exist for postal code."
               }
            }
         }
      },
      "/internal/tax/calculation/cch":{
         "post":{
            "tags":[
               "tax"
            ],
            "summary":"Returns a tax response for the given request.",
            "description":"",
            "operationId":"calculateTax",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/TaxCalculationRequest"
                  }
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/TaxCalculationResponse"
                  }
               },
               "400":{
                  "description":"Malformed parameter input"
               },
               "404":{
                  "description":"Sku does not exist for passed id."
               }
            }
         }
      },
      "/internal/tax/exemptions":{
         "get":{
            "tags":[
               "tax"
            ],
            "summary":"Provides the tax exemption table.",
            "description":"",
            "operationId":"getTaxExemptions",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/TaxExemption"
                  }
               },
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Sku does not exist for passed id."
               }
            }
         }
      },
      "/internal/userinfo/v1":{
         "get":{
            "tags":[
               "account"
            ],
            "summary":"Get user info by email.",
            "description":"Will require system to system token authentication.",
            "operationId":"getUserInfoByEmail",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"email",
                  "in":"query",
                  "description":"The email address of the user.",
                  "required":true,
                  "type":"string",
                  "x-example":"sbartfast@42.com"
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "200":{
                  "description":"Success"
               },
               "400":{
                  "description":"Malformed input."
               },
               "403":{
                  "description":"Caller not authorized / access is forbidden."
               },
               "404":{
                  "description":"User not found for passed input."
               }
            }
         }
      },
      "/internal/userinfo/v1/{id}":{
         "get":{
            "tags":[
               "account"
            ],
            "summary":"Get user info by id.",
            "description":"Will require system to system token authentication.",
            "operationId":"getUserInfoById",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of the user.",
                  "required":true,
                  "type":"string",
                  "x-example":"1234567"
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "200":{
                  "description":"Success"
               },
               "400":{
                  "description":"Malformed input."
               },
               "403":{
                  "description":"Caller not authorized / access is forbidden."
               },
               "404":{
                  "description":"User not found for passed input."
               }
            }
         }
      },
      "/internal/users/v1":{
         "get":{
            "tags":[
               "account"
            ],
            "summary":"Get user info by email.",
            "description":"Will require system to system token authentication.",
            "operationId":"getUserInfoByEmail",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"email",
                  "in":"query",
                  "description":"The email address of the user.",
                  "required":true,
                  "type":"string",
                  "x-example":"sbartfast@42.com"
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "200":{
                  "description":"Success"
               },
               "400":{
                  "description":"Malformed input."
               },
               "403":{
                  "description":"Caller not authorized / access is forbidden."
               },
               "404":{
                  "description":"User not found for passed input."
               }
            }
         }
      },
      "/internal/users/v1/{id}":{
         "get":{
            "tags":[
               "account"
            ],
            "summary":"Get user info by id.",
            "description":"Will require system to system token authentication.",
            "operationId":"getUserInfoById",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of the user.",
                  "required":true,
                  "type":"string",
                  "x-example":"1234567"
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "200":{
                  "description":"Success"
               },
               "400":{
                  "description":"Malformed input."
               },
               "403":{
                  "description":"Caller not authorized / access is forbidden."
               },
               "404":{
                  "description":"User not found for passed input."
               }
            }
         },
         "post":{
            "tags":[
               "account"
            ],
            "summary":"Updates basic user account information.",
            "description":"Used to update a user. The ID must match an existing user. Blank elements will be ignored.  The system will update what is passed.  Requires system to system authentication.\n\n**Input Attributes** \n\n*email*: If set it will change both the user login and email address.  It will give an error if the email address already exists on another account.\n\n*password*: If set it will change the user password. ",
            "operationId":"postUpdateUser",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"The ID of the user.",
                  "required":true,
                  "type":"string",
                  "x-example":"1234567"
               },
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/AccountUpdateInfo"
                  }
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "200":{
                  "description":"Success"
               },
               "400":{
                  "description":"Invalid input"
               },
               "403":{
                  "description":"Caller not authorized / access is forbidden."
               },
               "404":{
                  "description":"User Not Found"
               }
            }
         }
      },
      "/internal/wishlist/items":{
         "get":{
            "tags":[
               "wishlist"
            ],
            "summary":"Returns the items detail in the wishlist.",
            "description":"Returns the list of line item details in the user's wishlist.",
            "operationId":"getUserWishlistDetails",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"profileId",
                  "in":"query",
                  "description":"Value indicating profile Id for which wishlist details are fetched. Required if Login param value is not passed",
                  "required":false,
                  "type":"string",
                  "x-example":"H12345"
               },
               {
                  "name":"login",
                  "in":"query",
                  "description":"Optional value indicating profile Id for which wishlist details are fetched. Required if Profile Id param value is not passed",
                  "required":false,
                  "type":"string",
                  "x-example":"abc@test.com"
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/market/v1/{postalCode}":{
         "get":{
            "tags":[
               "fulfillment"
            ],
            "summary":"Provides the market info by postal code.",
            "description":"This service returns the market id for the given postal code",
            "operationId":"getPostalMarket",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"postalCode",
                  "in":"path",
                  "description":"Postal code to lookup market for.",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/Market"
                  }
               },
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Market does not exist for postal code."
               }
            }
         }
      },
      "/marketing/optins/v1":{
         "get":{
            "tags":[
               "marketing"
            ],
            "summary":"Returns the optins available for the current user session",
            "description":"Requires a user session to function properly.  \n\n Uses several logic checks to determine which opt ins are available. The logic execution order is as follows:\n\n noPreselect (param) - tells this service to forgoe any preselection of opt ins.\n\n countryExclusion (session) - this service will not preselect for certain countries.\n\n cart contents (session) - this service will preselect for sites represented by cart contents.\n\n current site (session) - this service will preselect for the current site.",
            "operationId":"deriveOptIns",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"noPreselect",
                  "in":"query",
                  "description":"Tells the service to not preselect any of the opt ins.",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "name":"applyCart",
                  "in":"query",
                  "description":"Tells the system to preselect based on cart contents.",
                  "required":false,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/SiteCheckboxBean"
                  }
               }
            }
         }
      },
      "/marketing/sourcebooks/v1":{
         "get":{
            "tags":[
               "marketing"
            ],
            "summary":"Returns the sourcebooks available for the current site",
            "description":"If not set the system will derive the site id from the application host. Otherwise a site id may be passed to retrieve sourcebooks for that site.",
            "operationId":"lookupSourceBooks",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"siteId",
                  "in":"query",
                  "description":"Optional Site Id",
                  "required":false,
                  "type":"string",
                  "x-example":"RH"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/SourceBookBean"
                  }
               },
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"No sourcebooks found for the passed site id."
               }
            }
         }
      },
      "/marketing/sourcebooks/v1/cancelSourceBook":{
         "post":{
            "tags":[
               "marketing"
            ],
            "summary":"Sends email to Gallery Locator.",
            "description":"Posting request to form so that email can be sent to Gallery Contact person for scheduling appointment.",
            "operationId":"cancelSourceBook",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/MarketingRequestBean"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to submit the request."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/marketing/sourcebooks/v1/subscribeSourceBook":{
         "post":{
            "tags":[
               "marketing"
            ],
            "summary":"Sends email to Gallery Locator.",
            "description":"Posting request to form so that email can be sent to Gallery Contact person for scheduling appointment.",
            "operationId":"subscribeSourceBook",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/MarketingRequestBean"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to submit the request."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/membership/v1/sku":{
         "get":{
            "tags":[
               "membership"
            ],
            "summary":"Provides membership status of current profile.",
            "description":"Returns valid Membership sku ID",
            "operationId":"getMembershipStatus",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"emailID",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"brand",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"country",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"memberID",
                  "in":"query",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/microsite/v1/{title}":{
         "get":{
            "tags":[
               "microsite"
            ],
            "summary":"Returns Microsite Content by title",
            "description":"Microsite display by title",
            "operationId":"generateMicrositeDisplay",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"title",
                  "in":"path",
                  "description":"Name of the title for which to fetch content",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "404":{
                  "description":"Microsite by given title does not exist in the system"
               }
            }
         }
      },
      "/monogram/layout/v1":{
         "get":{
            "tags":[
               "monogram"
            ],
            "summary":"Provides monogram layout information including fulfillment codes.",
            "description":"This service provides access to the monogram style or layout resource.  The layout defines parameters used by fulfillment.",
            "operationId":"getMonogramLayoutById",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"query",
                  "description":"styleId",
                  "required":true,
                  "type":"string",
                  "x-example":"3Y-OPTI-BOCE-14"
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/MonogramLayout"
                  }
               },
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Sku does not exist for passed id."
               }
            }
         }
      },
      "/monogram/layout/v1/style":{
         "get":{
            "tags":[
               "monogram"
            ],
            "summary":"Provides monogram style information.",
            "description":"This service provides access to the monogram style or layout resource.  The layout defines parameters used by fulfillment.",
            "operationId":"getMonogramStyle",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"fullSkuId",
                  "in":"query",
                  "description":"fullSkuId",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"cwLayout",
                  "in":"query",
                  "description":"cwLayout",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"cwFont",
                  "in":"query",
                  "description":"cwFont",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"cwBorder",
                  "in":"query",
                  "description":"cwBorder",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"cwCode",
                  "in":"query",
                  "description":"cwCode",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"authorization",
                  "in":"header",
                  "description":"The authorization key to allow access to the service.",
                  "required":true,
                  "type":"string",
                  "x-example":"Basic  ZnViYXI="
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/MonogramPanelItem"
                  }
               },
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Sku does not exist for passed id."
               }
            }
         }
      },
      "/monogram/price/v1/{id}":{
         "get":{
            "tags":[
               "monogram"
            ],
            "operationId":"getMonogramPriceByStyle",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"styleId",
                  "required":true,
                  "type":"string",
                  "x-example":"3Y-OPTI-BOCE-14"
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"sku does not exist for passed id."
               }
            }
         }
      },
      "/my-account/billing-summary":{
         "get":{
            "tags":[
               "my-account"
            ],
            "summary":"This Resource provides details for Billing Summary",
            "description":"",
            "operationId":"getBillingSummaryForOrder",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"orderId",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"atgOrderId",
                  "in":"query",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/my-account/billing-summary-cc-declined-amount":{
         "get":{
            "tags":[
               "my-account"
            ],
            "summary":"This Resource provides details for CC declined amount",
            "description":"",
            "operationId":"getBillingSummaryCCDeclinedAmountForOrder",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"orderId",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"email",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"linkExpiryTime",
                  "in":"query",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "type":"string"
                  }
               }
            }
         }
      },
      "/my-account/billing-summary-ud-amount":{
         "get":{
            "tags":[
               "my-account"
            ],
            "summary":"This Resource provides details for Billing Summary UnConfirmed Deposit Amount",
            "description":"",
            "operationId":"getBillingSummaryUnConfirmedAmountForOrder",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"orderId",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"email",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"linkExpiryTime",
                  "in":"query",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "type":"string"
                  }
               }
            }
         }
      },
      "/my-account/make-payment":{
         "post":{
            "tags":[
               "my-account",
               "payment"
            ],
            "summary":"Accepts payments for unconfirmed deposits.",
            "description":"",
            "operationId":"makePayment",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/UnconfirmedDepositPaymentInfo"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied"
               }
            }
         },
         "options":{
            "tags":[
               "my-account",
               "payment"
            ],
            "summary":"Handles CORS preflight requests ",
            "description":"",
            "operationId":"makePaymentOptions",
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/my-account/order-details":{
         "get":{
            "tags":[
               "my-account"
            ],
            "summary":"This Resource provides Order Details",
            "description":"",
            "operationId":"getOrderDetailsPdf",
            "produces":[
               "application/pdf"
            ],
            "parameters":[
               {
                  "name":"orderId",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"atgOrderId",
                  "in":"query",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/my-account/order-line-history":{
         "get":{
            "tags":[
               "my-account"
            ],
            "summary":"This Resource provides details for OrderLineHistory",
            "description":"",
            "operationId":"getTrackingHistoryForItem",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"orderId",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"atgOrderId",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"orderLineNumber",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"shipViaId",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"shipToNumber",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"orderHistoryStatus",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"postalCode",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"expectedShipDate",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"isFutureDelivery",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"isBackOrderedQty",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"coordinatedGroupItemStatus",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"countryCode",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"orderDate",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"trackingNumber",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"carrierName",
                  "in":"query",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "type":"string"
                  }
               }
            }
         }
      },
      "/my-account/order-line-history-delivery-date":{
         "get":{
            "tags":[
               "my-account"
            ],
            "summary":"This Resource provides details for OrderLineHistory Delivery Date",
            "description":"",
            "operationId":"getDeliveryTrackingHistoryForItem",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"orderId",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"atgOrderId",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"orderLineNumber",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"shipViaId",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"shipToNumber",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"orderHistoryStatus",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"postalCode",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"expectedShipDate",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"isFutureDelivery",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"isBackOrderedQty",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"coordinatedGroupItemStatus",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"countryCode",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"orderDate",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"trackingNumber",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"carrierName",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"lineId",
                  "in":"query",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "type":"string"
                  }
               }
            }
         }
      },
      "/my-account/shipment-tracking-history":{
         "get":{
            "tags":[
               "my-account"
            ],
            "summary":"This Resource provides details for Shipment Tracking History",
            "description":"",
            "operationId":"getTrackingHistoryForShipmentEmail",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"orderId",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"shipViaId",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"postalCode",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"countryCode",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"shipmentConfirmationId",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"orderDate",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"trackingNumber",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"carrierName",
                  "in":"query",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "type":"string"
                  }
               }
            }
         }
      },
      "/order/v1/addMembershipItem":{
         "post":{
            "tags":[
               "order"
            ],
            "summary":"Adds Membership Item To Cart",
            "description":"Operates on current session profile.  Requires authenticated session prior to invocation.",
            "operationId":"addMembershipItem",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied"
               },
               "500":{
                  "description":"Server Error"
               }
            }
         }
      },
      "/order/v1/applyExpediteShipping":{
         "post":{
            "tags":[
               "checkout",
               "order"
            ],
            "summary":"Expedite Shipping for group of items to the order.",
            "description":"Operates on current session cart. Requires a session.\n\nCaller need to pass  commerceItemId's that  need expeditedshipping along with shippingType.\n\nShippingType should be either 1-day or 2-day .",
            "operationId":"applyExpediteShipping",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/ExpeditedShippingBean"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid Input."
               },
               "500":{
                  "description":"Server Error."
               }
            }
         },
         "options":{
            "tags":[
               "checkout",
               "order"
            ],
            "summary":"Handles CORS preflight requests ",
            "description":"",
            "operationId":"applyExpediteShippingOptions",
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/order/v1/applyFutureDate":{
         "post":{
            "tags":[
               "checkout",
               "order"
            ],
            "summary":"Applies a future date to the order.",
            "description":"Operates on current session cart. Requires a session.\n\nPassed date must be of the format MM/dd/yyyy\n\nCaller also needs to pass a valid reason code.  Reason codes can be retrieved from a separate endpoint.",
            "operationId":"applyFutureDate",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/FutureDateInstruction"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid Input."
               },
               "500":{
                  "description":"Server Error."
               }
            }
         },
         "options":{
            "tags":[
               "checkout",
               "order"
            ],
            "summary":"Handles CORS preflight requests ",
            "description":"",
            "operationId":"applyFutureDateOptions",
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/order/v1/applyGiftWrap":{
         "post":{
            "tags":[
               "checkout",
               "order"
            ],
            "summary":"Sets the quantity of the passed in line item id to the specified value.",
            "description":"Operates on current session cart. Requires a session. \n\nPassed object supplies gift wrapping instructions.",
            "operationId":"applyGiftWrap",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/GiftWrapInstruction"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid Input."
               },
               "500":{
                  "description":"Server Error."
               }
            }
         },
         "options":{
            "tags":[
               "checkout",
               "order"
            ],
            "summary":"Handles CORS preflight requests ",
            "description":"",
            "operationId":"applyGiftWrapOptions",
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/order/v1/futureDate/reasonCodes":{
         "get":{
            "tags":[
               "checkout",
               "order"
            ],
            "summary":"Exposes future date reason codes for display.",
            "description":"",
            "operationId":"fetchReasonCodes",
            "produces":[
               "application/json"
            ],
            "parameters":[
               
            ],
            "responses":{
               "404":{
                  "description":"If the system doesnt have them."
               }
            }
         }
      },
      "/order/v1/getSpoTermsMessage":{
         "get":{
            "tags":[
               "order"
            ],
            "summary":"Returns the spo terms message and accepted date.",
            "description":"Returns the SPO terms of acceptancess for the passed orderId and fullskuid. Requires a session to be established if emailId is not passed in the query parameters.",
            "operationId":"getOrderItemSpoTerms",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"orderId",
                  "in":"query",
                  "description":"The Id of the order.",
                  "required":true,
                  "type":"string",
                  "x-example":"H12345"
               },
               {
                  "name":"fullSkuId",
                  "in":"query",
                  "description":"The fullskuid of the line item in the order.",
                  "required":true,
                  "type":"string",
                  "x-example":"1234567 FULL"
               },
               {
                  "name":"emailId",
                  "in":"query",
                  "description":"The email id associated with order billing address.",
                  "required":false,
                  "type":"string",
                  "x-example":"abc@abc.com"
               }
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/order/v1/groupOrder":{
         "post":{
            "tags":[
               "checkout",
               "order"
            ],
            "summary":"Groups the order based upon the specified instruction.",
            "description":"Operates on current session cart. Requires a session. \n\nGroups the order according to passed instruction. \n\nA value of 'true' results in the order being grouped into fewest possible shipments. \n\nA value of 'false' results in the order not grouped, each item ships as available. ",
            "operationId":"groupOrder",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/GroupingInstruction"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid Input."
               },
               "500":{
                  "description":"Server Error."
               }
            }
         },
         "options":{
            "tags":[
               "checkout",
               "order"
            ],
            "summary":"Handles CORS preflight requests ",
            "description":"",
            "operationId":"groupOrderOptions",
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/order/v1/removeFutureDate":{
         "post":{
            "tags":[
               "checkout",
               "order"
            ],
            "summary":"Removes a future date from the order.",
            "description":"Operates on current session cart. Requires a session.",
            "operationId":"removeFutureDate",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid Input."
               },
               "500":{
                  "description":"Server Error."
               }
            }
         },
         "options":{
            "tags":[
               "checkout",
               "order"
            ],
            "summary":"Handles CORS preflight requests ",
            "description":"",
            "operationId":"removeFutureDateOptions",
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/order/v1/setQuantity":{
         "post":{
            "tags":[
               "checkout",
               "order"
            ],
            "summary":"Sets the quantity of the passed in line item id to the specified value.",
            "description":"Operates on current session cart. Requires a session.\n\nSetting a quantity less than zero results in no change to item.  System will kick back a 400 response for this. \n\nSetting a quantity to zero results in item removal from the current order (cart).",
            "operationId":"setItemQuantity",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/ItemUpdateBean"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid Input."
               },
               "500":{
                  "description":"Server Error."
               }
            }
         },
         "options":{
            "tags":[
               "checkout",
               "order"
            ],
            "summary":"Handles CORS preflight requests ",
            "description":"",
            "operationId":"setItemQuantityOptions",
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/payment/preAuth":{
         "post":{
            "tags":[
               "payment"
            ],
            "summary":"Get the Pre-Auth Status for the list of Payment Instruments",
            "description":"For Pre-Auth Operation for all the Payment Instruments for the Order",
            "operationId":"preAuthForPaymentInstruments",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/PaymentAuthRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            }
         }
      },
      "/pg/facet":{
         "get":{
            "tags":[
               "product-gallery"
            ],
            "summary":"Fetch facets and product galleries based on the search terms.",
            "description":"This is a search service to fetch facets and product galleries based on the search term.\nThe service will call endeca server through atg and filter the fields required for the UI to display.\nThe endeca endpoint url will be automatically determined based on the environment (rh, rhmo, rhbc & rhtn) from which it receives the request.\nAll the input parameters are optional and no validation.\n",
            "operationId":"facetedProductGallery",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"Ntt",
                  "in":"query",
                  "description":"Search term",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"No",
                  "in":"query",
                  "description":"Starting index of the product gallery to search",
                  "required":false,
                  "type":"integer",
                  "default":0,
                  "format":"int32"
               },
               {
                  "name":"Nrpp",
                  "in":"query",
                  "description":"No. of product galleries to be returned",
                  "required":false,
                  "type":"integer",
                  "default":24,
                  "format":"int32"
               },
               {
                  "name":"countryCode",
                  "in":"query",
                  "description":"User's country code (from ip) for displaying the correct currency",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"currencyCode",
                  "in":"query",
                  "description":"User's currency code for displaying the correct currency",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "USD",
                     "CAD"
                  ]
               },
               {
                  "name":"userType",
                  "in":"query",
                  "description":"User type for displaying the correct prices",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "regular",
                     "member",
                     "trade",
                     "contract"
                  ]
               },
               {
                  "name":"geoLoc",
                  "in":"query",
                  "description":"User's geo-location",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"N",
                  "in":"query",
                  "description":"Navigation field for a query (endeca)",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"Ns",
                  "in":"query",
                  "description":"List of keys to sort records (endeca)",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"contentType",
                  "in":"query",
                  "description":"Content type to be displayed",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"prevNtt",
                  "in":"query",
                  "description":"Previous Ntt",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            }
         }
      },
      "/pg/facet/health":{
         "get":{
            "tags":[
               "product-gallery"
            ],
            "operationId":"facetHealth",
            "parameters":[
               
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "type":"string"
                  },
                  "headers":{
                     
                  }
               }
            }
         }
      },
      "/pos/delivery/schedule/v1/schedulingInfo":{
         "post":{
            "tags":[
               "posscheduling"
            ],
            "summary":"update scheduling info",
            "description":"update the order and items with the scheduling info, i.e. synthetic checklist, scheduling date, etc",
            "operationId":"consumeSchedulingInfo",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/POSSchedulingInfoRequest"
                  }
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/postalcode/v1/{locationsForPostalCode}":{
         "get":{
            "tags":[
               "postalCode"
            ],
            "summary":"Postal Code",
            "description":"Get the city and state of the postal code",
            "operationId":"getLocationsForPostalCode",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"locationsForPostalCode",
                  "in":"path",
                  "description":"Get the city and state of the postal code",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"filterAPOFPO",
                  "in":"query",
                  "description":"Exclude the APO, FPO state",
                  "required":true,
                  "type":"boolean"
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Zip code not found"
               }
            }
         }
      },
      "/product/availableOptions/v1/{productId}":{
         "get":{
            "tags":[
               "product"
            ],
            "summary":"Provides the available options the product has for user selection.",
            "description":"",
            "operationId":"fetchAvailableOptions",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"productId",
                  "in":"path",
                  "description":"id of the desired product",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"selectedOptions",
                  "in":"query",
                  "description":"comma separated list of option ids that have been selected.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"filter",
                  "in":"query",
                  "description":"sale filter param either 'sale' or 'finalSale' - can be empty",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "sale",
                     "finalSale"
                  ]
               },
               {
                  "name":"length",
                  "in":"query",
                  "description":"length",
                  "required":false,
                  "type":"number",
                  "minimum":0,
                  "format":"float"
               },
               {
                  "name":"width",
                  "in":"query",
                  "description":"width",
                  "required":false,
                  "type":"number",
                  "minimum":0,
                  "format":"float"
               },
               {
                  "name":"diameter",
                  "in":"query",
                  "description":"diameter",
                  "required":false,
                  "type":"number",
                  "minimum":0,
                  "format":"float"
               },
               {
                  "name":"tiltTypeId",
                  "in":"query",
                  "description":"tiltTypeId",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"rodTypeId",
                  "in":"query",
                  "description":"rodTypeId",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Product does not exist for passed id."
               }
            }
         }
      },
      "/product/image/v1/{id}":{
         "get":{
            "tags":[
               "product"
            ],
            "summary":"Generates image urls for products.  Supports colorization.",
            "description":"This service provides images for products.  For less complex products it supplies the base product image.  For colorizable products it will provide colorized images based on input parameters.  \n \n The basic function of the service is to identify the swatches (if it has any) required to colorize the image. When finding swatches it prioritizes the input parameters thusly : fullSkuId - swatchIds - optionIds.",
            "operationId":"getProductImage",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"id of the desired product",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"imageKey",
                  "in":"query",
                  "description":"Products carry several images stored in a map which are accessed by passing a key. This param identifies the desired image in the map.  If not passed the system will use the default key which is 'product'.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"fullSkuId",
                  "in":"query",
                  "description":"Full Sku Id.  If passed it will be used to find the specific swatches for the sku and then colorize with those.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"swatchIds",
                  "in":"query",
                  "description":"Comma separated lest of swatch ids. Can be passed to indicate which swatches to colorize with.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"optionIds",
                  "in":"query",
                  "description":"Comma separated list of option ids. Can be passed to indicate the specific options to colorize by.   When passed the system finds the corresponding swatches matching those options and colorizes using them.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"trimOptionIds",
                  "in":"query",
                  "description":"Comma separated list of Trim option ids. Can be passed to indicate the specific options to colorize by.   When passed the system finds the corresponding trim swatches matching those options and colorizes using them.",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Product does not exist for passed id."
               }
            }
         }
      },
      "/product/instock/v1/{id}":{
         "get":{
            "tags":[
               "product"
            ],
            "summary":"Provides details of skus in stock for a given product.",
            "description":"This service gives back details regarding which skus of a product are in stock.  The system will accept a postal code value to further determine whether items are available for the caller's postal location.\n \nThe API accepts the postal code either as part of a query argument or it will fetch it from the 'pc' cookie.  A passed in parameter overrides the value stored in the cookie.  Note that jax-rs maps the cookie value to the 'pc' param below. If your intent is to pass the postal code then use the 'postalCode' parameter.",
            "operationId":"fetchInStockInfo",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"Product id to check stock levels for",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"pc",
                  "in":"cookie",
                  "description":"Postal code value fetched from cookie.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"postalCode",
                  "in":"query",
                  "description":"Postal code to check stock levels against.  If none passed then the system will check for a postal code cookie named 'pc'",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"filter",
                  "in":"query",
                  "description":"Sale filter param either 'sale' or 'finalSale'.  If you don't need to filter then do not pass the param.",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "sale",
                     "finalSale"
                  ]
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Product does not exist for passed id."
               }
            }
         }
      },
      "/product/item/instock/v1/{id}":{
         "get":{
            "tags":[
               "product"
            ],
            "summary":"Determine given product is on sale and renders on sale button and/or message.",
            "description":"",
            "operationId":"generateSaleItemInfo",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"id of the desired product",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"priceFilter",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"omitRelatedProductsPriceRange",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"src",
                  "in":"query",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Product does not exist for passed id."
               }
            }
         }
      },
      "/product/optioncopy/v1/{id}":{
         "get":{
            "tags":[
               "product"
            ],
            "summary":"Provides the copy for a given option.",
            "description":"",
            "operationId":"fetchOptionCopy",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"id of the desired option",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"groupIndex",
                  "in":"query",
                  "description":"Convenience param which is returned in the json response.  Used to support asynchronous calls from the UX.",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Option does not exist for passed id."
               }
            }
         }
      },
      "/product/options/v1/optionsWithSelectedOptions/{productId}":{
         "get":{
            "tags":[
               "product"
            ],
            "summary":"Provides all the options the product has available for user selection.",
            "description":"",
            "operationId":"fetchProductOptionsAndSelectedOptions",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"productId",
                  "in":"path",
                  "description":"id of the desired product",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"filter",
                  "in":"query",
                  "description":"sale filter param either 'sale' or 'finalSale' - can be empty",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "sale",
                     "finalSale"
                  ]
               },
               {
                  "name":"all_selected_options",
                  "in":"query",
                  "description":"sale filter param either 'sale' or 'finalSale' - can be empty",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"type_names",
                  "in":"query",
                  "description":"sale filter param either 'sale' or 'finalSale' - can be empty",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"get_unavailable_options",
                  "in":"query",
                  "description":"sale filter param either 'sale' or 'finalSale' - can be empty",
                  "required":false,
                  "type":"boolean",
                  "default":false
               },
               {
                  "name":"getBestMatch",
                  "in":"query",
                  "description":"sale filter param either 'sale' or 'finalSale' - can be empty",
                  "required":false,
                  "type":"boolean",
                  "default":false
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               }
            }
         }
      },
      "/product/options/v1/{productId}":{
         "get":{
            "tags":[
               "product"
            ],
            "summary":"Provides all the options the product has available for user selection.",
            "description":"",
            "operationId":"fetchProductOptions",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"productId",
                  "in":"path",
                  "description":"id of the desired product",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"filter",
                  "in":"query",
                  "description":"sale filter param either 'sale' or 'finalSale' - can be empty",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "sale",
                     "finalSale"
                  ]
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Product does not exist for passed id."
               }
            }
         }
      },
      "/product/parts/instock/v1/{productId}/{fullSkuId}":{
         "get":{
            "tags":[
               "product"
            ],
            "summary":"This service fetches in stock replacement parts for supplied product & fullskuId.",
            "description":"",
            "operationId":"generateReplacementPartsInfo",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"productId",
                  "in":"path",
                  "description":"Product Id",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"fullSkuId",
                  "in":"path",
                  "description":"fullSkuId of the desired product",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"country",
                  "in":"query",
                  "description":"(optional) 2-digit country code to fetch price in.  Defaults to US",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "US",
                     "CA"
                  ]
               },
               {
                  "name":"postalCode",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"priceFilter",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"omitRelatedProductsPriceRange",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"src",
                  "in":"query",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Product does not exist for passed id."
               }
            }
         }
      },
      "/product/projections/v1":{
         "get":{
            "tags":[
               "product"
            ],
            "summary":"Exposes the projections that can be applied to product",
            "description":"",
            "operationId":"getProjections",
            "produces":[
               "application/json"
            ],
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/product/sale/v1/{id}":{
         "get":{
            "tags":[
               "product"
            ],
            "summary":"Determine given product is on sale and renders on sale button and/or message.",
            "description":"",
            "operationId":"generateSaleItemInfo",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"id of the desired product",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Product does not exist for passed id."
               }
            }
         }
      },
      "/product/salestock/v1/{id}":{
         "get":{
            "tags":[
               "product"
            ],
            "summary":"Provides stock levels for skus on sale for a product.",
            "description":"This service gives back details regarding which skus of a product are in stock and ON SALE.  The system will accept a postal code value to further determine whether items are available for the caller's postal location.\n \nThe API accepts the postal code either as part of a query argument or it will fetch it from the 'pc' cookie.  A passed in parameter overrides the value stored in the cookie.  Note that jax-rs maps the cookie value to the 'pc' param below. If your intent is to pass the postal code then use the 'postalCode' parameter.",
            "operationId":"fetchInStockInfo",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"Product id to check stock levels for",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"pc",
                  "in":"cookie",
                  "description":"Postal code value fetched from cookie.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"postalCode",
                  "in":"query",
                  "description":"Postal code to check stock levels against.  If none passed then the system will check for a postal code cookie named 'pc'",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"filter",
                  "in":"query",
                  "description":"Sale filter param either 'sale' or 'finalSale'.  Defaults to sale.",
                  "required":false,
                  "type":"string",
                  "default":"saleSkipInventory",
                  "enum":[
                     "sale",
                     "finalSale",
                     "saleSkipInventory",
                     "finalSaleSkipInventory"
                  ]
               },
               {
                  "name":"fromCount",
                  "in":"query",
                  "description":"Results pagination from Count",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"toCount",
                  "in":"query",
                  "description":"Results pagination to Count",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Product does not exist for passed id."
               }
            }
         }
      },
      "/product/swatch-image-finish/v1/{id}":{
         "get":{
            "tags":[
               "product"
            ],
            "summary":"Returns the swatch image for the swatch ids with option type is finish.",
            "description":"If no swatch found for the id this will return a 400.",
            "operationId":"generateFinishSwatchData",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"ids of the desired product",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"site",
                  "in":"query",
                  "description":"site id for the swatch",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Product does not exist for passed id."
               }
            }
         }
      },
      "/product/swatch-image/v1/{id}":{
         "get":{
            "tags":[
               "product"
            ],
            "summary":"Returns the swatch image for the swatch ids.",
            "description":"If no swatch found for the id this will return a 400.",
            "operationId":"generateSwatchData",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"id of the desired product",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"site",
                  "in":"query",
                  "description":"site id for the swatch",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Product does not exist for passed id."
               }
            }
         }
      },
      "/product/swatch/v1/{id}":{
         "get":{
            "tags":[
               "product"
            ],
            "summary":"Returns the swatch data for the particular product.",
            "description":"If no product found for the id this will return a 400.  For products without swatch information this will return an empty swatch data json response",
            "operationId":"generateSwatchData",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"id of the desired product",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"categoryId",
                  "in":"query",
                  "description":"category id used to determine face-out swatch",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"splitDisplay",
                  "in":"query",
                  "description":"tells the system to split the swatches into stocked and special order",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "true",
                     "false"
                  ]
               },
               {
                  "name":"filter",
                  "in":"query",
                  "description":"sale filter param either 'sale' or 'finalSale' - can be empty",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "sale",
                     "finalSale"
                  ]
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Product does not exist for passed id."
               }
            }
         }
      },
      "/product/upsell/v1/{id}":{
         "get":{
            "tags":[
               "product"
            ],
            "summary":"Exposes the upsell product properties of a product for PDP and Add to Cart modal display purposes",
            "description":"",
            "operationId":"generateUpsells",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"id of the desired product",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"categoryId",
                  "in":"query",
                  "description":"Parent category id (optional).  If passed system appends category upsells to product upsells.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"siteId",
                  "in":"query",
                  "description":"siteId",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Product does not exist for passed id."
               }
            }
         }
      },
      "/product/v1/department/{id}":{
         "get":{
            "tags":[
               "product"
            ],
            "summary":"Exposes the detailed properties of a product for PDP display purposes",
            "description":"",
            "operationId":"generateProductDepartment",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"id of the desired product",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"filter",
                  "in":"query",
                  "description":"sale filter param either 'sale' or 'finalSale' - can be empty",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "sale",
                     "finalSale"
                  ]
               },
               {
                  "name":"projection",
                  "in":"query",
                  "description":"allows the caller to obtain a subset of properties by passing a comma separated list of projection names.  Call /rh/api/product/projections for the list of valid projections.",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input, incorrect projections"
               },
               "404":{
                  "description":"Product does not exist for passed id."
               }
            }
         }
      },
      "/product/v1/seodescription/{id}":{
         "get":{
            "tags":[
               "product"
            ],
            "summary":"To retrun seo description for the product ids passed in request",
            "description":"",
            "operationId":"getSeoDescriptions",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"id of the desired product",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input, incorrect products id"
               },
               "404":{
                  "description":"Product does not exist for passed id."
               }
            }
         }
      },
      "/product/v1/{id}":{
         "get":{
            "tags":[
               "product"
            ],
            "summary":"Exposes the detailed properties of a product for PDP display purposes",
            "description":"",
            "operationId":"generateProduct",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"id of the desired product",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"categoryId",
                  "in":"query",
                  "description":"parent category id (optional).  Generally used to identify face out swatches for the small percentage of products which use face out colorization. ",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"filter",
                  "in":"query",
                  "description":"sale filter param either 'sale' or 'finalSale' - can be empty",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "sale",
                     "finalSale"
                  ]
               },
               {
                  "name":"projection",
                  "in":"query",
                  "description":"allows the caller to obtain a subset of properties by passing a comma separated list of projection names.  Call /rh/api/product/projections for the list of valid projections.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"siteId",
                  "in":"query",
                  "description":"siteId",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"locale",
                  "in":"query",
                  "description":"locale",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"currencyCode",
                  "in":"query",
                  "description":"currencyCode",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input, incorrect projections"
               },
               "404":{
                  "description":"Product does not exist for passed id."
               }
            }
         }
      },
      "/products/v1":{
         "get":{
            "tags":[
               "product"
            ],
            "summary":"Exposes a list of products",
            "description":"",
            "operationId":"generateProducts",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"ids",
                  "in":"query",
                  "description":"ids of the desired product",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"categoryId",
                  "in":"query",
                  "description":"parent category id (optional).  Generally used to identify face out swatches for the small percentage of products which use face out colorization. ",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"filter",
                  "in":"query",
                  "description":"sale filter param either 'sale' or 'finalSale' - can be empty",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "sale",
                     "finalSale"
                  ]
               },
               {
                  "name":"projection",
                  "in":"query",
                  "description":"allows the caller to obtain a subset of properties by passing a comma separated list of projection names.  Call /rh/api/product/projections for the list of valid projections.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"siteId",
                  "in":"query",
                  "description":"siteId",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"locale",
                  "in":"query",
                  "description":"locale",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"measureSystem",
                  "in":"query",
                  "description":"measureSystem",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"currencyCode",
                  "in":"query",
                  "description":"currencyCode",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input, incorrect projections"
               },
               "404":{
                  "description":"Product does not exist for passed id."
               }
            }
         }
      },
      "/productview/sku/combined/altimages":{
         "post":{
            "tags":[
               "product"
            ],
            "summary":"",
            "description":"",
            "operationId":"fetchProductSkuView",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/ProductSkuViewRequest"
                     }
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":""
               },
               "207":{
                  "description":""
               },
               "400":{
                  "description":""
               },
               "500":{
                  "description":""
               }
            }
         }
      },
      "/productview/sku/combined/view":{
         "post":{
            "tags":[
               "product"
            ],
            "summary":"",
            "description":"",
            "operationId":"fetchProductAltImages",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/ProductSkuViewRequest"
                     }
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":""
               },
               "207":{
                  "description":""
               },
               "400":{
                  "description":""
               },
               "500":{
                  "description":""
               }
            }
         }
      },
      "/productview/sku/combined/view/sku":{
         "post":{
            "tags":[
               "product"
            ],
            "summary":"",
            "description":"",
            "operationId":"getSkuData",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/ProductSkuViewRequest"
                     }
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":""
               },
               "207":{
                  "description":""
               },
               "400":{
                  "description":""
               },
               "500":{
                  "description":""
               }
            }
         }
      },
      "/productview/sku/combined/view/skuinfo":{
         "post":{
            "tags":[
               "product"
            ],
            "summary":"",
            "description":"",
            "operationId":"getSkuInfoData",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/ProductSkuViewRequest"
                     }
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":""
               },
               "207":{
                  "description":""
               },
               "400":{
                  "description":""
               },
               "500":{
                  "description":""
               }
            }
         }
      },
      "/productview/sku/combined/view/skus":{
         "post":{
            "tags":[
               "product"
            ],
            "summary":"",
            "description":"",
            "operationId":"getSkusData",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/ProductSkuViewRequest"
                     }
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":""
               },
               "207":{
                  "description":""
               },
               "400":{
                  "description":""
               },
               "500":{
                  "description":""
               }
            }
         }
      },
      "/profile/v1/get":{
         "get":{
            "tags":[
               "profile"
            ],
            "summary":"Get current profile.",
            "description":"Used to retrieve basic status information about the current profile. This should be invoked by displays which need to invoke a user session at the application server.",
            "operationId":"get",
            "produces":[
               "application/json"
            ],
            "parameters":[
               
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "type":"string"
                  }
               }
            }
         }
      },
      "/profile/v1/nearestGalleryDetails":{
         "get":{
            "tags":[
               "profile"
            ],
            "summary":"Provides basic information about nearest Gallery.",
            "description":"Used to retrieve basic information of nearest Gallery. ",
            "operationId":"getNearestGalleryDetails",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"pc",
                  "in":"cookie",
                  "description":"Postal code value fetched from cookie.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"postalCode",
                  "in":"query",
                  "description":"Postal code to check stock levels against.  If none passed then the system will check for a postal code cookie named 'pc'",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"radius",
                  "in":"query",
                  "description":"Postal code to check stock levels against.  If none passed then the system will check for a postal code cookie named 'pc'",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"brand",
                  "in":"query",
                  "description":"Postal code to check stock levels against.  If none passed then the system will check for a postal code cookie named 'pc'",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "type":"string"
                  }
               }
            }
         }
      },
      "/profile/v1/sessionConf":{
         "get":{
            "tags":[
               "profile"
            ],
            "summary":"Provides session confirmation number for form submissions.",
            "description":"To prevent Cross Site Request Forgery our JSON POST requests need to pass a session confirmation number as a query arg.  The arg name is '_sessionConf' and the value passed is checked against a number stored on session.\n\nThis service provides the session confirmation number for a given session.  Thus this operates on JSESSIONID. \n\nOne can use curl to test these things by using curls ability to reference a cookie file allowing re-use of the JSESSIONIDwhich is required when dealing with session confirmation. A sample command is below.\n\n`curl -c ~/cookieFile.txt -i -X GET --header 'Accept: application/json' 'https://www.restorationhardware.com/rh/api/profile/v1/sessionConf'`",
            "operationId":"getProfileSessionConfirmationNumber",
            "produces":[
               "application/json"
            ],
            "parameters":[
               
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "type":"string"
                  }
               }
            }
         }
      },
      "/profile/v1/status":{
         "get":{
            "tags":[
               "profile"
            ],
            "summary":"Provides status of current profile.",
            "description":"Used to retrieve basic status information about the current profile. This should be invoked by displays which need to invoke a user session at the application server.",
            "operationId":"getProfileStatus",
            "produces":[
               "application/json"
            ],
            "parameters":[
               
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "type":"string"
                  }
               }
            }
         }
      },
      "/profile/v1/testConf":{
         "post":{
            "tags":[
               "profile"
            ],
            "summary":"Test API exposed to verify validation of session confirmation.",
            "description":"This API is exposed purely as a convenience to the team to perform an isolated test of the Cross Site Request Forgery prevention mechanism without having to submit actual function calls. \n\nTo POST data to JAXRS forms one must first get a session confirmation number from the session confirmation service.  The POST request must then include the '_sessionConf' parameter as a query argument.\n\nOne can use curl to test these things by using curls ability to reference a cookie file allowing re-use of the JSESSIONID which is required when dealing with session confirmation. A sample command is below.\n\n`curl -b ~/cookieFile.txt -i -X POST --header 'Content-Type: application/json' --header 'Accept: application/json' -d '{ &quot;id&quot;:&quot;string&quot; }' 'https://www.restorationhardware.com/rh/api/profile/v1/testConf?_sessionConf=-28006784192505854'`",
            "operationId":"postSessionConf",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/GenericJSONId"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "409":{
                  "description":"If the passed confirmation id does not match the one for the session."
               }
            }
         }
      },
      "/profile/v1/testconf":{
         "options":{
            "tags":[
               "profile"
            ],
            "summary":"Handles CORS preflight requests ",
            "description":"",
            "operationId":"postSessionConfOptions",
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/project/v1":{
         "post":{
            "tags":[
               "project"
            ],
            "summary":"Create Project",
            "description":" Used to create the domain 'project' and its sub-domain such as division,clients and associates. Here Project entity is mandatory. ",
            "operationId":"create",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/ProjectServiceRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/ProjectServiceResponse"
                  }
               },
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to create these project."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/project/v1/addItems":{
         "post":{
            "tags":[
               "project"
            ],
            "summary":"Add Items to Project",
            "description":" Use to add an items into the project. Here Project id, Opportunity Number and Division id is mandatory parameters. ",
            "operationId":"addItemsToProject",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/AddItemsToProjectRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to create these project."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/project/v1/applyPromotionalPrice":{
         "post":{
            "tags":[
               "project"
            ],
            "summary":"Apply promotional Coupon to an order in a Project",
            "description":"Apply promotional Coupon to an order in a ProjectopportunityNumber, project id and Coupon Id are mandatory parameters. ",
            "operationId":"applyPromotionalPrice",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/PromotionalPriceOverrideRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden: You are not authorized to access this project functionality."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/project/v1/calculateDivisionEstimatedPrice/{projectId}/{divisionId}":{
         "get":{
            "tags":[
               "project"
            ],
            "summary":"Calculate the Division Price of the selected Items ",
            "description":"",
            "operationId":"calculateDivisionEstimatedPrice",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"projectId",
                  "in":"path",
                  "description":"Project Id",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"divisionId",
                  "in":"path",
                  "description":"Division Id",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"accessToken",
                  "in":"query",
                  "description":"Access Token to access the project in e-store",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to create these project."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/project/v1/copyOrderToProject":{
         "post":{
            "tags":[
               "project"
            ],
            "summary":"Used to copy the items of the order to the project",
            "description":" Used to copy the items of the order to the projectHere Project id, Division id   is mandatory parameters. ",
            "operationId":"copyOrderToProject",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/CopyOrderToProjectRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to create these project."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/project/v1/createCommunication":{
         "post":{
            "tags":[
               "project"
            ],
            "summary":"Create Communication for a project",
            "description":"Creating a communication.ProjectId, Selected Items, list of recipients are mandatory parameters. ",
            "operationId":"createCommunicationForProject",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/CreateProjectCommunicationRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to create these project."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/project/v1/createMoodboardCommunication":{
         "post":{
            "tags":[
               "project"
            ],
            "summary":"Create Moodboard Communication for a project",
            "description":"Creating a communication to share moodboardProjectId, Selected Items, list of recipients are mandatory parameters. ",
            "operationId":"createMoodboardCommunication",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/CreateProjectCommunicationRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to create these project."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/project/v1/createPersonAccount":{
         "post":{
            "tags":[
               "project"
            ],
            "summary":"Create Client Person Account",
            "description":" Used to create a client (person) account.",
            "operationId":"createSFPersonAccount",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/CreateSFPersonAccountRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/CreateSFPersonAccountResponse"
                  }
               },
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to create this client account."
               },
               "409":{
                  "description":"Conflict: Account already exists."
               },
               "500":{
                  "description":"Internal Server Error."
               },
               "503":{
                  "description":"Internal Server Error. Service Unavailable."
               }
            }
         }
      },
      "/project/v1/createTradeAccount":{
         "post":{
            "tags":[
               "project"
            ],
            "summary":"Create Client Trade Account",
            "description":" Used to create a trade account.",
            "operationId":"createSFTradeAccount",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/CreateSFTradeAccountRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/CreateSFTradeAccountResponse"
                  }
               },
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to create this client account."
               },
               "409":{
                  "description":"Conflict: Account already exists."
               },
               "500":{
                  "description":"Internal Server Error."
               },
               "503":{
                  "description":"Internal Server Error. Service Unavailable."
               }
            }
         }
      },
      "/project/v1/createUnclassifiedAccount":{
         "post":{
            "tags":[
               "project"
            ],
            "summary":"Create Unclassified Business Account",
            "description":" Used to create an unclassified business account.",
            "operationId":"createSFUnclassifiedBusinessAccount",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/CreateSFTradeAccountRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/CreateSFTradeAccountResponse"
                  }
               },
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to create this account."
               },
               "409":{
                  "description":"Conflict: Account already exists."
               },
               "500":{
                  "description":"Internal Server Error."
               },
               "503":{
                  "description":"Internal Server Error. Service Unavailable."
               }
            }
         }
      },
      "/project/v1/divisionItem/setNotes":{
         "post":{
            "tags":[
               "project"
            ],
            "summary":"Adding Notes to the items available in the spaces",
            "description":"Adding Notes to the items available in the spaces",
            "operationId":"setNotes",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/DivisionItemNotesRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to create these project."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/project/v1/estimateProjectPrice/{projectId}":{
         "get":{
            "tags":[
               "project"
            ],
            "summary":"Calculate the project price only for the selected division and its selected item.",
            "description":"",
            "operationId":"calculateProjectEstimatedPrice",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"projectId",
                  "in":"path",
                  "description":"Project Id",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"opportunityNumber",
                  "in":"query",
                  "description":"The active opportunity number",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"isoCurrency",
                  "in":"query",
                  "description":"The 3-digit ISO currency value for the provided opportunity",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"accessToken",
                  "in":"query",
                  "description":"Access Token to access the project in e-store",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to create these project."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/project/v1/galleriesFeature/{featureName}":{
         "get":{
            "tags":[
               "project"
            ],
            "summary":"Get the gallery numbers for the provided feature name",
            "description":"",
            "operationId":"getGalleriesFeature",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"featureName",
                  "in":"path",
                  "description":"Feature Name",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"accessToken",
                  "in":"query",
                  "description":"Access Token to access the project in e-store",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to create these project."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/project/v1/getDivisionItemsPrice/{projectId}/{divisionId}":{
         "get":{
            "tags":[
               "project"
            ],
            "summary":"Get the Division Item Price ",
            "description":"",
            "operationId":"getDivisionItemsPrice",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"projectId",
                  "in":"path",
                  "description":"Project Id",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"divisionId",
                  "in":"path",
                  "description":"Division Id",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"accessToken",
                  "in":"query",
                  "description":"Access Token to access the project in e-store",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to create these project."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/project/v1/hideProject":{
         "post":{
            "tags":[
               "project"
            ],
            "summary":"Hide/Show project",
            "description":" Use to Hide or Show the Projects of the Logged-in associates.Here Project entity is mandatory. ",
            "operationId":"hideProjectForCurrentProfile",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/HideProjectRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to create these project."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/project/v1/moveCurrentCartToProject":{
         "post":{
            "tags":[
               "project"
            ],
            "summary":"Used to move the items from the current cart to the project",
            "description":" Used to move the items from the current cart to the projectHere Project id, Division id   is mandatory parameters. ",
            "operationId":"moveCurrentCartToProject",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/MoveCurrentCartToProjectRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to create these project."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/project/v1/moveItemToDifferentSpace":{
         "post":{
            "tags":[
               "project"
            ],
            "summary":"Move Items to different space",
            "description":" Use to move the items to different space.Here Project id, Division id and commerce Item Id  is mandatory parameters. ",
            "operationId":"moveItemToDifferentSpace",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/MoveItemToDifferentSpaceRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to create these project."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/project/v1/moveToCart":{
         "post":{
            "tags":[
               "project"
            ],
            "summary":"Adding the project items into the cart",
            "description":"Adding the selected items from the project to current shopping cart",
            "operationId":"moveItemsToCurrentCart",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/MoveProjectItemsToCartRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to create these project."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/project/v1/opportunity":{
         "post":{
            "tags":[
               "project"
            ],
            "summary":"Create Opportunity",
            "description":" Used to create an opportunity for an existing project. The Project entity containing the Opportunity entity is mandatory.",
            "operationId":"createOpportunity",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/ProjectServiceRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden: You are not authorized to create this opportunity."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/project/v1/opportunity/{opportunityNumber}":{
         "get":{
            "tags":[
               "project"
            ],
            "summary":"Fetch opportunity",
            "description":"Get the opportunity based on the opportunity number",
            "operationId":"fetchOpportunity",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"opportunityNumber",
                  "in":"path",
                  "description":"Opportunity number",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Opportunity successfully returned"
               },
               "404":{
                  "description":"Opportunity not found."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/project/v1/opportunityLines/{opportunityNumber}":{
         "get":{
            "tags":[
               "project"
            ],
            "summary":"Fetch opportunity",
            "description":"Get the opportunity based on the opportunity number",
            "operationId":"fetchOpportunityLines",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"opportunityNumber",
                  "in":"path",
                  "description":"Opportunity number",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"Opportunity successfully returned"
               },
               "404":{
                  "description":"Opportunity not found."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/project/v1/overridePrice":{
         "post":{
            "tags":[
               "project"
            ],
            "summary":"Override the Price of an item or an order in a Project",
            "description":"Override the Price of an item or an order in a ProjectProjectId, Opportunity Id, Divison Item Id, Override Calculation Type, Override Value, Reason Code and Apply To All are mandatory parameters. ",
            "operationId":"overridePrice",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/PriceOverrideRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden: You are not authorized to access this project functionality."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/project/v1/persistDivisionsSelection":{
         "post":{
            "tags":[
               "project"
            ],
            "summary":"Used to persists the division selection of the project.",
            "description":"",
            "operationId":"persistDivisionSelections",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/PersistDivisionsSelectionRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to create these project."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/project/v1/persistFlippedImage":{
         "post":{
            "tags":[
               "project"
            ],
            "summary":"used to persist the image flip in the moodboard",
            "description":"",
            "operationId":"persistFlippedImage",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/PersistFlippedImageRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to create these project."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/project/v1/persistSelectedImageIndex":{
         "post":{
            "tags":[
               "project"
            ],
            "summary":"used to selected image index in the moodboard",
            "description":"",
            "operationId":"persistSelectedImageIndex",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/PersistSelectedImageInMoodboardRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to create these project."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/project/v1/projectsByProfile":{
         "get":{
            "tags":[
               "project"
            ],
            "summary":"User Specific Projects",
            "description":"Get the user specific projects based on the profile whose has logged-in",
            "operationId":"getUserSpecificProjects",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"hiddenForUser",
                  "in":"query",
                  "description":"Helps to fetch the hidden,Unhide projects based on the value requested",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "true",
                     "false"
                  ]
               },
               {
                  "name":"pageNum",
                  "in":"query",
                  "description":"Represent the page number.If not present, then default to first page.",
                  "required":false,
                  "type":"integer",
                  "default":1,
                  "format":"int32"
               },
               {
                  "name":"recordsPerPage",
                  "in":"query",
                  "description":"Represent the number of records per page.",
                  "required":false,
                  "type":"integer",
                  "default":10,
                  "format":"int32"
               },
               {
                  "name":"sortByField",
                  "in":"query",
                  "description":"Represent the sort field name.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"sortDirection",
                  "in":"query",
                  "description":"Represent the sort direction either ascending or decending",
                  "required":false,
                  "type":"integer",
                  "format":"int32",
                  "enum":[
                     1,
                     2
                  ]
               },
               {
                  "name":"_client",
                  "in":"query",
                  "description":"The parameter helps to pull the client information in the project lookup service.Service will pull the client information only if the parameters is true.",
                  "required":true,
                  "type":"boolean",
                  "enum":[
                     "true",
                     "false"
                  ]
               },
               {
                  "name":"_associates",
                  "in":"query",
                  "description":"The parameter helps to pull the associates information in the project lookup service.Service will pull the associates information only if the parameters is true.",
                  "required":true,
                  "type":"boolean",
                  "enum":[
                     "true",
                     "false"
                  ]
               },
               {
                  "name":"_division",
                  "in":"query",
                  "description":"The parameter helps to pull the division information in the project lookup service.Service will pull the divisions information only if the parameters is true.",
                  "required":true,
                  "type":"boolean",
                  "enum":[
                     "true",
                     "false"
                  ]
               },
               {
                  "name":"_forecasts",
                  "in":"query",
                  "description":"This parameter is used in the projection to pull forecasts for the project.",
                  "required":true,
                  "type":"boolean",
                  "enum":[
                     "true",
                     "false"
                  ]
               },
               {
                  "name":"_opportunity",
                  "in":"query",
                  "description":"The parameter helps to pull the opportunity information in the project lookup service.Service will pull the opportunity information only if the parameters is true.",
                  "required":true,
                  "type":"boolean",
                  "enum":[
                     "true",
                     "false"
                  ]
               },
               {
                  "name":"_divisionselection",
                  "in":"query",
                  "description":"this parameter is used in the projection to pull selection of the division.",
                  "required":true,
                  "type":"boolean",
                  "enum":[
                     "true",
                     "false"
                  ]
               },
               {
                  "name":"paginationEnabled",
                  "in":"query",
                  "description":"Flag to enable pagination",
                  "required":true,
                  "type":"boolean",
                  "default":false,
                  "enum":[
                     "true",
                     "false"
                  ]
               }
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         },
         "options":{
            "tags":[
               "project"
            ],
            "summary":"Handles CORS preflight requests ",
            "description":"",
            "operationId":"getUserSpecificProjectsOptions",
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/project/v1/removeItem":{
         "post":{
            "tags":[
               "project"
            ],
            "summary":"Remove an Items from Project",
            "description":" Use to remove an items from the project. Here Project id, Division id and commerce item id is mandatory parameters. ",
            "operationId":"removeItemFromProject",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/RemoveItemFromProjectRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to create these project."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/project/v1/removeOverridePrice":{
         "post":{
            "tags":[
               "project"
            ],
            "summary":"Removes the Override Price of an item or an order in a Project",
            "description":"Removes the Override Price of an item or an order in a ProjectProjectId, Divison Item Id and Apply To All are mandatory parameters. ",
            "operationId":"removeOverridePrice",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/RemovePriceOverrideRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden: You are not authorized to access this project functionality."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/project/v1/removePromotionalPrice":{
         "post":{
            "tags":[
               "project"
            ],
            "summary":"Remove promotional Coupon from an order in a Project",
            "description":"Remove promotional Coupon from an order in a ProjectopportunityNumber, project ID and Coupon Id are mandatory parameters. ",
            "operationId":"removePromotionalPrice",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/PromotionalPriceOverrideRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden: You are not authorized to access this project functionality."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/project/v1/removeShippingPriceOverride":{
         "post":{
            "tags":[
               "project"
            ],
            "summary":"Removes the Shipping Price Override applied to an opportunity in a Project",
            "description":"Override the the Shipping Price of an opportunity in a ProjectProjectId, Opportunity Id, Override Type, Override Value, Reason Code are mandatory parameters. ",
            "operationId":"removeShippingoverride",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/RemoveShippingPriceOverrideRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden: You are not authorized to access this project functionality."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/project/v1/reorderItemsWithinSpace":{
         "post":{
            "tags":[
               "project"
            ],
            "summary":"Move Items with in a space",
            "description":" Use to move the items within space.Here Project id, Division id and commerce Item Id  is mandatory parameters. ",
            "operationId":"moveItemWithInSpace",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/MoveItemWithInSpaceRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to create these project."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/project/v1/reorderMoodboardItemsWithinSpace":{
         "post":{
            "tags":[
               "project"
            ],
            "summary":"Move Moodboard Items with in a space",
            "description":" Use to move the moodboard items within space.Here Project id, Division id and commerce Item Id  is mandatory parameters. ",
            "operationId":"reorderMoodboardItemsWithinSpace",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/MoveItemWithInSpaceRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to create these project."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/project/v1/search":{
         "post":{
            "tags":[
               "project"
            ],
            "summary":"Search projects",
            "description":"Search the Projects.By Default, Service will give the projects which were created or modified by the current logged in user",
            "operationId":"search",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/ProjectSearchRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to create these project."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/project/v1/searchContact":{
         "post":{
            "tags":[
               "project"
            ],
            "summary":"Search for client Account",
            "description":" Used to search for a client account. ",
            "operationId":"searchSFClientAccount",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/SearchSFClientAccountRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/SearchSFClientAccountResponse"
                  }
               },
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to perform a search on the end system."
               },
               "500":{
                  "description":"Internal Server Error."
               },
               "503":{
                  "description":"Internal Server Error. Service Unavailable"
               }
            }
         }
      },
      "/project/v1/sendforecast/{projectId}":{
         "post":{
            "tags":[
               "project"
            ],
            "summary":"Send Project Forecasting",
            "description":"Sent Project Forecasting",
            "operationId":"sendForecasting",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"projectId",
                  "in":"path",
                  "description":"Project Id to be Forecast",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"opportunityNumber",
                  "in":"query",
                  "description":"The opportunity number to load when loading a project",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/project/v1/setForecasting":{
         "post":{
            "tags":[
               "project"
            ],
            "summary":"Sets the forecasting properties of Project",
            "description":" Use to set forecasting of a project. ",
            "operationId":"setForecasting",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/SetProjectForecastingRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to set forecasting for this project."
               },
               "404":{
                  "description":"Project not found"
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/project/v1/setItemIsHiddenInMoodboard":{
         "post":{
            "tags":[
               "project"
            ],
            "summary":"used to hide or unhide the item in the moodboard",
            "description":"",
            "operationId":"setItemIsHiddenInMoodboard",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/HideItemInMoodboardRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to create these project."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/project/v1/setScale":{
         "post":{
            "tags":[
               "project"
            ],
            "summary":"Set Scale Width and Height of the Item",
            "description":" Use to set scale width and height of the item.Here Project id, Division id and commerce Item Id  is mandatory parameters. ",
            "operationId":"setScale",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/MoodBoardItemScaleRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to create these project."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/project/v1/shippingPriceOverride":{
         "post":{
            "tags":[
               "project"
            ],
            "summary":"Override the Shipping Price of an opportunity in a Project",
            "description":"Override the the Shipping Price of an opportunity in a ProjectProjectId, Opportunity Id, Override Type, Override Value, Reason Code are mandatory parameters. ",
            "operationId":"overrideShippingPrice",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/ShippingPriceOverrideRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden: You are not authorized to access this project functionality."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/project/v1/updateItem":{
         "post":{
            "tags":[
               "project"
            ],
            "summary":"Update Items to Project",
            "description":" Use to update the items in the project. Here Project id, Division id and commerce Item Id  is mandatory parameters. ",
            "operationId":"updateItemFromProject",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/UpdateItemFromProjectRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to create these project."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/project/v1/{projectId}":{
         "get":{
            "tags":[
               "project"
            ],
            "summary":"Fetch projects",
            "description":"Get the project based on the ProjectId",
            "operationId":"fetch",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"projectId",
                  "in":"path",
                  "description":"Project Id to be fetch",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"_client",
                  "in":"query",
                  "description":"The parameter helps to pull the client information in the project lookup service.Service will pull the client information only if the parameters is true.",
                  "required":true,
                  "type":"boolean"
               },
               {
                  "name":"_associates",
                  "in":"query",
                  "description":"The parameter helps to pull the associates information in the project lookup service.Service will pull the associates information only if the parameters is true.",
                  "required":true,
                  "type":"boolean"
               },
               {
                  "name":"_division",
                  "in":"query",
                  "description":"The parameter helps to pull the division information in the project lookup service.Service will pull the divisions information only if the parameters is true.",
                  "required":true,
                  "type":"boolean"
               },
               {
                  "name":"_product",
                  "in":"query",
                  "description":"The parameter helps to pull the product information in the project lookup service. Service will pull product information only if the parameter is true.",
                  "required":true,
                  "type":"boolean"
               },
               {
                  "name":"_priceproject",
                  "in":"query",
                  "description":"The parameter helps to calculate the price of the complete project. Service will calculate the price only if the parameter is true.",
                  "required":true,
                  "type":"boolean"
               },
               {
                  "name":"_forecasts",
                  "in":"query",
                  "description":"This parameter is used in the projection to pull forecasts for the project.",
                  "required":true,
                  "type":"boolean"
               },
               {
                  "name":"_moodboard",
                  "in":"query",
                  "description":"This parameter is used in the projection to pull moodboard attributes for the project.",
                  "required":true,
                  "type":"boolean"
               },
               {
                  "name":"_pdfshipto",
                  "in":"query",
                  "description":"This parameter is used to pull the shipping address displayed on a PDF resulting from the print screen operation. The address is not used during checkout.",
                  "required":true,
                  "type":"boolean"
               },
               {
                  "name":"_opportunity",
                  "in":"query",
                  "description":"The parameter helps to pull the opportunity information in the project lookup service.Service will pull the opportunity information only if the parameters is true.",
                  "required":true,
                  "type":"boolean"
               },
               {
                  "name":"accessToken",
                  "in":"query",
                  "description":"Access Token to access the project in e-store",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"opportunityNumber",
                  "in":"query",
                  "description":"The opportunity number to load when loading a project",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/GetProjectResponse"
                  }
               }
            }
         },
         "put":{
            "tags":[
               "project"
            ],
            "summary":"Update Project",
            "description":"",
            "operationId":"update",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"projectId",
                  "in":"path",
                  "description":"Project Id to be updated",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/ProjectServiceRequest"
                  }
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to create these project."
               },
               "404":{
                  "description":"Page Not Found"
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         },
         "delete":{
            "tags":[
               "project"
            ],
            "summary":"Delete Project",
            "description":"Delete the project",
            "operationId":"remove",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"projectId",
                  "in":"path",
                  "description":"Project Id to be removed",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/project/v1/{projectId}/{divisionId}":{
         "get":{
            "tags":[
               "project"
            ],
            "summary":"Get the list of division Items",
            "description":"",
            "operationId":"getDivision",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"projectId",
                  "in":"path",
                  "description":"Project Id",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"divisionId",
                  "in":"path",
                  "description":"Division Id",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"_product",
                  "in":"query",
                  "description":"The parameter helps to pull the product information in the project lookup service. Service will pull product information only if the parameter is true.",
                  "required":true,
                  "type":"boolean"
               },
               {
                  "name":"includeOptions",
                  "in":"query",
                  "description":"flag to include the custom product options in the response or not.",
                  "required":true,
                  "type":"boolean"
               },
               {
                  "name":"includeItemPrice",
                  "in":"query",
                  "description":"flag to include the item price in the response or not.",
                  "required":true,
                  "type":"boolean"
               },
               {
                  "name":"includeCustomOptions",
                  "in":"query",
                  "description":"flag to include the custom product options in the response or not.",
                  "required":true,
                  "type":"boolean"
               },
               {
                  "name":"accessToken",
                  "in":"query",
                  "description":"Access Token to access the project in e-store",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         },
         "delete":{
            "tags":[
               "project"
            ],
            "summary":"Delete Division of the project",
            "description":"",
            "operationId":"removeDivision",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"projectId",
                  "in":"path",
                  "description":"Project",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"divisionId",
                  "in":"path",
                  "description":"Division Id to be removed",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/project/v1/{projectId}/{divisionId}/{divisionItemId}":{
         "get":{
            "tags":[
               "project"
            ],
            "summary":"Get the Division Item",
            "description":"",
            "operationId":"getDivisionItem",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"projectId",
                  "in":"path",
                  "description":"Project Id",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"divisionId",
                  "in":"path",
                  "description":"Division Id",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"divisionItemId",
                  "in":"path",
                  "description":"Division Item Id",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"includeOptions",
                  "in":"query",
                  "description":"flag to include the custom product options in the response or not.",
                  "required":true,
                  "type":"boolean"
               },
               {
                  "name":"includeItemPrice",
                  "in":"query",
                  "description":"flag to include the item price in the response or not.",
                  "required":true,
                  "type":"boolean"
               },
               {
                  "name":"includeCustomOptions",
                  "in":"query",
                  "description":"flag to include the custom product options in the response or not.",
                  "required":true,
                  "type":"boolean"
               },
               {
                  "name":"accessToken",
                  "in":"query",
                  "description":"Access Token to access the project in e-store",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         },
         "post":{
            "tags":[
               "project"
            ],
            "summary":"Used to persists the division selection of the project.",
            "description":"",
            "operationId":"persistDivisionItemSelection",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"projectId",
                  "in":"path",
                  "description":"Project Id",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"divisionId",
                  "in":"path",
                  "description":"DivisionId Id",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"divisionItemId",
                  "in":"path",
                  "description":"DivisionId Id",
                  "required":true,
                  "type":"string"
               },
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/PersistDivisionItemSelectionRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to create these project."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/projectfulfillment/v1/{projectId}/{divisionId}":{
         "get":{
            "tags":[
               "ProjectFulfillment"
            ],
            "summary":"Provides availability,delivery,restriction information for each item in the space.",
            "description":"",
            "operationId":"fetchFullfillmentInformations",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"projectId",
                  "in":"path",
                  "description":"Project Id",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"divisionId",
                  "in":"path",
                  "description":"Division Id",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"postalCode",
                  "in":"query",
                  "description":"postal code parameter",
                  "required":true,
                  "type":"string",
                  "default":"UNSET"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to create these project."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/quicklook/v1/addToCart":{
         "post":{
            "tags":[
               "quicklook"
            ],
            "summary":"Adding the quicklook items into the cart",
            "description":"Adding the selected items from the quick look component to current shopping cart",
            "operationId":"moveItemsToCurrentCart",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/AddQuickLookItemsToCartRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to create these project."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/sample/gallery/v1/{sampleId}":{
         "get":{
            "tags":[
               "sample"
            ],
            "summary":"Not Implemented.",
            "description":"",
            "operationId":"sampleRestMethod",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"sampleId",
                  "in":"path",
                  "description":"Sample Input Id.",
                  "required":true,
                  "type":"string",
                  "x-example":"12345"
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Sku data does not exist for passed id."
               }
            }
         }
      },
      "/scheduleAppointment/v1/sendEmail":{
         "post":{
            "tags":[
               "schedule appointment"
            ],
            "summary":"Sends email to Gallery Locator.",
            "description":"Posting request to form so that email can be sent to Gallery Contact person for scheduling appointment.",
            "operationId":"scheduleAppointemnt",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/ScheduleAppointmentRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to submit the request."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/shades/drapes/configPrice/v1":{
         "get":{
            "tags":[
               "customShadesDrapes"
            ],
            "operationId":"getShadesDrapesConfigPrice",
            "produces":[
               "application/json"
            ],
            "parameters":[
               
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"No configuration pricing found"
               }
            }
         }
      },
      "/shades/drapes/price/v1":{
         "get":{
            "tags":[
               "customShadesDrapes"
            ],
            "operationId":"getShadesDrapesPrice",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"query",
                  "description":"The sku of the custom shade or drape",
                  "required":false,
                  "type":"string",
                  "x-example":"13880161 CHAR"
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"sku does not exist for passed id."
               }
            }
         }
      },
      "/shopbyroom/v1":{
         "get":{
            "tags":[
               "display"
            ],
            "summary":"Returns top level shop by room display based on site id",
            "description":"",
            "operationId":"generateShopByRoomDisplay",
            "produces":[
               "application/json"
            ],
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/shopbyroom/v1/{folderId}":{
         "get":{
            "tags":[
               "display"
            ],
            "summary":"Returns top level shop by room display based on folder they belong to.",
            "description":"In case of standalone shop by room service this will be used.",
            "operationId":"generateShopByRoomDisplayById",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"folderId",
                  "in":"path",
                  "description":"Name of the folder id for which to fetch rooms",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/site/info/v1":{
         "get":{
            "tags":[
               "siteinfo"
            ],
            "operationId":"getSkuPriceByQuery",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"query",
                  "description":"site id",
                  "required":true,
                  "type":"string",
                  "x-example":"RH"
               }
            ],
            "responses":{
               "400":{
                  "description":"A site Id must be passed along."
               },
               "404":{
                  "description":"site does not exist for passed id."
               }
            }
         }
      },
      "/site/info/v1/{siteId}":{
         "get":{
            "tags":[
               "siteinfo"
            ],
            "summary":"Provides site info.",
            "description":"",
            "operationId":"getSiteInfoBy",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"siteId",
                  "in":"path",
                  "description":"site id",
                  "required":true,
                  "type":"string",
                  "x-example":"RH"
               }
            ],
            "responses":{
               "400":{
                  "description":"A site Id must be passed along."
               },
               "404":{
                  "description":"site does not exist for passed id."
               }
            }
         }
      },
      "/site/navigation/v1":{
         "get":{
            "tags":[
               "navigation"
            ],
            "summary":"Json representation of the catalog",
            "description":"Returns the site matching the Url domain.",
            "operationId":"generateSiteNavigation",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"catalogOverride",
                  "in":"query",
                  "description":"override catalog for beach house / ski house' - can be empty",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"APP_ID",
                  "in":"query",
                  "description":"APP_ID for e.g. ESTORE/CONCIERGE",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "ESTORE",
                     "CONCIERGE"
                  ]
               }
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      },
      "/site/navigation/v1/rhr/{id}":{
         "get":{
            "tags":[
               "navigation"
            ],
            "summary":"Json representation of the site nav",
            "description":"Displays the cross site navigation menu",
            "operationId":"generateRHRSiteNavigation",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"site id",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"APP_ID",
                  "in":"query",
                  "description":"APP_ID for e.g. ESTORE/CONCIERGE",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "ESTORE",
                     "CONCIERGE"
                  ]
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Site does not exist in the system"
               }
            }
         }
      },
      "/site/navigation/v1/{id}":{
         "get":{
            "tags":[
               "navigation"
            ],
            "summary":"Json representation of the site nav",
            "description":"Displays the cross site navigation menu",
            "operationId":"generateSiteNavigation",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"site id",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"catalogOverride",
                  "in":"query",
                  "description":"override catalog for beach house / ski house' - can be empty",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"APP_ID",
                  "in":"query",
                  "description":"APP_ID for e.g. ESTORE/CONCIERGE",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "ESTORE",
                     "CONCIERGE"
                  ]
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Site does not exist in the system"
               }
            }
         }
      },
      "/sku/attributes/v1":{
         "get":{
            "tags":[
               "product"
            ],
            "summary":"Generates sku attributes,Image URL by full sku id.",
            "description":"This service provides sku attributes for product by their full sku Ids. ",
            "operationId":"getSkuDetails",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"fullSkuId",
                  "in":"query",
                  "description":"Comma separated list of Full Sku Ids used to find the specific swatches for the sku and image then colorize with those.",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Product does not exist for passed id."
               }
            }
         }
      },
      "/sku/delivery/v1/{productId}":{
         "get":{
            "tags":[
               "fulfillment",
               "sku"
            ],
            "summary":"Provides delivery info for a given sku and postal code.",
            "description":"The service will seek out the 'pc' cookie to read the user's postal code. The value of the 'pc' cookie can be overridden by passing a 'postalCode' parameter. To support the unknown postal code case one can also pass 'postalCode=unset' to effectively null out the postal code and view the service from the perspective of a user who has not supplied one yet.\n\n This service provides details on delivery charges for the item.  The possibilities are standard delivery, home delivery, or freight exemption.  If an item has a zeroEstimate for home delivery and its not freight exempt then the item ships via standard delivery and standard delivery fees apply.\n\n**Home Delivery Estimate Status** \n\n*zeroEstimate*: Means there is no home delivery estimate - these charges do not apply.\n\n*estimateAvailable*: Means there is a home delivery estimate and home delivery charges apply.\n\n*missingPostalCode*: Postal code is missing from the input and is required for a delivery estimate.\n\n*invalidPostalCode*: Postal code is invalid from the input and is required for a delivery estimate.\n\nNOTE: this service may use the 'userContext' cookie for certain operations",
            "operationId":"fetchDeliveryInfo",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"pc",
                  "in":"cookie",
                  "description":"Optional postal code parameter retrieved from the 'pc' cookie. Used for inventory info.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"postalCode",
                  "in":"query",
                  "description":"Optional postal code parameter, overrides 'pc' parameter. Used for inventory info.  Passing 'unset' will pass null for pc.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"productId",
                  "in":"path",
                  "description":"The ID of the product the sku belongs to.",
                  "required":true,
                  "type":"string",
                  "x-example":"prod1617246"
               },
               {
                  "name":"fullSkuId",
                  "in":"query",
                  "description":"full sku id",
                  "required":false,
                  "type":"string",
                  "x-example":"62930640 BLBK"
               },
               {
                  "name":"siteId",
                  "in":"query",
                  "description":"Optional site id passed in to override the one pulled from the domain context.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"lineId",
                  "in":"query",
                  "description":"Optional parameter passed into the service and returned back to the caller as the lineId.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"isProject",
                  "in":"query",
                  "description":"Optional parameter indicating this call came from within a concierge project. This has the effect of forcing the currency and country codes to that of the passed in postal",
                  "required":false,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/DeliveryInfoBean"
                  }
               },
               "400":{
                  "description":"Malformed parameter input."
               },
               "404":{
                  "description":"Delivery data does not exist for passed id."
               }
            }
         }
      },
      "/sku/details/v1/imageSkuId/{id}":{
         "get":{
            "tags":[
               "product"
            ],
            "summary":"Returns Promotion Display Image Sku Content based on Id.",
            "description":"Service which returns QuickLook configuration by image sku id",
            "operationId":"findQuickLookConfigurationById",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"id",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "404":{
                  "description":"PromoId does not exist in the system"
               }
            }
         }
      },
      "/sku/image/v1":{
         "get":{
            "tags":[
               "product"
            ],
            "summary":"Generates image urls for products by full sku id.  Supports colorization.",
            "description":"This service provides images for product by their full sku. For colorizable products it will provide colorized images based on input parameters. ",
            "operationId":"getProductImage",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"fullSkuId",
                  "in":"query",
                  "description":"Full Sku Id used to find the specific swatches for the sku and then colorize with those.",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"imageKey",
                  "in":"query",
                  "description":"Products carry several images stored in a map which are accessed by passing a key. This param identifies the desired image in the map.  If not passed the system will use the default key which is 'product'.",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Product does not exist for passed id."
               }
            }
         }
      },
      "/sku/info/v1":{
         "get":{
            "tags":[
               "product"
            ],
            "summary":"Generates sku Info by full sku id.  Supports colorization.",
            "description":"This service provides sku details for product by their full sku. ",
            "operationId":"getSkuInfo",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"fullSkuId",
                  "in":"query",
                  "description":"Full Sku Id used to find the specific swatches for the sku and then colorize with those.",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"imageKey",
                  "in":"query",
                  "description":"Products carry several images stored in a map which are accessed by passing a key. This param identifies the desired image in the map.  If not passed the system will use the default key which is 'product'.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"productId",
                  "in":"query",
                  "description":"Optional product id the sku came from.  If none passed then the system will use the first product it can find that has the sku.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"isMotorized",
                  "in":"query",
                  "description":"isMotorized",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"isContiniousLoop",
                  "in":"query",
                  "description":"isContiniousLoop",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"diameter",
                  "in":"query",
                  "description":"diameter",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"length",
                  "in":"query",
                  "description":"length",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"width",
                  "in":"query",
                  "description":"width",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"userType",
                  "in":"query",
                  "description":"userType",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "regular",
                     "contract",
                     "trade"
                  ]
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Product does not exist for passed id."
               }
            }
         }
      },
      "/sku/info/v1/cart":{
         "get":{
            "tags":[
               "product"
            ],
            "summary":"Generates sku Info by full sku id.  Supports colorization.",
            "description":"This service provides sku details for product by their full sku. ",
            "operationId":"getCartSkuInfo",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"fullSkuId",
                  "in":"query",
                  "description":"Full Sku Id used to find the specific swatches for the sku and then colorize with those.",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"imageKey",
                  "in":"query",
                  "description":"Products carry several images stored in a map which are accessed by passing a key. This param identifies the desired image in the map.  If not passed the system will use the default key which is 'product'.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"productId",
                  "in":"query",
                  "description":"Optional product id the sku came from.  If none passed then the system will use the first product it can find that has the sku.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"isMotorized",
                  "in":"query",
                  "description":"isMotorized",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"isContiniousLoop",
                  "in":"query",
                  "description":"isContiniousLoop",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"diameter",
                  "in":"query",
                  "description":"diameter",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"length",
                  "in":"query",
                  "description":"length",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"width",
                  "in":"query",
                  "description":"width",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Product does not exist for passed id."
               }
            }
         }
      },
      "/sku/info/v1/intl":{
         "get":{
            "tags":[
               "product"
            ],
            "summary":"Generates sku Info by full sku id.  Supports colorization.",
            "description":"This service provides sku details for product by their full sku. ",
            "operationId":"getIntlSkuInfo",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"fullSkuId",
                  "in":"query",
                  "description":"Full Sku Id used to find the specific swatches for the sku and then colorize with those.",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Product does not exist for passed id."
               }
            }
         }
      },
      "/sku/inventory/message/v1/{productId}":{
         "get":{
            "tags":[
               "fulfillment",
               "sku"
            ],
            "summary":"Provides availability information for a specific sku.",
            "description":"Primarily used to provide sku availability information at time of add to cart. This API supports numerous params passed as query arguments in the request.  The main ones are\n\n**optionIds**\n\nEither this or fullSkuId must be passed. Comma separated list of option ids. The system expects this to be the complete list of options for a given sku.\n\n**fullSkuId**\n\nEither this or optionIds must be passed.  Takes precedence over optionIds for obvious reasons.\n\nNOTE: this service may use the 'userContext' cookie for certain operations",
            "operationId":"fetchInventoryMessage",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"productId",
                  "in":"path",
                  "description":"The ID of the product the sku belongs to.",
                  "required":true,
                  "type":"string",
                  "x-example":"prod1617246"
               },
               {
                  "name":"pc",
                  "in":"cookie",
                  "description":"Optional postal code parameter retrieved from the 'pc' cookie. Used for inventory info.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"postalCode",
                  "in":"query",
                  "description":"Optional postal code parameter, overrides 'pc' parameter. Used for inventory info.  Passing 'unset' will pass null for pc.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"fullSkuId",
                  "in":"query",
                  "description":"full sku id",
                  "required":false,
                  "type":"string",
                  "x-example":"62930640 BLBK"
               },
               {
                  "name":"optionIds",
                  "in":"query",
                  "description":"csv list of option ids",
                  "required":false,
                  "type":"string",
                  "x-example":"37200035,400022,49700003"
               },
               {
                  "name":"qty",
                  "in":"query",
                  "description":"Optional quantity parameter used for inventory info. Defaults to '0' if not passed.",
                  "required":false,
                  "type":"integer",
                  "minimum":0,
                  "format":"int32"
               },
               {
                  "name":"monogram",
                  "in":"query",
                  "description":"Optional boolean indicates monogram. Defaults to 'false' if not passed.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"siteId",
                  "in":"query",
                  "description":"Optional site id passed in to override the one pulled from the domain context.",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/InventoryInfoBean"
                  }
               },
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Sku does not exist for passed inputs."
               }
            }
         }
      },
      "/sku/inventory/v1/{productId}":{
         "get":{
            "tags":[
               "fulfillment",
               "sku"
            ],
            "summary":"Provides availability information for a specific sku.",
            "description":"Primarily used to provide sku availability information at time of add to cart. This API supports numerous params passed as query arguments in the request.  The main ones are\n\n**optionIds**\n\nEither this or fullSkuId must be passed. Comma separated list of option ids. The system expects this to be the complete list of options for a given sku.\n\n**fullSkuId**\n\nEither this or optionIds must be passed.  Takes precedence over optionIds for obvious reasons.\n\nNOTE: this service may use the 'userContext' cookie for certain operations",
            "operationId":"fetchInventory",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"productId",
                  "in":"path",
                  "description":"The ID of the product the sku belongs to.",
                  "required":true,
                  "type":"string",
                  "x-example":"prod1617246"
               },
               {
                  "name":"pc",
                  "in":"cookie",
                  "description":"Optional postal code parameter retrieved from the 'pc' cookie. Used for inventory info.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"postalCode",
                  "in":"query",
                  "description":"Optional postal code parameter, overrides 'pc' parameter. Used for inventory info.  Passing 'unset' will pass null for pc.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"fullSkuId",
                  "in":"query",
                  "description":"full sku id",
                  "required":false,
                  "type":"string",
                  "x-example":"62930640 BLBK"
               },
               {
                  "name":"optionIds",
                  "in":"query",
                  "description":"csv list of option ids",
                  "required":false,
                  "type":"string",
                  "x-example":"37200035,400022,49700003"
               },
               {
                  "name":"qty",
                  "in":"query",
                  "description":"Optional quantity parameter used for inventory info. Defaults to '0' if not passed.",
                  "required":false,
                  "type":"integer",
                  "minimum":0,
                  "format":"int32"
               },
               {
                  "name":"monogram",
                  "in":"query",
                  "description":"Optional boolean indicates monogram. Defaults to 'false' if not passed.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"siteId",
                  "in":"query",
                  "description":"Optional site id passed in to override the one pulled from the domain context.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"lineId",
                  "in":"query",
                  "description":"Optional parameter passed into the service and returned back to the caller as the lineId.",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/InventoryInfoBean"
                  }
               },
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Sku does not exist for passed inputs."
               }
            }
         }
      },
      "/sku/options/v1":{
         "get":{
            "tags":[
               "product"
            ],
            "summary":"Provides all the options the full sku has.",
            "description":"",
            "operationId":"fetchSkuOptions",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"fullSkuId",
                  "in":"query",
                  "description":"full sku id to fetch options for",
                  "required":false,
                  "type":"string",
                  "x-example":"602176 NAVY F/Q"
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Sku not found for passed id."
               }
            }
         }
      },
      "/sku/options/v1/{fullSkuId}":{
         "get":{
            "tags":[
               "product"
            ],
            "summary":"Provides all the options the full sku has.",
            "description":"",
            "operationId":"fetchSkuOptions",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"fullSkuId",
                  "in":"path",
                  "description":"full sku id to fetch options for",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"productId",
                  "in":"query",
                  "description":"id of the desired product",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Sku not found for passed id."
               }
            }
         }
      },
      "/sku/price/v1":{
         "get":{
            "tags":[
               "price"
            ],
            "operationId":"getSkuPriceByQuery",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"query",
                  "description":"sku id",
                  "required":true,
                  "type":"string",
                  "x-example":"602176 NAVY F/Q"
               },
               {
                  "name":"country",
                  "in":"query",
                  "description":"(optional) 2-digit country code to fetch price in.  Defaults to US",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "US",
                     "CA",
                     "GB"
                  ]
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"sku does not exist for passed id."
               }
            }
         }
      },
      "/sku/price/v1/{id}":{
         "get":{
            "tags":[
               "price"
            ],
            "summary":"Provides sku price info.",
            "description":"",
            "operationId":"getSkuPriceByPath",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "description":"sku id",
                  "required":true,
                  "type":"string",
                  "x-example":"61060801 BWBK"
               },
               {
                  "name":"country",
                  "in":"query",
                  "description":"(optional) 2-digit country code to fetch price in.  Defaults to US",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "US",
                     "CA",
                     "GB"
                  ]
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"sku does not exist for passed id."
               }
            }
         }
      },
      "/sku/regions/v1":{
         "get":{
            "tags":[
               "regions"
            ],
            "summary":"Generates sku Info by full sku id.  Supports colorization.",
            "description":"This service provides sku details for product by their full sku. ",
            "operationId":"getSkuRegionsInfo",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"fullSkuId",
                  "in":"query",
                  "description":"Full Sku Id used to find the specific swatches for the sku and then colorize with those.",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"Product does not exist for passed id."
               }
            }
         }
      },
      "/sku/restrictions/v1/{productId}":{
         "get":{
            "tags":[
               "fulfillment",
               "sku"
            ],
            "summary":"Provides delivery restrictions for a given sku and postal code.",
            "description":"The service will seek out the 'pc' cookie to read the user's postal code. The value of the 'pc' cookie can be overridden by passing a 'postalCode' parameter. To support the unknown postal code case one can also pass 'postalCode=unset' to effectively null out the postal code and view the service from the perspective of a user who has not supplied one yet.\n\n This service provides information regarding any fees or restrictions the item may have.\n\n**Common Restrictions and Fees** \n\n*restockingFee*: Means the item has a restocking fee.\n\n*monogramMessage*: Delivery message regarding monogram process.\n\n*countryRestrictions*: List of restrictions for various regions.\n\n*curbsideMessage*: Item is oversized and requires curbside delivery.\n\n*giftCardMessage*: Delivery message regarding gift cards.\n\n*preBillMessage*: Delivery message regarding special order items.\n\n*cancellableMessage*: Delivery message indicating the item cannot be returned.\n\n*assemblyMessage*: Delivery message indicating the item requires assembly.\n\n*mattressFee*: Item is a mattress and the state shipped to requires a disposal fee.\n\nNOTE: this service may use the 'userContext' cookie for certain operations",
            "operationId":"fetchDeliveryRestriction",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"pc",
                  "in":"cookie",
                  "description":"Optional postal code parameter retrieved from the 'pc' cookie. Used for inventory info.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"postalCode",
                  "in":"query",
                  "description":"Optional postal code parameter, overrides 'pc' parameter. Used for inventory info.  Passing 'unset' will pass null for pc.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"productId",
                  "in":"path",
                  "description":"The ID of the product the sku belongs to.",
                  "required":true,
                  "type":"string",
                  "x-example":"prod1617246"
               },
               {
                  "name":"fullSkuId",
                  "in":"query",
                  "description":"full sku id",
                  "required":false,
                  "type":"string",
                  "x-example":"62930640 BLBK"
               },
               {
                  "name":"qty",
                  "in":"query",
                  "description":"Optional quantity parameter used for inventory info. Defaults to '0' if not passed.",
                  "required":false,
                  "type":"integer",
                  "default":1,
                  "minimum":0,
                  "format":"int32"
               },
               {
                  "name":"monogram",
                  "in":"query",
                  "description":"Optional boolean indicates monogram. Defaults to 'false' if not passed.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"siteId",
                  "in":"query",
                  "description":"Optional site id passed in to override the one pulled from the domain context.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"lineId",
                  "in":"query",
                  "description":"Optional parameter passed into the service and returned back to the caller as the lineId.",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"isProject",
                  "in":"query",
                  "description":"Optional parameter indicating this call came from within a concierge project. This has the effect of forcing the currency and country codes to that of the passed in postal",
                  "required":false,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "schema":{
                     "$ref":"#/definitions/DeliveryRestrictionBean"
                  }
               },
               "400":{
                  "description":"Malformed parameter input."
               },
               "404":{
                  "description":"Delivery data does not exist for passed id."
               }
            }
         }
      },
      "/swatch/v1/{type}":{
         "get":{
            "tags":[
               "swatch"
            ],
            "summary":"Returns the swatch data for all the swatch SKU's of passed type and filters",
            "description":"",
            "operationId":"generateSwatchData",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "name":"type",
                  "in":"path",
                  "description":"type of the desired swatches",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"filter",
                  "in":"query",
                  "description":"Environment Type Filter",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"presets",
                  "in":"query",
                  "description":"PRESETS for receipe",
                  "required":false,
                  "type":"string",
                  "default":"1"
               }
            ],
            "responses":{
               "400":{
                  "description":"Malformed parameter input - not valid alphanumerics"
               },
               "404":{
                  "description":"No Swatch Data"
               }
            }
         }
      },
      "/tradeServiceRequest/v1/sendTradeServiceRequest":{
         "post":{
            "tags":[
               "trade service request"
            ],
            "summary":"Sends lead to Salesforce.",
            "description":"Posting request to form so that lead can be sent to Salesforce.",
            "operationId":"sendTradeServiceRequest",
            "consumes":[
               "application/json"
            ],
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/TradeServiceRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid input supplied."
               },
               "401":{
                  "description":"Authentication Required"
               },
               "403":{
                  "description":"Forbidden:You are not authorized to submit the request."
               },
               "500":{
                  "description":"Internal Server Error."
               }
            }
         }
      },
      "/wishlist/item/v1/addItem":{
         "post":{
            "tags":[
               "checkout",
               "cart",
               "order"
            ],
            "summary":"Provides add to cart service for simple sku types (shelf stock and spo).",
            "description":"Requires a session.  Provides add to cart for simple sku types (shelf stock and spo). \n\n This service requires as a minimum the  productId, and full sku id.  \n\n If the caller has the atg sku id then it is recommended to pass it.  Without the ATG sku id the system will  attempt to look up the appropriate one by following the child skus of the product. \n\n Incorporates the following business validations:  \n\n The system has a max line item count that cannot be exceeded. At the time of this writing that value was 170 lines. \n\n Special order items labeled as Pre-Bill need to have the accepted terms boolean passed to add them to cart. \n\n Since this is an open service the system will verify that the arguments passed in actually map to purchasable items.  \n\n Any items that do not map to purchasable items will be filtered out prior to submission. \n\n In the event that all items are filtered out the system will return a 400 response. \n\n If some of the items pass validation and are added then the system will return a 207 response along with the list of items that could not be added",
            "operationId":"addItemToWishList",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/AddItemsToWishlistRequest"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"All Items added successfully."
               },
               "207":{
                  "description":"Not all items were added."
               },
               "400":{
                  "description":"Invalid Input."
               },
               "500":{
                  "description":"Server Error."
               }
            }
         }
      },
      "/wishlist/v1/moveToWishlist":{
         "post":{
            "tags":[
               "registry",
               "order"
            ],
            "summary":"Moves the specified line item id to the user wishlist.",
            "description":"Operates on current session cart. Requires authenticated session prior to invocation. \n\nGiven a line item id it will move the line item from the cart to the users wishlist.",
            "operationId":"moveToWishlist",
            "produces":[
               "application/json"
            ],
            "parameters":[
               {
                  "in":"body",
                  "name":"body",
                  "required":false,
                  "schema":{
                     "$ref":"#/definitions/CommerceItemId"
                  }
               },
               {
                  "name":"_sessionConf",
                  "in":"query",
                  "description":"The session confirmation id used to prevent Cross Site Request Forgery",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "400":{
                  "description":"Invalid Input."
               },
               "500":{
                  "description":"Server Error."
               }
            }
         },
         "options":{
            "tags":[
               "registry",
               "order"
            ],
            "summary":"Handles CORS preflight requests ",
            "description":"",
            "operationId":"moveToWishlistOptions",
            "parameters":[
               
            ],
            "responses":{
               "default":{
                  "description":"successful operation"
               }
            }
         }
      }
   },
   "definitions":{
      "SFTradeAccountResponseAddress":{
         "type":"object",
         "properties":{
            "state":{
               "type":"string"
            },
            "country":{
               "type":"string"
            },
            "postalCode":{
               "type":"string"
            },
            "city":{
               "type":"string"
            },
            "street1":{
               "type":"string"
            },
            "street2":{
               "type":"string"
            }
         }
      },
      "AccessibleEditableText":{
         "type":"object",
         "properties":{
            "caretPosition":{
               "type":"integer",
               "format":"int32"
            },
            "selectionEnd":{
               "type":"integer",
               "format":"int32"
            },
            "selectionStart":{
               "type":"integer",
               "format":"int32"
            },
            "selectedText":{
               "type":"string"
            },
            "charCount":{
               "type":"integer",
               "format":"int32"
            }
         }
      },
      "SkuDataRequest":{
         "type":"object",
         "properties":{
            "productId":{
               "type":"string"
            },
            "optionIds":{
               "type":"string"
            },
            "fullSkuId":{
               "type":"string"
            },
            "postalCode":{
               "type":"string"
            },
            "qty":{
               "type":"integer",
               "format":"int32"
            },
            "monogram":{
               "type":"boolean",
               "default":false
            },
            "overrideHomeDelivery":{
               "type":"boolean",
               "default":false
            },
            "deliveryDate":{
               "type":"string",
               "format":"date-time"
            }
         }
      },
      "Configuration":{
         "type":"object",
         "properties":{
            "description":{
               "type":"string"
            },
            "scope":{
               "type":"string"
            },
            "serviceName":{
               "type":"string"
            },
            "sources":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/ConfigurationSource"
               }
            },
            "requiredPropertyNames":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            }
         }
      },
      "CustomOptions":{
         "type":"object",
         "properties":{
            "type":{
               "type":"string"
            },
            "length":{
               "type":"number",
               "format":"double"
            },
            "width":{
               "type":"number",
               "format":"double"
            },
            "diameter":{
               "type":"number",
               "format":"double"
            },
            "options":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            }
         }
      },
      "MonogramLayout":{
         "type":"object",
         "properties":{
            "id":{
               "type":"string"
            },
            "displayName":{
               "type":"string"
            },
            "cwFulfillmentCode":{
               "type":"string"
            },
            "minLength":{
               "type":"integer",
               "format":"int32"
            },
            "maxLength":{
               "type":"integer",
               "format":"int32"
            },
            "numberOfLines":{
               "type":"integer",
               "format":"int32"
            },
            "fontName":{
               "type":"string"
            },
            "fontCode":{
               "type":"string"
            },
            "borderName":{
               "type":"string"
            },
            "borderCode":{
               "type":"string"
            },
            "price":{
               "$ref":"#/definitions/MonogramPrice"
            }
         }
      },
      "SFOpportunityBean":{
         "type":"object",
         "properties":{
            "primaryDesigner":{
               "$ref":"#/definitions/ProjectSFStakeholder"
            },
            "opportunityOwner":{
               "$ref":"#/definitions/ProjectSFStakeholder"
            },
            "coordinatingAssociate":{
               "$ref":"#/definitions/ProjectSFStakeholder"
            },
            "collaboratingDesigner":{
               "$ref":"#/definitions/ProjectSFStakeholder"
            },
            "contact":{
               "$ref":"#/definitions/SFProjectContact"
            },
            "reasonClosedLost":{
               "type":"string"
            },
            "purchasingDeadline":{
               "type":"string"
            },
            "preferredContactMethod":{
               "type":"string"
            },
            "opportunityNumber":{
               "type":"string"
            },
            "name":{
               "type":"string"
            },
            "lastModified":{
               "type":"string"
            },
            "isoCurrency":{
               "type":"string"
            },
            "initialInquiryMethod":{
               "type":"string"
            },
            "initialInquiryDate":{
               "type":"string"
            },
            "holdReason":{
               "type":"string"
            },
            "holdEndingOn":{
               "type":"string"
            },
            "gallery":{
               "type":"string"
            },
            "forecastAmount":{
               "type":"string"
            },
            "desiredDeliveryDate":{
               "type":"string"
            },
            "description":{
               "type":"string"
            },
            "stage":{
               "type":"string"
            },
            "recordType":{
               "type":"string"
            },
            "budgetAmount":{
               "type":"string"
            },
            "account":{
               "type":"string"
            },
            "createdDate":{
               "type":"string"
            },
            "id":{
               "type":"string"
            }
         }
      },
      "EventQueue":{
         "type":"object",
         "properties":{
            "nextEvent":{
               "$ref":"#/definitions/AWTEvent"
            }
         }
      },
      "MoodBoardItemScaleRequest":{
         "type":"object",
         "required":[
            "divisionId",
            "moodBoardAttribute",
            "projectId"
         ],
         "properties":{
            "projectId":{
               "type":"string"
            },
            "divisionId":{
               "type":"string"
            },
            "moodBoardAttribute":{
               "$ref":"#/definitions/MoodBoardAttribute"
            }
         }
      },
      "GiftBoxDetail":{
         "type":"object",
         "properties":{
            "giftBox":{
               "type":"boolean",
               "default":false
            },
            "fees":{
               "type":"object",
               "additionalProperties":{
                  "type":"number",
                  "format":"double"
               }
            }
         }
      },
      "CreateSFPersonAccountRequestAddress":{
         "type":"object",
         "properties":{
            "street1":{
               "type":"string"
            },
            "street2":{
               "type":"string"
            },
            "city":{
               "type":"string"
            },
            "state":{
               "type":"string"
            },
            "country":{
               "type":"string"
            },
            "postalCode":{
               "type":"string"
            }
         }
      },
      "AccessibleTable":{
         "type":"object",
         "properties":{
            "accessibleCaption":{
               "$ref":"#/definitions/Accessible"
            },
            "accessibleColumnCount":{
               "type":"integer",
               "format":"int32"
            },
            "accessibleColumnHeader":{
               "$ref":"#/definitions/AccessibleTable"
            },
            "accessibleRowCount":{
               "type":"integer",
               "format":"int32"
            },
            "accessibleRowHeader":{
               "$ref":"#/definitions/AccessibleTable"
            },
            "accessibleSummary":{
               "$ref":"#/definitions/Accessible"
            },
            "selectedAccessibleColumns":{
               "type":"array",
               "items":{
                  "type":"integer",
                  "format":"int32"
               }
            },
            "selectedAccessibleRows":{
               "type":"array",
               "items":{
                  "type":"integer",
                  "format":"int32"
               }
            }
         }
      },
      "GenericJSONId":{
         "type":"object",
         "required":[
            "id"
         ],
         "properties":{
            "id":{
               "type":"string"
            }
         }
      },
      "PaymentMethodResponse":{
         "type":"object",
         "properties":{
            "paymentMethods":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/PaymentMethodBean"
               }
            }
         }
      },
      "GetProjectResponse":{
         "type":"object",
         "properties":{
            "statusCode":{
               "type":"string",
               "enum":[
                  "SUCCESS",
                  "ERROR"
               ]
            },
            "errorCode":{
               "type":"string",
               "enum":[
                  "SYSTEM",
                  "VALIDATION",
                  "NOT_FOUND",
                  "URL_UNSUPPORTED",
                  "SERVICE_ERROR",
                  "BAD_REQUEST",
                  "NOT_AUTHENTICATED",
                  "SESSION_TIMEOUT",
                  "FORBIDDEN",
                  "CONFLICT",
                  "SERVICE_UNAVAILABLE"
               ]
            },
            "messages":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "errorMessages":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "fieldErrors":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "formErrors":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "project":{
               "$ref":"#/definitions/ProjectBean"
            },
            "projectUserConfig":{
               "$ref":"#/definitions/ProjectUserAttribute"
            },
            "success":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "Space":{
         "type":"object",
         "properties":{
            "spaceId":{
               "type":"string"
            },
            "spaceName":{
               "type":"string"
            },
            "selected":{
               "type":"boolean",
               "default":false
            },
            "items":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/Item"
               }
            },
            "price":{
               "$ref":"#/definitions/Price"
            },
            "sequenceOrder":{
               "type":"integer",
               "format":"int32"
            }
         }
      },
      "HideItemInMoodboardRequest":{
         "type":"object",
         "required":[
            "divisionId",
            "divisionItemId",
            "projectId"
         ],
         "properties":{
            "projectId":{
               "type":"string"
            },
            "divisionId":{
               "type":"string"
            },
            "divisionItemId":{
               "type":"string"
            },
            "hidden":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "AccessibleRelationSet":{
         "type":"object"
      },
      "GiftListResponse":{
         "type":"object",
         "properties":{
            "giftLists":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/GiftListBean"
               }
            }
         }
      },
      "ImageCapabilities":{
         "type":"object",
         "properties":{
            "accelerated":{
               "type":"boolean",
               "default":false
            },
            "trueVolatile":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "Forecasting":{
         "type":"object",
         "properties":{
            "id":{
               "type":"string"
            },
            "opportunityNumber":{
               "type":"string"
            },
            "forecastMethod":{
               "type":"string"
            },
            "creationDate":{
               "type":"string",
               "format":"date-time"
            },
            "lastModifiedDate":{
               "type":"string",
               "format":"date-time"
            },
            "lastForecastedTotalSentDate":{
               "type":"string",
               "format":"date-time"
            },
            "lastForecastedTotal":{
               "type":"number",
               "format":"double"
            },
            "lastForecastedStatus":{
               "type":"string"
            },
            "lastForecastedMessage":{
               "type":"string"
            },
            "lastForecastedTotalCurrencyCode":{
               "type":"string"
            },
            "active":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "HomeDeliveryFreight":{
         "type":"object",
         "properties":{
            "postalCode":{
               "type":"string"
            },
            "zoneCode":{
               "type":"string"
            },
            "amount":{
               "type":"number",
               "format":"double"
            }
         }
      },
      "PersistDivisionItemSelectionRequest":{
         "type":"object",
         "properties":{
            "selected":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "MonogramBean":{
         "type":"object",
         "properties":{
            "monogramTextLines":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "borderId":{
               "type":"string"
            },
            "colorId":{
               "type":"string"
            },
            "fontId":{
               "type":"string"
            },
            "bliKReferenceId":{
               "type":"string"
            }
         }
      },
      "ComponentLockManager":{
         "type":"object"
      },
      "PersistSelectedImageInMoodboardRequest":{
         "type":"object",
         "required":[
            "divisionId",
            "divisionItemId",
            "projectId",
            "selectedImageIndex"
         ],
         "properties":{
            "projectId":{
               "type":"string"
            },
            "divisionId":{
               "type":"string"
            },
            "divisionItemId":{
               "type":"string"
            },
            "selectedImageIndex":{
               "type":"integer",
               "format":"int32",
               "minimum":0
            }
         }
      },
      "TransactionManager":{
         "type":"object",
         "properties":{
            "transaction":{
               "$ref":"#/definitions/Transaction"
            },
            "status":{
               "type":"integer",
               "format":"int32"
            }
         }
      },
      "OrderItemGroupBean":{
         "type":"object",
         "properties":{
            "orderId":{
               "type":"string",
               "example":"R12345",
               "description":"The ATG order id"
            },
            "eligibleForGrouping":{
               "type":"boolean",
               "default":false
            },
            "userGroupChoice":{
               "type":"string",
               "position":2,
               "description":"Identifies the user's choice for grouping. none, group, ungroup."
            },
            "items":{
               "type":"array",
               "position":5,
               "description":"List of line item ids in proper display order",
               "items":{
                  "type":"string"
               }
            },
            "groups":{
               "type":"array",
               "position":6,
               "description":"List of line item groups",
               "items":{
                  "$ref":"#/definitions/LineItemGroup"
               }
            }
         }
      },
      "AffineTransform":{
         "type":"object",
         "properties":{
            "type":{
               "type":"integer",
               "format":"int32"
            },
            "identity":{
               "type":"boolean",
               "default":false
            },
            "determinant":{
               "type":"number",
               "format":"double"
            },
            "scaleX":{
               "type":"number",
               "format":"double"
            },
            "scaleY":{
               "type":"number",
               "format":"double"
            },
            "shearX":{
               "type":"number",
               "format":"double"
            },
            "shearY":{
               "type":"number",
               "format":"double"
            },
            "translateX":{
               "type":"number",
               "format":"double"
            },
            "translateY":{
               "type":"number",
               "format":"double"
            }
         }
      },
      "OrderNotesBean":{
         "type":"object",
         "properties":{
            "orderId":{
               "type":"string"
            },
            "shipId":{
               "type":"string"
            },
            "noteType":{
               "type":"string"
            },
            "totalNotes":{
               "type":"string"
            },
            "note":{
               "type":"string"
            },
            "userId":{
               "type":"string"
            },
            "userFirstName":{
               "type":"string"
            },
            "userLastName":{
               "type":"string"
            }
         }
      },
      "ComponentSecurityDomain":{
         "type":"object",
         "properties":{
            "enabled":{
               "type":"boolean",
               "default":false
            },
            "defaultAccess":{
               "type":"string"
            },
            "defaultAccessControlList":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/AccessControlEntry"
               }
            },
            "securityDomainName":{
               "type":"string"
            },
            "securityDomainDescription":{
               "type":"string"
            },
            "creationRightsAttribute":{
               "type":"string"
            },
            "userAuthority":{
               "$ref":"#/definitions/UserAuthority"
            },
            "accessRights":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/AccessRight"
               }
            },
            "serviceName":{
               "type":"string"
            },
            "registryName":{
               "type":"string"
            },
            "running":{
               "type":"boolean",
               "default":false
            },
            "name":{
               "type":"string"
            },
            "root":{
               "$ref":"#/definitions/NameContext"
            },
            "absoluteName":{
               "type":"string"
            },
            "loggingWarning":{
               "type":"boolean",
               "default":false
            },
            "loggingDebug":{
               "type":"boolean",
               "default":false
            },
            "loggingError":{
               "type":"boolean",
               "default":false
            },
            "adminServletOutputStreamEncoding":{
               "type":"string"
            },
            "adminServletUseServletOutputStream":{
               "type":"boolean",
               "default":false
            },
            "serviceInfo":{
               "type":"string"
            },
            "logListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/LogListener"
               }
            },
            "logListenerCount":{
               "type":"integer",
               "format":"int32"
            },
            "nameContext":{
               "$ref":"#/definitions/NameContext"
            },
            "nucleus":{
               "$ref":"#/definitions/Nucleus"
            },
            "serviceConfiguration":{
               "$ref":"#/definitions/Configuration"
            },
            "loggingInfo":{
               "type":"boolean",
               "default":false
            },
            "loggingTrace":{
               "type":"boolean",
               "default":false
            },
            "adminServlet":{
               "$ref":"#/definitions/Servlet"
            }
         }
      },
      "RepositoryItem":{
         "type":"object",
         "properties":{
            "transient":{
               "type":"boolean",
               "default":false
            },
            "contextMemberships":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "repository":{
               "$ref":"#/definitions/Repository"
            },
            "itemDescriptor":{
               "$ref":"#/definitions/RepositoryItemDescriptor"
            },
            "repositoryId":{
               "type":"string"
            },
            "itemDisplayName":{
               "type":"string"
            }
         }
      },
      "SecureLoggingFormatter":{
         "type":"object",
         "properties":{
            "secureLoggingFormat":{
               "type":"string"
            }
         }
      },
      "Nucleus":{
         "type":"object",
         "properties":{
            "mAllowReloadableComponents":{
               "type":"boolean",
               "default":false
            },
            "mLastValidationFailureReason":{
               "type":"string"
            },
            "mEnableClassReplacement":{
               "type":"boolean",
               "default":false
            },
            "mClassReplacementMap":{
               "type":"object",
               "additionalProperties":{
                  "type":"object"
               }
            },
            "environment":{
               "type":"object",
               "additionalProperties":{
                  "type":"object"
               }
            },
            "startTime":{
               "type":"integer",
               "format":"int64"
            },
            "stopping":{
               "type":"boolean",
               "default":false
            },
            "allowedClasses":{
               "$ref":"#/definitions/AllowedClasses"
            },
            "applicationNames":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "servletContext":{
               "$ref":"#/definitions/ServletContext"
            },
            "servletConfig":{
               "$ref":"#/definitions/ServletConfig"
            },
            "servletInfo":{
               "type":"string"
            },
            "configPath":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/File"
               }
            },
            "referenceCount":{
               "type":"integer",
               "format":"int32"
            },
            "allowReloadableComponents":{
               "type":"boolean",
               "default":false
            },
            "messageSource":{
               "$ref":"#/definitions/DASMessageSource"
            },
            "sendD4StyleEvents":{
               "type":"boolean",
               "default":false
            },
            "oldParamBehavior":{
               "type":"boolean",
               "default":false
            },
            "warningAboutImproperScopeAccess":{
               "type":"boolean",
               "default":false
            },
            "logResourceNames":{
               "type":"boolean",
               "default":false
            },
            "defaultRegion":{
               "type":"string"
            },
            "defaultLanguage":{
               "type":"string"
            },
            "defaultLocale":{
               "$ref":"#/definitions/Locale"
            },
            "adminServerPrefix":{
               "type":"string"
            },
            "adminServletConfiguration":{
               "$ref":"#/definitions/AdminServletConfiguration"
            },
            "adminServletConfigurationPath":{
               "type":"string"
            },
            "remappedScopes":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "relativePathPrefix":{
               "type":"string"
            },
            "documentRoot":{
               "$ref":"#/definitions/File"
            },
            "configurationFinder":{
               "$ref":"#/definitions/ConfigurationFinder"
            },
            "enableLinks":{
               "type":"boolean",
               "default":false
            },
            "checkFileNameCase":{
               "type":"boolean",
               "default":false
            },
            "initialServiceName":{
               "type":"string"
            },
            "preInitialServiceName":{
               "type":"string"
            },
            "gcafterStartup":{
               "type":"boolean",
               "default":false
            },
            "configurationCheckMilliseconds":{
               "type":"integer",
               "format":"int64"
            },
            "nameUnresolver":{
               "$ref":"#/definitions/NameUnresolver"
            },
            "configurationFileSystems":{
               "$ref":"#/definitions/ConfigurationFileSystems"
            },
            "beanConfigurator":{
               "$ref":"#/definitions/BeanConfigurator"
            },
            "propertyValueFormatters":{
               "$ref":"#/definitions/PropertyValueFormatters"
            },
            "disableConfigurationCache":{
               "type":"boolean",
               "default":false
            },
            "createSourceTemplates":{
               "type":"boolean",
               "default":false
            },
            "cachingGlobalComponents":{
               "type":"boolean",
               "default":false
            },
            "globalComponentCache":{
               "$ref":"#/definitions/SoftSelfCleaningCache"
            },
            "configurationListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/ConfigurationListener"
               }
            },
            "configurationCompileCommand":{
               "type":"string"
            },
            "beforeStartupComponentProcessors":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/StartupComponentProcessor"
               }
            },
            "classesToLoad":{
               "type":"array"
            },
            "useJavaConfigurationFinder":{
               "type":"boolean",
               "default":false
            },
            "checkForSerFiles":{
               "type":"boolean",
               "default":false
            },
            "registerSessionComponents":{
               "type":"boolean",
               "default":false
            },
            "registerRequestComponents":{
               "type":"boolean",
               "default":false
            },
            "javaConfigurationClassLoaders":{
               "$ref":"#/definitions/JavaConfigurationClassLoaders"
            },
            "configPathNames":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "nextServlet":{
               "type":"string"
            },
            "applicationURLs":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "allowedClassNames":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "allowedClassNamesSignature":{
               "type":"array",
               "items":{
                  "type":"string",
                  "format":"byte"
               }
            },
            "shellRestart":{
               "type":"boolean",
               "default":false
            },
            "componentProxyFactory":{
               "$ref":"#/definitions/ComponentProxyFactory"
            },
            "creationFilter":{
               "$ref":"#/definitions/ConfigCreationFilter"
            },
            "debugComponentLocking":{
               "type":"boolean",
               "default":false
            },
            "componentLockManager":{
               "$ref":"#/definitions/ComponentLockManager"
            },
            "configFileSystems":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/VirtualFileSystem"
               }
            },
            "configFileSystemsCreated":{
               "type":"boolean",
               "default":false
            },
            "configurationPropertyExceptionFilter":{
               "$ref":"#/definitions/ConfigurationPropertyFilter"
            },
            "dumpReferenceChains":{
               "type":"boolean",
               "default":false
            },
            "removeInitialLogListeners":{
               "type":"boolean",
               "default":false
            },
            "originalConfigPath":{
               "type":"string"
            },
            "scopeManager":{
               "$ref":"#/definitions/GlobalScopeManager"
            },
            "userAuthority":{
               "$ref":"#/definitions/UserAuthority"
            },
            "firstTime":{
               "type":"boolean",
               "default":false
            },
            "enableClassReplacement":{
               "type":"boolean",
               "default":false
            },
            "classReplacementMap":{
               "type":"object",
               "additionalProperties":{
                  "type":"object"
               }
            },
            "securityDomain":{
               "$ref":"#/definitions/ComponentSecurityDomain"
            },
            "attributeNames":{
               "$ref":"#/definitions/EnumerationString"
            },
            "majorVersion":{
               "type":"integer",
               "format":"int32"
            },
            "serverInfo":{
               "type":"string"
            },
            "servletContextName":{
               "type":"string"
            },
            "initParameterNames":{
               "$ref":"#/definitions/EnumerationString"
            },
            "servlets":{
               "$ref":"#/definitions/EnumerationServlet"
            },
            "optimizedForConcurrency":{
               "type":"boolean",
               "default":false
            },
            "nameContextPreBindingListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/NameContextPreBindingListener"
               }
            },
            "nameContextBindingListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/NameContextBindingListener"
               }
            },
            "mimeTyper":{
               "$ref":"#/definitions/MimeTyper"
            },
            "configurationLock":{
               "$ref":"#/definitions/ConfigurationLock"
            },
            "contextPath":{
               "type":"string"
            },
            "servletNames":{
               "$ref":"#/definitions/EnumerationString"
            },
            "minorVersion":{
               "type":"integer",
               "format":"int32"
            },
            "name":{
               "type":"string"
            },
            "nameContext":{
               "$ref":"#/definitions/NameContext"
            },
            "classLoader":{
               "$ref":"#/definitions/ClassLoader"
            },
            "servletRegistrations":{
               "type":"object",
               "additionalProperties":{
                  "$ref":"#/definitions/ServletRegistration"
               }
            },
            "effectiveMajorVersion":{
               "type":"integer",
               "format":"int32"
            },
            "effectiveMinorVersion":{
               "type":"integer",
               "format":"int32"
            },
            "filterRegistrations":{
               "type":"object",
               "additionalProperties":{
                  "$ref":"#/definitions/FilterRegistration"
               }
            },
            "sessionCookieConfig":{
               "$ref":"#/definitions/SessionCookieConfig"
            },
            "defaultSessionTrackingModes":{
               "type":"array",
               "uniqueItems":true,
               "items":{
                  "type":"string",
                  "enum":[
                     "COOKIE",
                     "URL",
                     "SSL"
                  ]
               }
            },
            "jspConfigDescriptor":{
               "$ref":"#/definitions/JspConfigDescriptor"
            },
            "effectiveSessionTrackingModes":{
               "type":"array",
               "uniqueItems":true,
               "items":{
                  "type":"string",
                  "enum":[
                     "COOKIE",
                     "URL",
                     "SSL"
                  ]
               }
            },
            "running":{
               "type":"boolean",
               "default":false
            },
            "root":{
               "$ref":"#/definitions/NameContext"
            },
            "absoluteName":{
               "type":"string"
            },
            "loggingWarning":{
               "type":"boolean",
               "default":false
            },
            "loggingDebug":{
               "type":"boolean",
               "default":false
            },
            "loggingError":{
               "type":"boolean",
               "default":false
            },
            "adminServletOutputStreamEncoding":{
               "type":"string"
            },
            "adminServletUseServletOutputStream":{
               "type":"boolean",
               "default":false
            },
            "serviceInfo":{
               "type":"string"
            },
            "logListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/LogListener"
               }
            },
            "logListenerCount":{
               "type":"integer",
               "format":"int32"
            },
            "nucleus":{
               "$ref":"#/definitions/Nucleus"
            },
            "serviceConfiguration":{
               "$ref":"#/definitions/Configuration"
            },
            "loggingInfo":{
               "type":"boolean",
               "default":false
            },
            "loggingTrace":{
               "type":"boolean",
               "default":false
            },
            "adminServlet":{
               "$ref":"#/definitions/Servlet"
            }
         }
      },
      "RegistrationInfo":{
         "type":"object",
         "required":[
            "confirmPassword",
            "email",
            "password"
         ],
         "properties":{
            "password":{
               "type":"string",
               "example":"gr8passWurd",
               "description":"password",
               "minLength":8,
               "maxLength":20
            },
            "ipaddress":{
               "type":"string"
            },
            "optIns":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "giftListToken":{
               "type":"string"
            },
            "confirmPassword":{
               "type":"string",
               "example":"gr8passWurd",
               "position":1,
               "description":"password confirm",
               "minLength":8,
               "maxLength":20
            },
            "email":{
               "type":"string",
               "example":"sbartfast@some.com",
               "position":2,
               "description":"email",
               "minLength":1,
               "maxLength":80
            },
            "firstName":{
               "type":"string",
               "example":"Slarty",
               "position":3,
               "description":"first name",
               "minLength":1,
               "maxLength":40
            },
            "lastName":{
               "type":"string",
               "example":"Bartfast",
               "position":4,
               "description":"last name",
               "minLength":1,
               "maxLength":40
            },
            "privacyPolicy":{
               "type":"boolean",
               "example":true,
               "position":5,
               "description":"accepts the privacy policy",
               "default":false
            },
            "validateMemberTC":{
               "type":"boolean",
               "position":6,
               "description":"tells the system to verify member Terms and Conditions",
               "default":false
            },
            "acceptMembershipTC":{
               "type":"boolean",
               "position":7,
               "description":"indicates user accepts membership Terms and Conditions",
               "default":false
            }
         }
      },
      "TaxShipment":{
         "type":"object",
         "properties":{
            "referenceId":{
               "type":"string"
            },
            "shipAddress":{
               "$ref":"#/definitions/TaxAddress"
            },
            "lineItems":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/TaxLineItem"
               }
            },
            "homeDeliveryAmount":{
               "type":"number",
               "format":"double"
            },
            "shippingAmount":{
               "type":"number",
               "format":"double"
            },
            "giftBoxAmount":{
               "type":"number",
               "format":"double"
            },
            "monogramFee":{
               "type":"number",
               "format":"double"
            },
            "mattressRecyclingFee":{
               "type":"number",
               "format":"double"
            },
            "shipTax":{
               "$ref":"#/definitions/TaxStatusDetail"
            },
            "handlingTax":{
               "$ref":"#/definitions/TaxStatusDetail"
            },
            "tax":{
               "$ref":"#/definitions/TaxStatusDetail"
            }
         }
      },
      "GlobalScopeManager":{
         "type":"object",
         "properties":{
            "managedScopeName":{
               "type":"string"
            },
            "inheritsEffectiveScope":{
               "type":"boolean",
               "default":false
            },
            "nucleus":{
               "$ref":"#/definitions/Nucleus"
            }
         }
      },
      "DesignClientResponse":{
         "type":"object",
         "properties":{
            "clientId":{
               "type":"string"
            },
            "firstName":{
               "type":"string"
            },
            "lastName":{
               "type":"string"
            },
            "phone":{
               "type":"string"
            },
            "address":{
               "type":"string"
            },
            "city":{
               "type":"string"
            },
            "state":{
               "type":"string"
            },
            "postalCode":{
               "type":"string"
            },
            "email":{
               "type":"string"
            }
         }
      },
      "MoveCurrentCartToProjectRequest":{
         "type":"object",
         "properties":{
            "projectId":{
               "type":"string"
            },
            "divisionId":{
               "type":"string"
            }
         }
      },
      "Attribute":{
         "type":"object"
      },
      "PaymentAuthRequest":{
         "type":"object",
         "required":[
            "addresses",
            "paymentInstrument"
         ],
         "properties":{
            "paymentInstrument":{
               "$ref":"#/definitions/PaymentInstrument"
            },
            "addresses":{
               "type":"object",
               "additionalProperties":{
                  "$ref":"#/definitions/Address"
               }
            },
            "customerEmail":{
               "type":"string",
               "minLength":5,
               "maxLength":100
            },
            "orderNumber":{
               "type":"string",
               "minLength":0,
               "maxLength":22
            },
            "orderInfo":{
               "$ref":"#/definitions/OrderInfo"
            },
            "customerIp":{
               "type":"string",
               "minLength":0,
               "maxLength":20
            },
            "uniqueTrnxId":{
               "type":"string",
               "minLength":1,
               "maxLength":50
            },
            "testMode":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "FreightInfo":{
         "type":"object",
         "properties":{
            "freightType":{
               "type":"string"
            },
            "country":{
               "type":"string"
            },
            "description":{
               "type":"string"
            },
            "ranges":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/FreightRange"
               }
            }
         }
      },
      "AccessibleRole":{
         "type":"object"
      },
      "FocusTraversalPolicy":{
         "type":"object"
      },
      "QueryBuilder":{
         "type":"object",
         "properties":{
            "repositoryView":{
               "$ref":"#/definitions/RepositoryView"
            }
         }
      },
      "Font":{
         "type":"object",
         "properties":{
            "name":{
               "type":"string"
            },
            "style":{
               "type":"integer",
               "format":"int32"
            },
            "size":{
               "type":"integer",
               "format":"int32"
            },
            "family":{
               "type":"string"
            },
            "plain":{
               "type":"boolean",
               "default":false
            },
            "attributes":{
               "type":"object",
               "additionalProperties":{
                  "type":"object"
               }
            },
            "transform":{
               "$ref":"#/definitions/AffineTransform"
            },
            "fontName":{
               "type":"string"
            },
            "availableAttributes":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/Attribute"
               }
            },
            "italicAngle":{
               "type":"number",
               "format":"float"
            },
            "missingGlyphCode":{
               "type":"integer",
               "format":"int32"
            },
            "numGlyphs":{
               "type":"integer",
               "format":"int32"
            },
            "psname":{
               "type":"string"
            },
            "size2D":{
               "type":"number",
               "format":"float"
            },
            "bold":{
               "type":"boolean",
               "default":false
            },
            "italic":{
               "type":"boolean",
               "default":false
            },
            "transformed":{
               "type":"boolean",
               "default":false
            },
            "peer":{
               "$ref":"#/definitions/FontPeer"
            }
         }
      },
      "AccessibleIcon":{
         "type":"object",
         "properties":{
            "accessibleIconDescription":{
               "type":"string"
            },
            "accessibleIconHeight":{
               "type":"integer",
               "format":"int32"
            },
            "accessibleIconWidth":{
               "type":"integer",
               "format":"int32"
            }
         }
      },
      "FreightExemptChannelInfoBean":{
         "type":"object",
         "properties":{
            "channel":{
               "type":"string"
            },
            "freightExemptUS":{
               "type":"boolean",
               "default":false
            },
            "freightExemptCA":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "FreightExemption":{
         "type":"object",
         "properties":{
            "channel":{
               "type":"string"
            },
            "exemptUS":{
               "type":"boolean",
               "default":false
            },
            "exemptCA":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "MoodBoardRepresentation":{
         "type":"object",
         "properties":{
            "hidden":{
               "type":"boolean",
               "default":false
            },
            "large":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "MouseListener":{
         "type":"object"
      },
      "ScheduleAppointmentRequest":{
         "type":"object",
         "properties":{
            "message":{
               "type":"string"
            },
            "customerEmail":{
               "type":"string"
            },
            "customerPhone":{
               "type":"string"
            },
            "galleryContact":{
               "type":"string"
            },
            "preferredContact":{
               "type":"string",
               "enum":[
                  "EMPTY",
                  "PHONE",
                  "EMAIL",
                  "TEXT",
                  "VIDEO"
               ]
            },
            "customerName":{
               "type":"string"
            }
         }
      },
      "POSSchedulingInfoRequest":{
         "type":"object",
         "required":[
            "ecomm_order_number",
            "eligibility_id"
         ],
         "properties":{
            "eligibility_id":{
               "type":"string"
            },
            "ecomm_order_number":{
               "type":"string"
            },
            "items":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/SchedulingItemInfoBean"
               }
            }
         }
      },
      "OpportunityUpdateRequest":{
         "type":"object",
         "required":[
            "opportunityId"
         ],
         "properties":{
            "opportunityId":{
               "type":"string"
            },
            "forecast":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "QuoteNoteAddRequest":{
         "type":"object",
         "required":[
            "notes",
            "submittedBy"
         ],
         "properties":{
            "notes":{
               "type":"string",
               "minLength":0,
               "maxLength":300
            },
            "submittedBy":{
               "type":"string",
               "minLength":0,
               "maxLength":100
            }
         }
      },
      "Window":{
         "type":"object",
         "properties":{
            "x":{
               "type":"integer",
               "format":"int32"
            },
            "y":{
               "type":"integer",
               "format":"int32"
            },
            "width":{
               "type":"integer",
               "format":"int32"
            },
            "height":{
               "type":"integer",
               "format":"int32"
            },
            "foreground":{
               "$ref":"#/definitions/Color"
            },
            "background":{
               "$ref":"#/definitions/Color"
            },
            "font":{
               "$ref":"#/definitions/Font"
            },
            "cursor":{
               "$ref":"#/definitions/Cursor"
            },
            "locale":{
               "$ref":"#/definitions/Locale"
            },
            "ignoreRepaint":{
               "type":"boolean",
               "default":false
            },
            "visible":{
               "type":"boolean",
               "default":false
            },
            "enabled":{
               "type":"boolean",
               "default":false
            },
            "valid":{
               "type":"boolean",
               "default":false
            },
            "dropTarget":{
               "$ref":"#/definitions/DropTarget"
            },
            "name":{
               "type":"string"
            },
            "focusable":{
               "type":"boolean",
               "default":false
            },
            "focusTraversalKeysEnabled":{
               "type":"boolean",
               "default":false
            },
            "accessibleContext":{
               "$ref":"#/definitions/AccessibleContext"
            },
            "focusCycleRoot":{
               "type":"boolean",
               "default":false
            },
            "focusTraversalPolicyProvider":{
               "type":"boolean",
               "default":false
            },
            "warningString":{
               "type":"string"
            },
            "alwaysOnTop":{
               "type":"boolean",
               "default":false
            },
            "modalExclusionType":{
               "type":"string",
               "enum":[
                  "NO_EXCLUDE",
                  "APPLICATION_EXCLUDE",
                  "TOOLKIT_EXCLUDE"
               ]
            },
            "focusableWindowState":{
               "type":"boolean",
               "default":false
            },
            "autoRequestFocus":{
               "type":"boolean",
               "default":false
            },
            "opacity":{
               "type":"number",
               "format":"float"
            },
            "shape":{
               "$ref":"#/definitions/Shape"
            },
            "type":{
               "type":"string",
               "enum":[
                  "NORMAL",
                  "UTILITY",
                  "POPUP"
               ]
            },
            "locationByPlatform":{
               "type":"boolean",
               "default":false
            },
            "active":{
               "type":"boolean",
               "default":false
            },
            "location":{
               "$ref":"#/definitions/Point"
            },
            "opaque":{
               "type":"boolean",
               "default":false
            },
            "size":{
               "$ref":"#/definitions/Dimension"
            },
            "owner":{
               "$ref":"#/definitions/Window"
            },
            "iconImages":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/Image"
               }
            },
            "ownedWindows":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/Window"
               }
            },
            "windowFocusListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/WindowFocusListener"
               }
            },
            "windowListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/WindowListener"
               }
            },
            "windowStateListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/WindowStateListener"
               }
            },
            "alwaysOnTopSupported":{
               "type":"boolean",
               "default":false
            },
            "focused":{
               "type":"boolean",
               "default":false
            },
            "bufferStrategy":{
               "$ref":"#/definitions/BufferStrategy"
            },
            "focusCycleRootAncestor":{
               "$ref":"#/definitions/Container"
            },
            "focusOwner":{
               "$ref":"#/definitions/Component"
            },
            "inputContext":{
               "$ref":"#/definitions/InputContext"
            },
            "mostRecentFocusOwner":{
               "$ref":"#/definitions/Component"
            },
            "toolkit":{
               "$ref":"#/definitions/Toolkit"
            },
            "focusableWindow":{
               "type":"boolean",
               "default":false
            },
            "showing":{
               "type":"boolean",
               "default":false
            },
            "validateRoot":{
               "type":"boolean",
               "default":false
            },
            "bounds":{
               "$ref":"#/definitions/Rectangle"
            },
            "graphicsConfiguration":{
               "$ref":"#/definitions/GraphicsConfiguration"
            },
            "minimumSize":{
               "$ref":"#/definitions/Dimension"
            },
            "layout":{
               "$ref":"#/definitions/LayoutManager"
            },
            "components":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/Component"
               }
            },
            "containerListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/ContainerListener"
               }
            },
            "focusTraversalPolicySet":{
               "type":"boolean",
               "default":false
            },
            "focusTraversalPolicy":{
               "$ref":"#/definitions/FocusTraversalPolicy"
            },
            "alignmentX":{
               "type":"number",
               "format":"float"
            },
            "alignmentY":{
               "type":"number",
               "format":"float"
            },
            "componentCount":{
               "type":"integer",
               "format":"int32"
            },
            "insets":{
               "$ref":"#/definitions/Insets"
            },
            "maximumSize":{
               "$ref":"#/definitions/Dimension"
            },
            "preferredSize":{
               "$ref":"#/definitions/Dimension"
            },
            "parent":{
               "$ref":"#/definitions/Container"
            },
            "displayable":{
               "type":"boolean",
               "default":false
            },
            "propertyChangeListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/PropertyChangeListener"
               }
            },
            "baselineResizeBehavior":{
               "type":"string",
               "enum":[
                  "CONSTANT_ASCENT",
                  "CONSTANT_DESCENT",
                  "CENTER_OFFSET",
                  "OTHER"
               ]
            },
            "colorModel":{
               "$ref":"#/definitions/ColorModel"
            },
            "componentListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/ComponentListener"
               }
            },
            "componentOrientation":{
               "$ref":"#/definitions/ComponentOrientation"
            },
            "focusListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/FocusListener"
               }
            },
            "graphics":{
               "$ref":"#/definitions/Graphics"
            },
            "hierarchyBoundsListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/HierarchyBoundsListener"
               }
            },
            "hierarchyListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/HierarchyListener"
               }
            },
            "inputMethodListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/InputMethodListener"
               }
            },
            "inputMethodRequests":{
               "$ref":"#/definitions/InputMethodRequests"
            },
            "keyListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/KeyListener"
               }
            },
            "locationOnScreen":{
               "$ref":"#/definitions/Point"
            },
            "mouseListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/MouseListener"
               }
            },
            "mouseMotionListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/MouseMotionListener"
               }
            },
            "mousePosition":{
               "$ref":"#/definitions/Point"
            },
            "mouseWheelListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/MouseWheelListener"
               }
            },
            "peer":{
               "$ref":"#/definitions/ComponentPeer"
            },
            "treeLock":{
               "type":"object"
            },
            "backgroundSet":{
               "type":"boolean",
               "default":false
            },
            "cursorSet":{
               "type":"boolean",
               "default":false
            },
            "doubleBuffered":{
               "type":"boolean",
               "default":false
            },
            "focusTraversable":{
               "type":"boolean",
               "default":false
            },
            "fontSet":{
               "type":"boolean",
               "default":false
            },
            "foregroundSet":{
               "type":"boolean",
               "default":false
            },
            "lightweight":{
               "type":"boolean",
               "default":false
            },
            "maximumSizeSet":{
               "type":"boolean",
               "default":false
            },
            "minimumSizeSet":{
               "type":"boolean",
               "default":false
            },
            "preferredSizeSet":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "PaymentMethodBean":{
         "type":"object",
         "required":[
            "billingAddress",
            "creditCardNumber",
            "creditCardType"
         ],
         "properties":{
            "id":{
               "type":"string",
               "description":"Only used for updates"
            },
            "creditCardType":{
               "type":"string",
               "example":"visa"
            },
            "creditCardNumber":{
               "type":"string",
               "example":"4111111111111111"
            },
            "expirationMonth":{
               "type":"string",
               "example":"01",
               "description":"Not required for RH Card"
            },
            "expirationYear":{
               "type":"string",
               "example":"2025",
               "description":"Not required for RH Card"
            },
            "billingAddress":{
               "$ref":"#/definitions/AddressBean"
            }
         }
      },
      "PropertyValueFormatters":{
         "type":"object"
      },
      "ProductCombinedBean":{
         "type":"object",
         "properties":{
            "id":{
               "type":"string"
            },
            "type":{
               "type":"string"
            },
            "siteId":{
               "type":"string"
            },
            "displayName":{
               "type":"string"
            },
            "endDate":{
               "type":"string"
            },
            "startDate":{
               "type":"string"
            },
            "active":{
               "type":"boolean",
               "default":false
            },
            "customProduct":{
               "type":"boolean",
               "default":false
            },
            "customProductType":{
               "type":"string"
            }
         }
      },
      "AddItemToWishlistBean":{
         "type":"object",
         "required":[
            "fullSkuId",
            "productId"
         ],
         "properties":{
            "shade":{
               "type":"boolean",
               "default":false
            },
            "rug":{
               "type":"boolean",
               "default":false
            },
            "customProductTrimColor":{
               "type":"string"
            },
            "drape":{
               "type":"boolean",
               "default":false
            },
            "hardwareTypeId":{
               "type":"string"
            },
            "drapeWidth":{
               "type":"number",
               "format":"double"
            },
            "drapeLength":{
               "type":"number",
               "format":"double"
            },
            "partsParentFullSkuId":{
               "type":"string"
            },
            "panelId":{
               "type":"string"
            },
            "finishId":{
               "type":"string"
            },
            "styleId":{
               "type":"string"
            },
            "monogram":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/MonogramBean"
               }
            },
            "personalizeAll":{
               "type":"boolean",
               "default":false
            },
            "mAcceptanceRequired":{
               "type":"boolean",
               "default":false
            },
            "cogitem":{
               "type":"boolean",
               "default":false
            },
            "customProductType":{
               "type":"string"
            },
            "customHardware":{
               "type":"boolean",
               "default":false
            },
            "customProduct":{
               "type":"boolean",
               "default":false
            },
            "mountTypeId":{
               "type":"string"
            },
            "controlLength":{
               "type":"number",
               "format":"float"
            },
            "controlTypeId":{
               "type":"string"
            },
            "controlPositionId":{
               "type":"string"
            },
            "liningId":{
               "type":"string"
            },
            "bracketColorId":{
               "type":"string"
            },
            "rollTypeId":{
               "type":"string"
            },
            "tiltTypeId":{
               "type":"string"
            },
            "controlAndTiltId":{
               "type":"string"
            },
            "roomLabel":{
               "type":"string"
            },
            "shadeWidth":{
               "type":"number",
               "format":"float"
            },
            "shadeLength":{
               "type":"number",
               "format":"float"
            },
            "customHardwareLength":{
               "type":"string"
            },
            "acceptanceRequired":{
               "type":"boolean",
               "default":false
            },
            "termsAccepted":{
               "type":"boolean",
               "default":false
            },
            "termsItemId":{
               "type":"string"
            },
            "customProductTrim":{
               "type":"string"
            },
            "customProductWidth":{
               "type":"string"
            },
            "customProductLength":{
               "type":"string"
            },
            "customProductDiameter":{
               "type":"string"
            },
            "trackHardware":{
               "type":"boolean",
               "default":false
            },
            "trackHardwareLength":{
               "type":"number",
               "format":"double"
            },
            "productId":{
               "type":"string",
               "example":"prod14880064",
               "position":1,
               "description":"the system product id"
            },
            "fullSkuId":{
               "type":"string",
               "example":"68590943 BRZ",
               "position":2,
               "description":"the full sku id"
            },
            "atgSkuId":{
               "type":"string",
               "example":"sku68590943_BRZ",
               "position":3,
               "description":"the atg sku id."
            },
            "qty":{
               "type":"integer",
               "format":"int32",
               "example":2,
               "position":4,
               "description":"the quantity to add.",
               "minimum":1
            },
            "acceptSpoTerms":{
               "type":"boolean",
               "position":5,
               "description":"Indicates spo terms and conditions accepted",
               "default":false
            },
            "fusionId":{
               "type":"string",
               "position":6,
               "description":"Unique fusion id from search results page."
            },
            "giftTo":{
               "type":"string",
               "position":7,
               "description":"gift card to field."
            },
            "giftFrom":{
               "type":"string",
               "position":8,
               "description":"gift card from field."
            },
            "giftMessage":{
               "type":"string",
               "position":9,
               "description":"gift card message."
            }
         }
      },
      "ConfigurationPropertyFilter":{
         "type":"object"
      },
      "RegistryEmailBean":{
         "type":"object",
         "properties":{
            "id":{
               "type":"string"
            },
            "event":{
               "type":"string"
            },
            "shortDesc":{
               "type":"string"
            },
            "eventDateTime":{
               "type":"string"
            },
            "accessLevel":{
               "type":"string"
            },
            "gallery":{
               "$ref":"#/definitions/Gallery"
            },
            "guest":{
               "$ref":"#/definitions/Guest"
            },
            "registrantAddress":{
               "$ref":"#/definitions/Address"
            },
            "coRegistrantAddress":{
               "$ref":"#/definitions/Address"
            },
            "preEventAddress":{
               "$ref":"#/definitions/Address"
            },
            "postEventAddress":{
               "$ref":"#/definitions/Address"
            },
            "brand":{
               "type":"string"
            },
            "emails":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "updatedFields":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "messageBody":{
               "type":"string"
            },
            "itemsAdded":{
               "type":"string"
            },
            "itemsRemoved":{
               "type":"string"
            },
            "itemsUpdated":{
               "type":"string"
            }
         }
      },
      "ProjectServiceRequest":{
         "type":"object",
         "required":[
            "project"
         ],
         "properties":{
            "project":{
               "$ref":"#/definitions/ProjectBean"
            }
         }
      },
      "Rectangle2D":{
         "type":"object",
         "properties":{
            "bounds2D":{
               "$ref":"#/definitions/Rectangle2D"
            },
            "x":{
               "type":"number",
               "format":"double"
            },
            "y":{
               "type":"number",
               "format":"double"
            },
            "bounds":{
               "$ref":"#/definitions/Rectangle"
            },
            "width":{
               "type":"number",
               "format":"double"
            },
            "empty":{
               "type":"boolean",
               "default":false
            },
            "frame":{
               "$ref":"#/definitions/Rectangle2D"
            },
            "minX":{
               "type":"number",
               "format":"double"
            },
            "minY":{
               "type":"number",
               "format":"double"
            },
            "maxX":{
               "type":"number",
               "format":"double"
            },
            "maxY":{
               "type":"number",
               "format":"double"
            },
            "centerX":{
               "type":"number",
               "format":"double"
            },
            "centerY":{
               "type":"number",
               "format":"double"
            },
            "height":{
               "type":"number",
               "format":"double"
            }
         }
      },
      "GiftCardPaymentServiceInfo":{
         "type":"object",
         "properties":{
            "currencyCode":{
               "type":"string"
            },
            "amount":{
               "type":"number",
               "format":"double"
            },
            "cardType":{
               "type":"string"
            },
            "giftCardNumber":{
               "type":"string"
            },
            "pinNumber":{
               "type":"string"
            },
            "orderId":{
               "type":"string"
            },
            "storeNumber":{
               "type":"string",
               "position":10,
               "description":"Store Number"
            }
         }
      },
      "AccessControlEntry":{
         "type":"object",
         "properties":{
            "negative":{
               "type":"boolean",
               "default":false
            },
            "principal":{
               "$ref":"#/definitions/Principal"
            },
            "type":{
               "type":"integer",
               "format":"int32"
            },
            "accessRights":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/AccessRight"
               }
            },
            "persona":{
               "$ref":"#/definitions/Persona"
            }
         }
      },
      "SFClientContact":{
         "type":"object",
         "properties":{
            "id":{
               "type":"string"
            },
            "title":{
               "type":"string"
            },
            "firstName":{
               "type":"string"
            },
            "lastName":{
               "type":"string"
            },
            "company":{
               "type":"string"
            },
            "isUnauthorized":{
               "type":"boolean",
               "default":false
            },
            "contactID":{
               "type":"string"
            },
            "phoneNumbers":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/SFClientPhoneNumber"
               }
            },
            "emails":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/SFClientEmail"
               }
            },
            "eligibleForMemberBenefits":{
               "type":"boolean",
               "default":false
            },
            "memberCancellationDate":{
               "type":"string"
            },
            "memberCancellationReason":{
               "type":"string"
            },
            "memberCancellationType":{
               "type":"string"
            },
            "memberEnrollmentDateTime":{
               "type":"string"
            },
            "memberExpirationDateTime":{
               "type":"string"
            },
            "memberRenewalTerm":{
               "type":"string"
            },
            "rhmember":{
               "type":"string"
            },
            "rhmemberID":{
               "type":"string"
            },
            "rhmemberStatus":{
               "type":"string"
            },
            "addresses":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/SFClientAddress"
               }
            }
         }
      },
      "CreateSFTradeAccountBean":{
         "type":"object",
         "properties":{
            "name":{
               "type":"string"
            },
            "email":{
               "type":"string"
            },
            "segment":{
               "type":"string"
            },
            "phone":{
               "type":"string"
            },
            "contacts":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/CreateSFTradeAccountContact"
               }
            },
            "address":{
               "$ref":"#/definitions/CreateSFTradeAccountAddress"
            }
         }
      },
      "Repository":{
         "type":"object",
         "properties":{
            "defaultViewName":{
               "type":"string"
            },
            "itemDescriptorNames":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "viewNames":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "repositoryName":{
               "type":"string"
            }
         }
      },
      "TaxLineItem":{
         "type":"object",
         "properties":{
            "referenceId":{
               "type":"string"
            },
            "sku":{
               "type":"string"
            },
            "taxClass":{
               "type":"string"
            },
            "totalPrice":{
               "type":"number",
               "format":"double"
            },
            "monogramFee":{
               "type":"number",
               "format":"double"
            },
            "mattressRecyclingFee":{
               "type":"number",
               "format":"double"
            },
            "quantity":{
               "type":"integer",
               "format":"int32"
            },
            "tax":{
               "$ref":"#/definitions/TaxStatusDetail"
            }
         }
      },
      "LayoutManager":{
         "type":"object"
      },
      "DynamicBeanDescriptor":{
         "type":"object",
         "properties":{
            "expert":{
               "type":"boolean",
               "default":false
            },
            "hidden":{
               "type":"boolean",
               "default":false
            },
            "preferred":{
               "type":"boolean",
               "default":false
            },
            "shortDescription":{
               "type":"string"
            },
            "name":{
               "type":"string"
            },
            "displayName":{
               "type":"string"
            },
            "resourceBundle":{
               "$ref":"#/definitions/ResourceBundle"
            },
            "localizedResourceBundle":{
               "$ref":"#/definitions/ResourceBundle"
            },
            "displaySortString":{
               "type":"string"
            },
            "sortString":{
               "type":"string"
            },
            "displayNameResource":{
               "type":"string"
            },
            "shortDescriptionResource":{
               "type":"string"
            }
         }
      },
      "NameContextBindingListener":{
         "type":"object"
      },
      "KeyListener":{
         "type":"object"
      },
      "GiftListBean":{
         "type":"object",
         "properties":{
            "giftListId":{
               "type":"string"
            },
            "giftListType":{
               "type":"string"
            },
            "eventDate":{
               "type":"string"
            }
         }
      },
      "MoveProjectItemsToCartRequest":{
         "type":"object",
         "required":[
            "projectId"
         ],
         "properties":{
            "projectId":{
               "type":"string"
            },
            "opportunityNumber":{
               "type":"string"
            }
         }
      },
      "ComponentListener":{
         "type":"object"
      },
      "ColorSpace":{
         "type":"object",
         "properties":{
            "type":{
               "type":"integer",
               "format":"int32"
            },
            "numComponents":{
               "type":"integer",
               "format":"int32"
            },
            "cs_sRGB":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "DeliveryInfoBean":{
         "type":"object",
         "properties":{
            "fullSkuId":{
               "type":"string",
               "example":"68170759 SNCK",
               "description":"The full sku id used when determining delivery charges."
            },
            "overrideHomeDelivery":{
               "type":"boolean",
               "default":false
            },
            "serviceSku":{
               "type":"boolean",
               "default":false
            },
            "swatch":{
               "type":"boolean",
               "default":false
            },
            "postalCode":{
               "type":"string",
               "example":"M5V 1J9",
               "position":1,
               "description":"The postal code used when determining delivery charges."
            },
            "needPostalCode":{
               "type":"boolean",
               "position":2,
               "description":"Indicates the postal code is required to get a delivery estimate.",
               "default":false
            },
            "deliveryEstimateStatus":{
               "type":"string",
               "example":"estimateAvailable",
               "position":3,
               "description":"Status of the delivery estimate."
            },
            "deliveryEstimate":{
               "type":"string",
               "example":"C $249",
               "position":4,
               "description":"String value with currency code showing home delivery estimate."
            },
            "freightExempt":{
               "type":"boolean",
               "position":5,
               "description":"Indicates the item is exempt from freight charges.",
               "default":false
            },
            "tieredShipping":{
               "type":"boolean",
               "position":6,
               "description":"Indicates the item combined with a zone code uses tiered shipping charges.",
               "default":false
            },
            "shippingSurcharge":{
               "type":"boolean",
               "position":7,
               "description":"Indicates the item qualifies for a shipping surcharge.",
               "default":false
            },
            "shippingSurchargeAmount":{
               "type":"string",
               "position":8,
               "description":"Amount of surcharge for shipping."
            },
            "postalCodeMessage":{
               "type":"string",
               "position":9,
               "description":"If postal code is required and is missing or invalid this is the message to display."
            },
            "freightExemptMessage":{
               "type":"string",
               "position":10,
               "description":"If the item is freight exempt this is the message to display."
            },
            "deliveryStateMessage":{
               "type":"string",
               "position":11,
               "description":"Specific message pertaining to the state being shipped to, typically applies for AK and HI."
            },
            "contractFreight":{
               "type":"boolean",
               "position":12,
               "description":"Indicates the system should display canada contract modal info.",
               "default":false
            },
            "showCanadaShipping":{
               "type":"boolean",
               "position":13,
               "description":"Indicates that canada currency is disabled and the system should show the alternate canada shipping methods.",
               "default":false
            },
            "shipVia":{
               "type":"string",
               "position":14,
               "description":"Returns the ship via code for the item."
            },
            "lineId":{
               "type":"string",
               "position":40,
               "description":"Line ID used to return a specific line identifier required and passed by UX."
            }
         }
      },
      "GiftWrapInstruction":{
         "type":"object",
         "required":[
            "id"
         ],
         "properties":{
            "id":{
               "type":"string",
               "example":"ci100001",
               "position":1,
               "description":"line item id"
            },
            "giftWrap":{
               "type":"boolean",
               "position":2,
               "description":"Indicates you want to gift wrap the item.  Default is true.",
               "default":false
            },
            "giftBoxColor":{
               "type":"string",
               "position":3,
               "description":"Optional and used with gift boxes.  Indicates the color of the gift box."
            }
         }
      },
      "RepositoryPropertyDescriptor":{
         "type":"object",
         "properties":{
            "expert":{
               "type":"boolean",
               "default":false
            },
            "hidden":{
               "type":"boolean",
               "default":false
            },
            "preferred":{
               "type":"boolean",
               "default":false
            },
            "shortDescription":{
               "type":"string"
            },
            "name":{
               "type":"string"
            },
            "displayName":{
               "type":"string"
            },
            "resourceBundle":{
               "$ref":"#/definitions/ResourceBundle"
            },
            "resourceBundleName":{
               "type":"string"
            },
            "defaultValue":{
               "type":"object"
            },
            "typeName":{
               "type":"string"
            },
            "persistent":{
               "type":"boolean",
               "default":false
            },
            "multiValued":{
               "type":"boolean",
               "default":false
            },
            "componentItemDescriptor":{
               "$ref":"#/definitions/RepositoryItemDescriptor"
            },
            "propertyItemDescriptor":{
               "$ref":"#/definitions/RepositoryItemDescriptor"
            },
            "queryable":{
               "type":"boolean",
               "default":false
            },
            "versionable":{
               "type":"boolean",
               "default":false
            },
            "unmodifiableDefaultValue":{
               "type":"object"
            },
            "idProperty":{
               "type":"boolean",
               "default":false
            },
            "derived":{
               "type":"boolean",
               "default":false
            },
            "dynamicallyCreated":{
               "type":"boolean",
               "default":false
            },
            "secureLogging":{
               "type":"boolean",
               "default":false
            },
            "secureLoggingFormatter":{
               "$ref":"#/definitions/SecureLoggingFormatter"
            },
            "ignoreNullValue":{
               "type":"boolean",
               "default":false
            },
            "defaultValueString":{
               "type":"string"
            },
            "collectionOrMap":{
               "type":"boolean",
               "default":false
            },
            "cascadeInsert":{
               "type":"boolean",
               "default":false
            },
            "cascadeUpdate":{
               "type":"boolean",
               "default":false
            },
            "cascadeDelete":{
               "type":"boolean",
               "default":false
            },
            "propertyBeanInfo":{
               "$ref":"#/definitions/DynamicBeanInfo"
            },
            "componentPropertyBeanInfo":{
               "$ref":"#/definitions/DynamicBeanInfo"
            },
            "enumeratedValues":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "attributesAsMap":{
               "type":"object",
               "additionalProperties":{
                  "type":"object"
               }
            },
            "cacheable":{
               "type":"boolean",
               "default":false
            },
            "itemDescriptor":{
               "$ref":"#/definitions/RepositoryItemDescriptor"
            },
            "loggingDebug":{
               "type":"boolean",
               "default":false
            },
            "readable":{
               "type":"boolean",
               "default":false
            },
            "writable":{
               "type":"boolean",
               "default":false
            },
            "required":{
               "type":"boolean",
               "default":false
            },
            "uipropertyEditor":{
               "$ref":"#/definitions/PropertyEditor"
            },
            "localizedResourceBundle":{
               "$ref":"#/definitions/ResourceBundle"
            },
            "displaySortString":{
               "type":"string"
            },
            "sortString":{
               "type":"string"
            },
            "displayNameResource":{
               "type":"string"
            },
            "shortDescriptionResource":{
               "type":"string"
            }
         }
      },
      "TaxCalculationRequest":{
         "type":"object",
         "properties":{
            "orderId":{
               "type":"string"
            },
            "traceId":{
               "type":"string"
            },
            "galleryId":{
               "type":"string"
            },
            "billAddress":{
               "$ref":"#/definitions/TaxAddress"
            },
            "shipments":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/TaxShipment"
               }
            }
         }
      },
      "MouseWheelListener":{
         "type":"object"
      },
      "ComponentPeer":{
         "type":"object",
         "properties":{
            "obscured":{
               "type":"boolean",
               "default":false
            },
            "reparentSupported":{
               "type":"boolean",
               "default":false
            },
            "backBuffer":{
               "$ref":"#/definitions/Image"
            },
            "colorModel":{
               "$ref":"#/definitions/ColorModel"
            },
            "graphics":{
               "$ref":"#/definitions/Graphics"
            },
            "graphicsConfiguration":{
               "$ref":"#/definitions/GraphicsConfiguration"
            },
            "locationOnScreen":{
               "$ref":"#/definitions/Point"
            },
            "minimumSize":{
               "$ref":"#/definitions/Dimension"
            },
            "preferredSize":{
               "$ref":"#/definitions/Dimension"
            },
            "focusable":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "LineItemBean":{
         "type":"object",
         "properties":{
            "id":{
               "type":"string",
               "example":"c100001",
               "description":"the internal ATG id of the item"
            },
            "atgSkuId":{
               "type":"string"
            },
            "giftListId":{
               "type":"string"
            },
            "giftListItemId":{
               "type":"string"
            },
            "priceInfo":{
               "$ref":"#/definitions/LineItemPrice"
            },
            "monogramOptions":{
               "$ref":"#/definitions/MonogramOptions"
            },
            "customOptions":{
               "$ref":"#/definitions/CustomOptions"
            },
            "giftCardOptions":{
               "$ref":"#/definitions/GiftCardOptions"
            },
            "giftWrapOptions":{
               "$ref":"#/definitions/GiftWrapOptions"
            },
            "custom":{
               "type":"boolean",
               "default":false
            },
            "giftWrappable":{
               "type":"boolean",
               "default":false
            },
            "serviceSku":{
               "type":"boolean",
               "default":false
            },
            "giftWrapped":{
               "type":"boolean",
               "default":false
            },
            "monogram":{
               "type":"boolean",
               "default":false
            },
            "giftCard":{
               "type":"boolean",
               "default":false
            },
            "fullSkuId":{
               "type":"string",
               "example":"68170759 SNCK",
               "position":1,
               "description":"the RH full sku id"
            },
            "productId":{
               "type":"string",
               "example":"prod11070088",
               "position":2,
               "description":"the internal ATG product id"
            },
            "displayName":{
               "type":"string",
               "example":"Geode Quartz Crystal Chandelier 40&#34;",
               "position":3,
               "description":"product display name"
            },
            "subName":{
               "type":"string",
               "example":"includes bulbs",
               "position":4,
               "description":"additional name"
            },
            "image":{
               "type":"string",
               "example":"//rh-o.scene7.com/is/image/rhis/prod11070088_E9478932_F?$tt$&illum=0",
               "position":5,
               "description":"colorized image for this sku"
            },
            "url":{
               "type":"string",
               "example":"https://www.restorationhardware.com:10543/catalog/product/product.jsp?productId=prod11070088&fullSkuId=68170759+SNCK",
               "position":6,
               "description":"link to the product page"
            },
            "quantity":{
               "type":"integer",
               "format":"int64",
               "example":1,
               "position":7,
               "description":"quantity in cart"
            },
            "siteId":{
               "type":"string",
               "example":"RH",
               "position":8,
               "description":"site the item was added from"
            },
            "maxOrderQty":{
               "type":"integer",
               "format":"int64",
               "example":5,
               "position":15,
               "description":"the maximum quantity of this item that is allowed per order"
            },
            "options":{
               "type":"object",
               "position":20,
               "description":"the standard options a user selected when purchasing the item",
               "additionalProperties":{
                  "type":"string"
               }
            }
         }
      },
      "ConfigurationListener":{
         "type":"object"
      },
      "Container":{
         "type":"object",
         "properties":{
            "x":{
               "type":"integer",
               "format":"int32"
            },
            "y":{
               "type":"integer",
               "format":"int32"
            },
            "width":{
               "type":"integer",
               "format":"int32"
            },
            "height":{
               "type":"integer",
               "format":"int32"
            },
            "foreground":{
               "$ref":"#/definitions/Color"
            },
            "background":{
               "$ref":"#/definitions/Color"
            },
            "font":{
               "$ref":"#/definitions/Font"
            },
            "cursor":{
               "$ref":"#/definitions/Cursor"
            },
            "locale":{
               "$ref":"#/definitions/Locale"
            },
            "ignoreRepaint":{
               "type":"boolean",
               "default":false
            },
            "visible":{
               "type":"boolean",
               "default":false
            },
            "enabled":{
               "type":"boolean",
               "default":false
            },
            "valid":{
               "type":"boolean",
               "default":false
            },
            "dropTarget":{
               "$ref":"#/definitions/DropTarget"
            },
            "name":{
               "type":"string"
            },
            "focusable":{
               "type":"boolean",
               "default":false
            },
            "focusTraversalKeysEnabled":{
               "type":"boolean",
               "default":false
            },
            "accessibleContext":{
               "$ref":"#/definitions/AccessibleContext"
            },
            "focusCycleRoot":{
               "type":"boolean",
               "default":false
            },
            "focusTraversalPolicyProvider":{
               "type":"boolean",
               "default":false
            },
            "layout":{
               "$ref":"#/definitions/LayoutManager"
            },
            "components":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/Component"
               }
            },
            "containerListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/ContainerListener"
               }
            },
            "focusTraversalPolicySet":{
               "type":"boolean",
               "default":false
            },
            "focusTraversalPolicy":{
               "$ref":"#/definitions/FocusTraversalPolicy"
            },
            "alignmentX":{
               "type":"number",
               "format":"float"
            },
            "alignmentY":{
               "type":"number",
               "format":"float"
            },
            "componentCount":{
               "type":"integer",
               "format":"int32"
            },
            "insets":{
               "$ref":"#/definitions/Insets"
            },
            "maximumSize":{
               "$ref":"#/definitions/Dimension"
            },
            "minimumSize":{
               "$ref":"#/definitions/Dimension"
            },
            "preferredSize":{
               "$ref":"#/definitions/Dimension"
            },
            "validateRoot":{
               "type":"boolean",
               "default":false
            },
            "bounds":{
               "$ref":"#/definitions/Rectangle"
            },
            "location":{
               "$ref":"#/definitions/Point"
            },
            "parent":{
               "$ref":"#/definitions/Container"
            },
            "size":{
               "$ref":"#/definitions/Dimension"
            },
            "opaque":{
               "type":"boolean",
               "default":false
            },
            "displayable":{
               "type":"boolean",
               "default":false
            },
            "propertyChangeListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/PropertyChangeListener"
               }
            },
            "baselineResizeBehavior":{
               "type":"string",
               "enum":[
                  "CONSTANT_ASCENT",
                  "CONSTANT_DESCENT",
                  "CENTER_OFFSET",
                  "OTHER"
               ]
            },
            "colorModel":{
               "$ref":"#/definitions/ColorModel"
            },
            "componentListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/ComponentListener"
               }
            },
            "componentOrientation":{
               "$ref":"#/definitions/ComponentOrientation"
            },
            "focusCycleRootAncestor":{
               "$ref":"#/definitions/Container"
            },
            "focusListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/FocusListener"
               }
            },
            "graphics":{
               "$ref":"#/definitions/Graphics"
            },
            "graphicsConfiguration":{
               "$ref":"#/definitions/GraphicsConfiguration"
            },
            "hierarchyBoundsListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/HierarchyBoundsListener"
               }
            },
            "hierarchyListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/HierarchyListener"
               }
            },
            "inputContext":{
               "$ref":"#/definitions/InputContext"
            },
            "inputMethodListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/InputMethodListener"
               }
            },
            "inputMethodRequests":{
               "$ref":"#/definitions/InputMethodRequests"
            },
            "keyListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/KeyListener"
               }
            },
            "locationOnScreen":{
               "$ref":"#/definitions/Point"
            },
            "mouseListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/MouseListener"
               }
            },
            "mouseMotionListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/MouseMotionListener"
               }
            },
            "mousePosition":{
               "$ref":"#/definitions/Point"
            },
            "mouseWheelListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/MouseWheelListener"
               }
            },
            "peer":{
               "$ref":"#/definitions/ComponentPeer"
            },
            "toolkit":{
               "$ref":"#/definitions/Toolkit"
            },
            "treeLock":{
               "type":"object"
            },
            "backgroundSet":{
               "type":"boolean",
               "default":false
            },
            "cursorSet":{
               "type":"boolean",
               "default":false
            },
            "doubleBuffered":{
               "type":"boolean",
               "default":false
            },
            "focusOwner":{
               "type":"boolean",
               "default":false
            },
            "focusTraversable":{
               "type":"boolean",
               "default":false
            },
            "fontSet":{
               "type":"boolean",
               "default":false
            },
            "foregroundSet":{
               "type":"boolean",
               "default":false
            },
            "lightweight":{
               "type":"boolean",
               "default":false
            },
            "maximumSizeSet":{
               "type":"boolean",
               "default":false
            },
            "minimumSizeSet":{
               "type":"boolean",
               "default":false
            },
            "preferredSizeSet":{
               "type":"boolean",
               "default":false
            },
            "showing":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "SFClientEmail":{
         "type":"object",
         "properties":{
            "emailAddress":{
               "type":"string"
            },
            "isPrimary":{
               "type":"boolean",
               "default":false
            },
            "isInactive":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "SearchSFClientAccountResponseBean":{
         "type":"object",
         "properties":{
            "responseType":{
               "type":"string"
            },
            "accounts":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/SFClientAccount"
               }
            },
            "totalRecords":{
               "type":"string"
            }
         }
      },
      "GraphicsDevice":{
         "type":"object",
         "properties":{
            "fullScreenWindow":{
               "$ref":"#/definitions/Window"
            },
            "configurations":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/GraphicsConfiguration"
               }
            },
            "type":{
               "type":"integer",
               "format":"int32"
            },
            "availableAcceleratedMemory":{
               "type":"integer",
               "format":"int32"
            },
            "displayMode":{
               "$ref":"#/definitions/DisplayMode"
            },
            "displayModes":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/DisplayMode"
               }
            },
            "displayChangeSupported":{
               "type":"boolean",
               "default":false
            },
            "fullScreenSupported":{
               "type":"boolean",
               "default":false
            },
            "idstring":{
               "type":"string"
            },
            "defaultConfiguration":{
               "$ref":"#/definitions/GraphicsConfiguration"
            }
         }
      },
      "GiftRegistrySearchBean":{
         "type":"object",
         "properties":{
            "eventType":{
               "type":"string"
            },
            "month":{
               "type":"integer",
               "format":"int32"
            },
            "year":{
               "type":"integer",
               "format":"int32"
            },
            "eventCity":{
               "type":"string"
            },
            "eventState":{
               "type":"string"
            },
            "firstName":{
               "type":"string"
            },
            "lastName":{
               "type":"string"
            },
            "email":{
               "type":"string"
            },
            "storeNumber":{
               "type":"string"
            },
            "createdBy":{
               "type":"string"
            },
            "registryNumber":{
               "type":"string"
            },
            "allBlank":{
               "type":"boolean",
               "default":false
            },
            "running":{
               "type":"boolean",
               "default":false
            },
            "name":{
               "type":"string"
            },
            "root":{
               "$ref":"#/definitions/NameContext"
            },
            "absoluteName":{
               "type":"string"
            },
            "loggingWarning":{
               "type":"boolean",
               "default":false
            },
            "loggingDebug":{
               "type":"boolean",
               "default":false
            },
            "loggingError":{
               "type":"boolean",
               "default":false
            },
            "adminServletOutputStreamEncoding":{
               "type":"string"
            },
            "adminServletUseServletOutputStream":{
               "type":"boolean",
               "default":false
            },
            "serviceInfo":{
               "type":"string"
            },
            "logListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/LogListener"
               }
            },
            "logListenerCount":{
               "type":"integer",
               "format":"int32"
            },
            "nameContext":{
               "$ref":"#/definitions/NameContext"
            },
            "nucleus":{
               "$ref":"#/definitions/Nucleus"
            },
            "serviceConfiguration":{
               "$ref":"#/definitions/Configuration"
            },
            "loggingInfo":{
               "type":"boolean",
               "default":false
            },
            "loggingTrace":{
               "type":"boolean",
               "default":false
            },
            "adminServlet":{
               "$ref":"#/definitions/Servlet"
            }
         }
      },
      "PromotionalPriceOverrideRequest":{
         "type":"object",
         "required":[
            "opportunityNumber",
            "projectId"
         ],
         "properties":{
            "opportunityNumber":{
               "type":"string"
            },
            "projectId":{
               "type":"string"
            },
            "couponId":{
               "type":"string"
            }
         }
      },
      "SearchSFClientAccountResponse":{
         "type":"object",
         "properties":{
            "statusCode":{
               "type":"string",
               "enum":[
                  "SUCCESS",
                  "ERROR"
               ]
            },
            "errorCode":{
               "type":"string",
               "enum":[
                  "SYSTEM",
                  "VALIDATION",
                  "NOT_FOUND",
                  "URL_UNSUPPORTED",
                  "SERVICE_ERROR",
                  "BAD_REQUEST",
                  "NOT_AUTHENTICATED",
                  "SESSION_TIMEOUT",
                  "FORBIDDEN",
                  "CONFLICT",
                  "SERVICE_UNAVAILABLE"
               ]
            },
            "messages":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "errorMessages":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "fieldErrors":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "formErrors":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "clientLookUpResponse":{
               "$ref":"#/definitions/SearchSFClientAccountResponseBean"
            },
            "success":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "ItemUpdateBean":{
         "type":"object",
         "required":[
            "id"
         ],
         "properties":{
            "id":{
               "type":"string",
               "example":"ci100001",
               "position":1,
               "description":"line item id"
            },
            "qty":{
               "type":"integer",
               "format":"int32",
               "example":1,
               "position":2,
               "description":"Quantity to set. A negative value means do not change current item quantity."
            }
         }
      },
      "MonogramStyle":{
         "type":"object",
         "properties":{
            "image":{
               "type":"string"
            },
            "previewImage":{
               "type":"string"
            },
            "displayName":{
               "type":"string"
            },
            "id":{
               "type":"string"
            },
            "minLength":{
               "type":"integer",
               "format":"int32"
            },
            "maxLength":{
               "type":"integer",
               "format":"int32"
            },
            "numberOfLines":{
               "type":"integer",
               "format":"int32"
            }
         }
      },
      "OrderTotalBean":{
         "type":"object",
         "properties":{
            "orderId":{
               "type":"string",
               "example":"H1234567890",
               "description":"id of the order for whom this total belongs to"
            },
            "homeDelivery":{
               "type":"boolean",
               "default":false
            },
            "standardDelivery":{
               "type":"boolean",
               "default":false
            },
            "orderTotal":{
               "type":"number",
               "format":"double",
               "example":12875.5,
               "position":10,
               "description":"sum of item totals, shipping total, tax"
            },
            "orderSubtotal":{
               "type":"number",
               "format":"double",
               "example":11250,
               "position":11,
               "description":"total item costs without shipping or tax"
            },
            "undiscountedSubtotal":{
               "type":"number",
               "format":"double",
               "example":15000,
               "position":12,
               "description":"total item costs prior to any discounts."
            },
            "memberSubtotal":{
               "type":"number",
               "format":"double",
               "example":11250,
               "position":14,
               "description":"subtotal a member pays"
            },
            "tradeSubtotal":{
               "type":"number",
               "format":"double",
               "example":11250,
               "position":15,
               "description":"subtotal a trade customer pays"
            },
            "taxAmount":{
               "type":"number",
               "format":"double",
               "example":1237.5,
               "position":16,
               "description":"total tax"
            },
            "countryTax":{
               "type":"number",
               "format":"double",
               "example":562.5,
               "position":17,
               "description":"for canada this is GST or HST"
            },
            "stateTax":{
               "type":"number",
               "format":"double",
               "example":675,
               "position":18,
               "description":"for canada this is PST, for US this is state tax"
            },
            "homeDeliveryAmount":{
               "type":"number",
               "format":"double",
               "example":249,
               "position":19,
               "description":"shipping amount allocated to home delivery"
            },
            "standardDeliveryAmount":{
               "type":"number",
               "format":"double",
               "example":39,
               "position":20,
               "description":"shipping amount allocated to standard delivery"
            },
            "contractFreight":{
               "type":"boolean",
               "position":21,
               "description":"indicates the standardDeliveryAmount shipping charges are contract freight",
               "default":false
            },
            "mattressRecyclingFee":{
               "type":"number",
               "format":"double",
               "example":0,
               "position":23,
               "description":"mattress recycling fee"
            },
            "shippingSurcharge":{
               "type":"number",
               "format":"double",
               "example":100,
               "position":24,
               "description":"additional shipping surcharge"
            },
            "memberSavings":{
               "type":"number",
               "format":"double",
               "example":0,
               "position":25,
               "description":"For non members this shows the amount they would save as a member"
            },
            "memberDiscount":{
               "type":"number",
               "format":"double",
               "example":3750,
               "position":26,
               "description":"If customer is member then this is the discount amount applied"
            },
            "tradeDiscount":{
               "type":"number",
               "format":"double",
               "example":0,
               "position":27,
               "description":"If customer is trade then this is the discount amount applied"
            },
            "otherDiscount":{
               "type":"number",
               "format":"double",
               "example":0,
               "position":28,
               "description":"This is any additional discount amount applied to the order"
            },
            "currencyLabel":{
               "type":"string",
               "example":"C",
               "position":40,
               "description":"conditional label to display for currency"
            },
            "hdlPostalCode":{
               "type":"string",
               "example":"59718",
               "position":43,
               "description":"The postal code set on the order for HDL purposes."
            }
         }
      },
      "HideProjectRequest":{
         "type":"object",
         "required":[
            "projectId"
         ],
         "properties":{
            "projectId":{
               "type":"string"
            },
            "hide":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "AllowedClasses":{
         "type":"object"
      },
      "JspConfigDescriptor":{
         "type":"object",
         "properties":{
            "jspPropertyGroups":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/JspPropertyGroupDescriptor"
               }
            },
            "taglibs":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/TaglibDescriptor"
               }
            }
         }
      },
      "ColorizeInfo":{
         "type":"object",
         "properties":{
            "colorizable":{
               "type":"boolean",
               "default":false
            },
            "multicolor":{
               "type":"boolean",
               "default":false
            },
            "colorizeType":{
               "type":"string"
            }
         }
      },
      "SkuLogistics":{
         "type":"object",
         "properties":{
            "sku":{
               "type":"string",
               "example":"10007664 BRZ",
               "description":"The sku id."
            },
            "shipVia":{
               "type":"string",
               "example":"5",
               "description":"The ship via."
            },
            "customItemHomeDeliveryShipVia":{
               "type":"string",
               "example":"5",
               "description":"The ship via if this was a custom item."
            },
            "likeItemAttribute":{
               "type":"string",
               "example":"LAMP",
               "description":"Like item attribute."
            },
            "ungroupableAttribute":{
               "type":"string",
               "example":"UG",
               "description":"Attribute indicating the item is not groupable"
            },
            "kitType":{
               "type":"string",
               "description":"kit type which indicates BOM"
            },
            "vendor":{
               "type":"string",
               "example":"6871",
               "description":"vendor"
            },
            "whDefCode":{
               "type":"string",
               "example":"1DA",
               "description":"WH Def code to help determine WH hopping."
            },
            "fulfillmentType":{
               "type":"string",
               "example":"F",
               "description":"Fulfillment type. F is Furniture. S is Shelf Stock"
            },
            "skuType":{
               "type":"string",
               "description":"Indicates the type of sku.  Used only if the item is special. Gift Card, Membership, etc..."
            },
            "itemClass":{
               "type":"string",
               "description":"Item class of the item"
            },
            "taxClass":{
               "type":"string",
               "description":"Tax class of the item"
            },
            "department":{
               "type":"integer",
               "format":"int32",
               "description":"Department the item is set up with in ePIM."
            },
            "consolidationDc":{
               "type":"string",
               "description":"The SPO consolidation dc"
            },
            "collection":{
               "type":"string",
               "description":"ePIM collection attribute"
            },
            "preBillCategory":{
               "type":"string",
               "description":"The pre bill category identifier"
            },
            "productionLeadDays":{
               "type":"integer",
               "format":"int32",
               "example":120,
               "description":"production lead days"
            },
            "dropship":{
               "type":"boolean",
               "example":false,
               "description":"indicates the item is SPO",
               "default":false
            },
            "webDescription":{
               "type":"string",
               "description":"web description"
            },
            "shippingSurcharge":{
               "type":"number",
               "format":"double",
               "description":"Oversize items sometimes incurr a shipping surcharge"
            },
            "mattressDetail":{
               "description":"If the item has a mattress fee then expose it",
               "$ref":"#/definitions/MattressDetail"
            },
            "giftBoxDetail":{
               "description":"Display gift box info indicating if the item can be gifted and what the fee is",
               "$ref":"#/definitions/GiftBoxDetail"
            },
            "inventoryMaster":{
               "description":"The inventory position for the item.",
               "$ref":"#/definitions/InventoryMaster"
            },
            "freightExemptions":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/FreightExemption"
               }
            },
            "restrictions":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/ShippingRestriction"
               }
            },
            "shipSurcharge":{
               "type":"object",
               "additionalProperties":{
                  "type":"number",
                  "format":"double"
               }
            },
            "delayedSKUStatus":{
               "type":"string",
               "description":"The holds the delayedSKUStatus of EnterpriseCatalog."
            },
            "maxOrderQuantity":{
               "type":"integer",
               "format":"int32",
               "description":"The Max Quantity allowed for a order."
            },
            "webPurchasable":{
               "type":"boolean",
               "description":"Indicates that sku can currently be purchased on the web.",
               "default":false
            },
            "height":{
               "type":"string",
               "description":"the packaged Product Height."
            },
            "weight":{
               "type":"string",
               "description":"the packaged Product weight."
            },
            "length":{
               "type":"string",
               "description":"the packaged Product length."
            },
            "width":{
               "type":"string",
               "description":"the packaged Product width."
            },
            "cubicFeet":{
               "type":"string",
               "description":"the packaged Product Height."
            },
            "color":{
               "type":"string",
               "description":"the secondary color."
            },
            "itemNumber":{
               "type":"string",
               "description":"the item number."
            },
            "detail":{
               "type":"string",
               "description":"the detail."
            },
            "colorCode":{
               "type":"string",
               "description":"the color code."
            },
            "rushOrderable":{
               "type":"boolean",
               "description":"the rush orderable flag.",
               "default":false
            }
         }
      },
      "GiftCardOptions":{
         "type":"object",
         "properties":{
            "to":{
               "type":"string"
            },
            "from":{
               "type":"string"
            }
         }
      },
      "JavaConfigurationClassLoaders":{
         "type":"object"
      },
      "RecordPurchasedItemBean":{
         "type":"object",
         "required":[
            "lineId",
            "orderId",
            "skuId"
         ],
         "properties":{
            "skuId":{
               "type":"string",
               "example":"sku35452",
               "position":1,
               "description":"sku id"
            },
            "orderId":{
               "type":"string",
               "example":"H35452",
               "position":1,
               "description":"order id"
            },
            "lineId":{
               "type":"string",
               "example":"a7a04765-3ae1-4476-bd89-71cb2c7f855f",
               "position":1,
               "description":"line item id"
            },
            "quantity":{
               "type":"integer",
               "format":"int32",
               "example":1,
               "position":2,
               "description":"quantity",
               "minimum":0
            }
         }
      },
      "HierarchyBoundsListener":{
         "type":"object"
      },
      "AccessibleValue":{
         "type":"object",
         "properties":{
            "currentAccessibleValue":{
               "$ref":"#/definitions/Number"
            },
            "maximumAccessibleValue":{
               "$ref":"#/definitions/Number"
            },
            "minimumAccessibleValue":{
               "$ref":"#/definitions/Number"
            }
         }
      },
      "LogListener":{
         "type":"object"
      },
      "CreateProjectCommunicationRequest":{
         "type":"object",
         "required":[
            "projectId"
         ],
         "properties":{
            "projectId":{
               "type":"string"
            },
            "client":{
               "$ref":"#/definitions/Client"
            },
            "additionalEmailAddresses":{
               "type":"string"
            },
            "opportunityNumber":{
               "type":"string"
            },
            "message":{
               "type":"string"
            },
            "bccAssociate":{
               "type":"boolean",
               "default":false
            },
            "includePricing":{
               "type":"boolean",
               "default":false
            },
            "includeItemNotes":{
               "type":"boolean",
               "default":false
            },
            "includeAvailabilityAndDelivery":{
               "type":"boolean",
               "default":false
            },
            "includeShipToAddress":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "PriceOverride":{
         "type":"object",
         "properties":{
            "reasonCode":{
               "type":"string"
            },
            "calculationType":{
               "type":"string"
            },
            "value":{
               "type":"integer",
               "format":"int32"
            },
            "originalValue":{
               "type":"integer",
               "format":"int32"
            },
            "overrideType":{
               "type":"string"
            }
         }
      },
      "TaxStatusDetail":{
         "type":"object",
         "properties":{
            "taxableAmount":{
               "type":"number",
               "format":"double"
            },
            "totalTax":{
               "type":"number",
               "format":"double"
            },
            "cityTax":{
               "type":"number",
               "format":"double"
            },
            "stateTax":{
               "type":"number",
               "format":"double"
            },
            "countyTax":{
               "type":"number",
               "format":"double"
            },
            "districtTax":{
               "type":"number",
               "format":"double"
            },
            "countryTax":{
               "type":"number",
               "format":"double"
            },
            "taxRate":{
               "type":"number",
               "format":"double"
            }
         }
      },
      "Color":{
         "type":"object",
         "properties":{
            "colorSpace":{
               "$ref":"#/definitions/ColorSpace"
            },
            "rgb":{
               "type":"integer",
               "format":"int32"
            },
            "alpha":{
               "type":"integer",
               "format":"int32"
            },
            "blue":{
               "type":"integer",
               "format":"int32"
            },
            "green":{
               "type":"integer",
               "format":"int32"
            },
            "red":{
               "type":"integer",
               "format":"int32"
            },
            "transparency":{
               "type":"integer",
               "format":"int32"
            }
         }
      },
      "AddToCartResponse":{
         "type":"object",
         "properties":{
            "statusCode":{
               "type":"string",
               "enum":[
                  "SUCCESS",
                  "ERROR"
               ]
            },
            "errorCode":{
               "type":"string",
               "enum":[
                  "SYSTEM",
                  "VALIDATION",
                  "NOT_FOUND",
                  "URL_UNSUPPORTED",
                  "SERVICE_ERROR",
                  "BAD_REQUEST",
                  "NOT_AUTHENTICATED",
                  "SESSION_TIMEOUT",
                  "FORBIDDEN",
                  "CONFLICT",
                  "SERVICE_UNAVAILABLE"
               ]
            },
            "messages":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "errorMessages":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "fieldErrors":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "formErrors":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "orderId":{
               "type":"string"
            },
            "invalidItems":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "items":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "details":{
               "type":"object",
               "additionalProperties":{
                  "$ref":"#/definitions/LineItemBean"
               }
            },
            "success":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "CatalogRequestBean":{
         "type":"object",
         "properties":{
            "catalogId":{
               "type":"string"
            },
            "catalogType":{
               "type":"boolean",
               "default":false
            },
            "promoDisplayItem":{
               "$ref":"#/definitions/RepositoryItem"
            },
            "onlineCatalog":{
               "type":"boolean",
               "default":false
            },
            "deliveryMessage":{
               "type":"string"
            }
         }
      },
      "RemoveItemFromProjectRequest":{
         "type":"object",
         "required":[
            "divisionId",
            "divisionItemId",
            "projectId"
         ],
         "properties":{
            "projectId":{
               "type":"string"
            },
            "divisionId":{
               "type":"string"
            },
            "divisionItemId":{
               "type":"string"
            }
         }
      },
      "MattressDetail":{
         "type":"object",
         "properties":{
            "frame":{
               "type":"string"
            },
            "section":{
               "type":"string"
            },
            "fees":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/MattressFee"
               }
            }
         }
      },
      "ComponentOrientation":{
         "type":"object",
         "properties":{
            "horizontal":{
               "type":"boolean",
               "default":false
            },
            "leftToRight":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "DivisionItemNotesRequest":{
         "type":"object",
         "required":[
            "divisionId",
            "divisionItemId",
            "projectId"
         ],
         "properties":{
            "projectId":{
               "type":"string"
            },
            "divisionId":{
               "type":"string"
            },
            "divisionItemId":{
               "type":"string"
            },
            "notes":{
               "type":"string",
               "minLength":0,
               "maxLength":300
            }
         }
      },
      "Market":{
         "type":"object",
         "properties":{
            "market":{
               "type":"string",
               "example":"68",
               "description":"The market id for the given postal."
            },
            "postalCode":{
               "type":"string",
               "example":"94925",
               "position":1,
               "description":"The postal code."
            }
         }
      },
      "CreateSFTradeAccountAddress":{
         "type":"object",
         "properties":{
            "street1":{
               "type":"string"
            },
            "street2":{
               "type":"string"
            },
            "city":{
               "type":"string"
            },
            "state":{
               "type":"string"
            },
            "country":{
               "type":"string"
            },
            "postalCode":{
               "type":"string"
            }
         }
      },
      "Gallery":{
         "type":"object",
         "properties":{
            "galleryId":{
               "type":"string"
            }
         }
      },
      "PropertyEditor":{
         "type":"object",
         "properties":{
            "tags":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "asText":{
               "type":"string"
            },
            "value":{
               "type":"object"
            },
            "javaInitializationString":{
               "type":"string"
            },
            "customEditor":{
               "$ref":"#/definitions/Component"
            },
            "paintable":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "ResourceBundle":{
         "type":"object",
         "properties":{
            "locale":{
               "$ref":"#/definitions/Locale"
            },
            "baseBundleName":{
               "type":"string"
            },
            "keys":{
               "$ref":"#/definitions/EnumerationString"
            }
         }
      },
      "MonogramPrice":{
         "type":"object",
         "properties":{
            "styleId":{
               "type":"string"
            },
            "feeWaived":{
               "type":"boolean",
               "default":false
            },
            "prices":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/Price"
               }
            }
         }
      },
      "LineItemPrice":{
         "type":"object",
         "properties":{
            "listPrice":{
               "type":"number",
               "format":"double",
               "example":15000,
               "description":"item list price"
            },
            "salePrice":{
               "type":"number",
               "format":"double",
               "example":0,
               "position":1,
               "description":"item sale price, 0 if not on sale"
            },
            "memberPrice":{
               "type":"number",
               "format":"double",
               "example":11250,
               "position":2,
               "description":"price a member pays"
            },
            "tradePrice":{
               "type":"number",
               "format":"double",
               "example":11250,
               "position":3,
               "description":"price a trade customer pays"
            },
            "overridePrice":{
               "type":"number",
               "format":"double",
               "position":4,
               "description":"override price administered by Concierge"
            },
            "promotionPrice":{
               "type":"number",
               "format":"double",
               "position":5,
               "description":"price of the item if on promotional discount"
            },
            "totalPrice":{
               "type":"number",
               "format":"double",
               "example":11250,
               "position":6,
               "description":"total price the customer pays"
            },
            "shippingSurcharge":{
               "type":"number",
               "format":"double",
               "example":100,
               "position":7,
               "description":"additional shipping amount"
            },
            "listPriceLabel":{
               "type":"string",
               "example":"REGULAR",
               "position":8,
               "description":"label for list price display"
            },
            "salePriceLabel":{
               "type":"string",
               "example":"SALE",
               "position":9,
               "description":"label for sale"
            },
            "memberPriceLabel":{
               "type":"string",
               "example":"MEMBER",
               "position":10,
               "description":"label for member"
            },
            "tradeContractPriceLabel":{
               "type":"string",
               "example":"TRADE",
               "position":11,
               "description":"label for trade or contract"
            },
            "currencyLabel":{
               "type":"string",
               "example":"C",
               "position":12,
               "description":"currency label"
            },
            "onSale":{
               "type":"boolean",
               "position":13,
               "description":"indicates item is on sale",
               "default":false
            },
            "showMemberPrice":{
               "type":"boolean",
               "position":14,
               "description":"whether or not to display the member price",
               "default":false
            },
            "priceIsOverride":{
               "type":"boolean",
               "position":15,
               "description":"indicates the price is an override",
               "default":false
            },
            "priceIsPromotion":{
               "type":"boolean",
               "position":16,
               "description":"indicates the price is due to discount rule",
               "default":false
            },
            "priceIsTrade":{
               "type":"boolean",
               "position":17,
               "description":"indicates the price is trade",
               "default":false
            }
         }
      },
      "DivisionItemBean":{
         "type":"object",
         "properties":{
            "divisionItemId":{
               "type":"string"
            },
            "commerceItemInfoBean":{
               "$ref":"#/definitions/CommerceItemInfoBean"
            },
            "selected":{
               "type":"boolean",
               "default":false
            },
            "checkedOut":{
               "type":"boolean",
               "default":false
            },
            "spaceName":{
               "type":"string"
            },
            "checkedOutProjectOrders":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/CheckOutProjectOrderDetailBean"
               }
            }
         }
      },
      "PropertyChangeListener":{
         "type":"object"
      },
      "WindowStateListener":{
         "type":"object"
      },
      "ProjectCreatedBy":{
         "type":"object",
         "properties":{
            "associateId":{
               "type":"string"
            },
            "firstName":{
               "type":"string"
            },
            "lastName":{
               "type":"string"
            },
            "hidden":{
               "type":"boolean",
               "default":false
            },
            "fromEmail":{
               "type":"string"
            }
         }
      },
      "SetProjectForecastingRequest":{
         "type":"object",
         "required":[
            "projectId"
         ],
         "properties":{
            "projectId":{
               "type":"string"
            },
            "methodType":{
               "type":"string",
               "enum":[
                  "unselected",
                  "entireOpportunity",
                  "selectedItemsOnly"
               ]
            },
            "opportunityId":{
               "type":"string"
            }
         }
      },
      "CommerceItemPriceBean":{
         "type":"object",
         "properties":{
            "onSale":{
               "type":"boolean",
               "default":false
            },
            "showMemberPrice":{
               "type":"boolean",
               "default":false
            },
            "listPriceLabel":{
               "type":"string"
            },
            "memberPriceLabel":{
               "type":"string"
            },
            "strikePriceLabel":{
               "type":"string"
            },
            "salePriceLabel":{
               "type":"string"
            },
            "listPrice":{
               "type":"number",
               "format":"double"
            },
            "salePrice":{
               "type":"number",
               "format":"double"
            },
            "tradePrice":{
               "type":"number",
               "format":"double"
            },
            "memberPrice":{
               "type":"number",
               "format":"double"
            },
            "finalPrice":{
               "type":"number",
               "format":"double"
            },
            "overridePrice":{
               "type":"number",
               "format":"double"
            },
            "total":{
               "type":"number",
               "format":"double"
            },
            "tradePriceLabel":{
               "type":"string"
            },
            "contractPriceLabel":{
               "type":"string"
            },
            "priceIsTradeBest":{
               "type":"boolean",
               "default":false
            },
            "priceIsPromotion":{
               "type":"boolean",
               "default":false
            },
            "overrideReasonCode":{
               "type":"string"
            },
            "overrideCalculationType":{
               "type":"string"
            },
            "overrideCalculationValue":{
               "type":"number",
               "format":"double"
            },
            "finalSalePrice":{
               "type":"number",
               "format":"double"
            },
            "memberSalePrice":{
               "type":"number",
               "format":"double"
            }
         }
      },
      "MoveItemToDifferentSpaceRequest":{
         "type":"object",
         "required":[
            "moveInDivision",
            "moveOutDivision",
            "projectId"
         ],
         "properties":{
            "projectId":{
               "type":"string"
            },
            "moveOutDivision":{
               "$ref":"#/definitions/MoveOutDivision"
            },
            "moveInDivision":{
               "$ref":"#/definitions/MoveInDivision"
            }
         }
      },
      "UserInfo":{
         "type":"object",
         "properties":{
            "firstName":{
               "type":"string",
               "minLength":0,
               "maxLength":100
            },
            "middleName":{
               "type":"string",
               "minLength":0,
               "maxLength":100
            },
            "lastName":{
               "type":"string",
               "minLength":0,
               "maxLength":100
            }
         }
      },
      "CopyOrderToProjectRequest":{
         "type":"object",
         "required":[
            "divisionId",
            "orderId",
            "projectId"
         ],
         "properties":{
            "projectId":{
               "type":"string"
            },
            "divisionId":{
               "type":"string"
            },
            "orderId":{
               "type":"string"
            }
         }
      },
      "RepositoryView":{
         "type":"object",
         "properties":{
            "viewName":{
               "type":"string"
            },
            "itemDescriptor":{
               "$ref":"#/definitions/RepositoryItemDescriptor"
            },
            "queryBuilder":{
               "$ref":"#/definitions/QueryBuilder"
            }
         }
      },
      "AddressBeanExtended":{
         "type":"object",
         "required":[
            "address1",
            "city",
            "country",
            "firstName",
            "lastName",
            "phoneNumber"
         ],
         "properties":{
            "id":{
               "type":"string",
               "description":"Only used for updates"
            },
            "firstName":{
               "type":"string",
               "example":"Zaphod"
            },
            "lastName":{
               "type":"string",
               "example":"Beeblebrox"
            },
            "country":{
               "type":"string",
               "example":"US"
            },
            "address1":{
               "type":"string",
               "example":"5 Embarcadero Center"
            },
            "address2":{
               "type":"string",
               "example":"Suite B"
            },
            "city":{
               "type":"string",
               "example":"San Francisco"
            },
            "state":{
               "type":"string",
               "example":"CA"
            },
            "postalCode":{
               "type":"string",
               "example":"94111"
            },
            "phoneNumber":{
               "type":"string",
               "example":"555-555-5555"
            },
            "avsstatus":{
               "type":"string"
            },
            "eveningPhoneNumber":{
               "type":"string"
            },
            "addressIdentifier":{
               "type":"string"
            },
            "defaultAddress":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "DeliveryRestrictionBean":{
         "type":"object",
         "properties":{
            "fullSkuId":{
               "type":"string",
               "example":"68170759 SNCK",
               "description":"The full sku id used when determining delivery charges."
            },
            "lineId":{
               "type":"string",
               "position":1,
               "description":"Line ID used to return a specific line identifier required and passed by UX."
            },
            "postalCode":{
               "type":"string",
               "example":"M5V 1J9",
               "position":2,
               "description":"The postal code used when determining delivery charges."
            },
            "qty":{
               "type":"integer",
               "format":"int32",
               "example":1,
               "position":3,
               "description":"The quantity used during computation."
            },
            "restockingFee":{
               "type":"boolean",
               "position":4,
               "description":"Indicates the item has a restocking fee.",
               "default":false
            },
            "shelfStock":{
               "type":"boolean",
               "position":5,
               "description":"Indicates the item is shelf stock.",
               "default":false
            },
            "spo":{
               "type":"boolean",
               "position":6,
               "description":"Indicates the item is special order.",
               "default":false
            },
            "giftCertificate":{
               "type":"boolean",
               "position":7,
               "description":"Indicates the item is a gift certificate.",
               "default":false
            },
            "membershipSku":{
               "type":"boolean",
               "position":8,
               "description":"Indicates the item is a membership sku.",
               "default":false
            },
            "serviceSku":{
               "type":"boolean",
               "position":9,
               "description":"Indicates the item is a service sku.",
               "default":false
            },
            "mattress":{
               "type":"boolean",
               "position":10,
               "description":"Indicates the item is a mattress.",
               "default":false
            },
            "priceStatus":{
               "type":"string",
               "example":"R",
               "position":11,
               "description":"Gives the price status of the item.",
               "enum":[
                  "R",
                  "T",
                  "M"
               ]
            },
            "monogram":{
               "type":"boolean",
               "position":12,
               "description":"Indicates the item was monogrammed - used by cart.",
               "default":false
            },
            "monogramMessage":{
               "type":"string",
               "position":13,
               "description":"Message to display for a monogram item."
            },
            "returnPolicyMessage":{
               "type":"string",
               "position":14,
               "description":"Message to show regarding returns policy for this item."
            },
            "additionalMessages":{
               "type":"object",
               "position":20,
               "description":"Map containing additional messages to display for the item.",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "countryRestrictions":{
               "type":"array",
               "position":21,
               "description":"List of specific country restrictions.",
               "items":{
                  "type":"string"
               }
            },
            "mattressFeeLocation":{
               "type":"string",
               "position":30,
               "description":"If the item qualifies for mattress fee then this field will display the location indicated by postal code."
            },
            "assemblyMessage":{
               "type":"string",
               "example":"DEPRECATED",
               "position":31,
               "description":"DEPRECATED Message to display for assembly info.  Moved to additionalMessages."
            },
            "curbsideMessage":{
               "type":"string",
               "example":"DEPRECATED",
               "position":32,
               "description":"DEPRECATED Message to display for curbside delivery.  Moved to additionalMessages."
            },
            "giftCardMessage":{
               "type":"string",
               "example":"DEPRECATED",
               "position":33,
               "description":"DEPRECATED Message to display for gift cards.  Moved to additionalMessages."
            },
            "railroadMessage":{
               "type":"string",
               "example":"DEPRECATED",
               "position":34,
               "description":"DEPRECATED For specific custom shades this message appears. Moved to additionalMessages."
            },
            "mattressFeeMessage":{
               "type":"string",
               "example":"DEPRECATED",
               "position":35,
               "description":"DEPRECATED If the item qualifies for mattress fee then this is the message to display.  Moved to additionalMessages."
            },
            "cancellableMessage":{
               "type":"string",
               "example":"DEPRECATED",
               "position":51,
               "description":"DEPRECATED Message to display for items which cannot be cancelled.  returnPolicyMessages covers this."
            },
            "finalSaleMessage":{
               "type":"string",
               "example":"DEPRECATED",
               "position":52,
               "description":"DEPRECATED Message to display for final sale.  returnPolicyMessages covers this."
            },
            "preBillMessage":{
               "type":"string",
               "example":"DEPRECATED",
               "position":53,
               "description":"DEPRECATED Message to display for pre bill items.  returnPolicyMessages covers this."
            },
            "itemCategory":{
               "type":"string",
               "position":54,
               "description":"Item Pre Bill Category"
            }
         }
      },
      "AltImageBean":{
         "type":"object",
         "properties":{
            "imageUrl":{
               "type":"string"
            },
            "caption":{
               "type":"string"
            },
            "video":{
               "type":"string"
            },
            "altText":{
               "type":"string"
            },
            "sbrId":{
               "type":"string"
            }
         }
      },
      "PurchasedItemBean":{
         "type":"object",
         "properties":{
            "id":{
               "type":"string",
               "description":"Gift item id"
            },
            "purchaserFirstName":{
               "type":"string",
               "description":"Purchaser Name"
            },
            "purchaserLastName":{
               "type":"string",
               "description":"Purchaser Name"
            },
            "date":{
               "type":"string",
               "description":"Purchased Date"
            },
            "quantity":{
               "type":"integer",
               "format":"int32",
               "description":"Purchased Quantity"
            },
            "noteSentStatus":{
               "type":"string",
               "description":"Note Sent Status"
            }
         }
      },
      "CBSkuOption":{
         "type":"object",
         "properties":{
            "type":{
               "type":"string"
            },
            "value":{
               "type":"string"
            }
         }
      },
      "Number":{
         "type":"object"
      },
      "Opportunity":{
         "type":"object",
         "properties":{
            "opportunityId":{
               "type":"string"
            },
            "opportunityName":{
               "type":"string"
            },
            "opportunityDescription":{
               "type":"string"
            },
            "preferredContactMethod":{
               "type":"string"
            },
            "desiredDeliveryDate":{
               "type":"string"
            },
            "purchasingDeadlineDate":{
               "type":"string"
            },
            "opportunityOwner":{
               "$ref":"#/definitions/OpportunityOwner"
            },
            "currentStage":{
               "type":"string"
            },
            "sameShippingAddressAsClient":{
               "type":"boolean",
               "default":false
            },
            "shippingAddress":{
               "$ref":"#/definitions/ShippingAddress"
            },
            "spaces":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/Space"
               }
            },
            "priceOverrides":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/PriceOverride"
               }
            },
            "price":{
               "$ref":"#/definitions/Price"
            },
            "pricingType":{
               "type":"string"
            },
            "forecastType":{
               "type":"string"
            },
            "forecastTotal":{
               "type":"number",
               "format":"double"
            },
            "creationGallery":{
               "type":"string"
            },
            "createdBy":{
               "$ref":"#/definitions/ProjectCreatedBy"
            },
            "created":{
               "type":"string"
            },
            "lastEdited":{
               "type":"string"
            }
         }
      },
      "ImageProducer":{
         "type":"object"
      },
      "CreateSFTradeAccountRequest":{
         "type":"object",
         "required":[
            "account"
         ],
         "properties":{
            "account":{
               "$ref":"#/definitions/CreateSFTradeAccountBean"
            }
         }
      },
      "ServletContext":{
         "type":"object",
         "properties":{
            "attributeNames":{
               "$ref":"#/definitions/EnumerationString"
            },
            "majorVersion":{
               "type":"integer",
               "format":"int32"
            },
            "classLoader":{
               "$ref":"#/definitions/ClassLoader"
            },
            "serverInfo":{
               "type":"string"
            },
            "servletContextName":{
               "type":"string"
            },
            "initParameterNames":{
               "$ref":"#/definitions/EnumerationString"
            },
            "servlets":{
               "$ref":"#/definitions/EnumerationServlet"
            },
            "servletRegistrations":{
               "type":"object",
               "additionalProperties":{
                  "$ref":"#/definitions/ServletRegistration"
               }
            },
            "effectiveMajorVersion":{
               "type":"integer",
               "format":"int32"
            },
            "effectiveMinorVersion":{
               "type":"integer",
               "format":"int32"
            },
            "filterRegistrations":{
               "type":"object",
               "additionalProperties":{
                  "$ref":"#/definitions/FilterRegistration"
               }
            },
            "sessionCookieConfig":{
               "$ref":"#/definitions/SessionCookieConfig"
            },
            "defaultSessionTrackingModes":{
               "type":"array",
               "uniqueItems":true,
               "items":{
                  "type":"string",
                  "enum":[
                     "COOKIE",
                     "URL",
                     "SSL"
                  ]
               }
            },
            "jspConfigDescriptor":{
               "$ref":"#/definitions/JspConfigDescriptor"
            },
            "contextPath":{
               "type":"string"
            },
            "effectiveSessionTrackingModes":{
               "type":"array",
               "uniqueItems":true,
               "items":{
                  "type":"string",
                  "enum":[
                     "COOKIE",
                     "URL",
                     "SSL"
                  ]
               }
            },
            "servletNames":{
               "$ref":"#/definitions/EnumerationString"
            },
            "minorVersion":{
               "type":"integer",
               "format":"int32"
            }
         }
      },
      "CBLineItemPrice":{
         "type":"object",
         "properties":{
            "itemPrice":{
               "type":"integer",
               "format":"int32"
            },
            "originalPrice":{
               "type":"integer",
               "format":"int32"
            },
            "totalPrice":{
               "type":"integer",
               "format":"int32"
            },
            "itemShippingSurcharge":{
               "type":"integer",
               "format":"int32"
            },
            "currencyCode":{
               "type":"string"
            },
            "priceStatus":{
               "type":"string"
            },
            "fees":{
               "type":"object",
               "additionalProperties":{
                  "$ref":"#/definitions/CBItemFee"
               }
            }
         }
      },
      "Component":{
         "type":"object",
         "properties":{
            "x":{
               "type":"integer",
               "format":"int32"
            },
            "y":{
               "type":"integer",
               "format":"int32"
            },
            "width":{
               "type":"integer",
               "format":"int32"
            },
            "height":{
               "type":"integer",
               "format":"int32"
            },
            "foreground":{
               "$ref":"#/definitions/Color"
            },
            "background":{
               "$ref":"#/definitions/Color"
            },
            "font":{
               "$ref":"#/definitions/Font"
            },
            "cursor":{
               "$ref":"#/definitions/Cursor"
            },
            "locale":{
               "$ref":"#/definitions/Locale"
            },
            "ignoreRepaint":{
               "type":"boolean",
               "default":false
            },
            "visible":{
               "type":"boolean",
               "default":false
            },
            "enabled":{
               "type":"boolean",
               "default":false
            },
            "valid":{
               "type":"boolean",
               "default":false
            },
            "dropTarget":{
               "$ref":"#/definitions/DropTarget"
            },
            "name":{
               "type":"string"
            },
            "focusable":{
               "type":"boolean",
               "default":false
            },
            "focusTraversalKeysEnabled":{
               "type":"boolean",
               "default":false
            },
            "accessibleContext":{
               "$ref":"#/definitions/AccessibleContext"
            },
            "bounds":{
               "$ref":"#/definitions/Rectangle"
            },
            "location":{
               "$ref":"#/definitions/Point"
            },
            "maximumSize":{
               "$ref":"#/definitions/Dimension"
            },
            "parent":{
               "$ref":"#/definitions/Container"
            },
            "size":{
               "$ref":"#/definitions/Dimension"
            },
            "opaque":{
               "type":"boolean",
               "default":false
            },
            "displayable":{
               "type":"boolean",
               "default":false
            },
            "propertyChangeListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/PropertyChangeListener"
               }
            },
            "alignmentX":{
               "type":"number",
               "format":"float"
            },
            "alignmentY":{
               "type":"number",
               "format":"float"
            },
            "baselineResizeBehavior":{
               "type":"string",
               "enum":[
                  "CONSTANT_ASCENT",
                  "CONSTANT_DESCENT",
                  "CENTER_OFFSET",
                  "OTHER"
               ]
            },
            "colorModel":{
               "$ref":"#/definitions/ColorModel"
            },
            "componentListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/ComponentListener"
               }
            },
            "componentOrientation":{
               "$ref":"#/definitions/ComponentOrientation"
            },
            "focusCycleRootAncestor":{
               "$ref":"#/definitions/Container"
            },
            "focusListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/FocusListener"
               }
            },
            "graphics":{
               "$ref":"#/definitions/Graphics"
            },
            "graphicsConfiguration":{
               "$ref":"#/definitions/GraphicsConfiguration"
            },
            "hierarchyBoundsListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/HierarchyBoundsListener"
               }
            },
            "hierarchyListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/HierarchyListener"
               }
            },
            "inputContext":{
               "$ref":"#/definitions/InputContext"
            },
            "inputMethodListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/InputMethodListener"
               }
            },
            "inputMethodRequests":{
               "$ref":"#/definitions/InputMethodRequests"
            },
            "keyListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/KeyListener"
               }
            },
            "locationOnScreen":{
               "$ref":"#/definitions/Point"
            },
            "minimumSize":{
               "$ref":"#/definitions/Dimension"
            },
            "mouseListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/MouseListener"
               }
            },
            "mouseMotionListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/MouseMotionListener"
               }
            },
            "mousePosition":{
               "$ref":"#/definitions/Point"
            },
            "mouseWheelListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/MouseWheelListener"
               }
            },
            "peer":{
               "$ref":"#/definitions/ComponentPeer"
            },
            "preferredSize":{
               "$ref":"#/definitions/Dimension"
            },
            "toolkit":{
               "$ref":"#/definitions/Toolkit"
            },
            "treeLock":{
               "type":"object"
            },
            "backgroundSet":{
               "type":"boolean",
               "default":false
            },
            "cursorSet":{
               "type":"boolean",
               "default":false
            },
            "doubleBuffered":{
               "type":"boolean",
               "default":false
            },
            "focusOwner":{
               "type":"boolean",
               "default":false
            },
            "focusTraversable":{
               "type":"boolean",
               "default":false
            },
            "fontSet":{
               "type":"boolean",
               "default":false
            },
            "foregroundSet":{
               "type":"boolean",
               "default":false
            },
            "lightweight":{
               "type":"boolean",
               "default":false
            },
            "maximumSizeSet":{
               "type":"boolean",
               "default":false
            },
            "minimumSizeSet":{
               "type":"boolean",
               "default":false
            },
            "preferredSizeSet":{
               "type":"boolean",
               "default":false
            },
            "showing":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "EnumerationString":{
         "type":"object"
      },
      "ShippingPriceOverrideRequest":{
         "type":"object",
         "required":[
            "overrideReasonCode",
            "overrideValue",
            "projectId",
            "shippingOverrideType"
         ],
         "properties":{
            "projectId":{
               "type":"string"
            },
            "opportunityNumber":{
               "type":"string"
            },
            "shippingOverrideType":{
               "type":"string",
               "enum":[
                  "standardDelivery",
                  "unlimitedFurnitureDelivery"
               ]
            },
            "overrideValue":{
               "type":"number",
               "format":"double"
            },
            "overrideReasonCode":{
               "type":"string",
               "enum":[
                  "CustomerDelight",
                  "GalleryAssortmentItem",
                  "MultiBrandOrder",
                  "MultiRoomProject",
                  "CanadianCurrency"
               ]
            }
         }
      },
      "WindowFocusListener":{
         "type":"object"
      },
      "FilterRegistration":{
         "type":"object",
         "properties":{
            "servletNameMappings":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "urlPatternMappings":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "name":{
               "type":"string"
            },
            "className":{
               "type":"string"
            },
            "initParameters":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            }
         }
      },
      "FreightRange":{
         "type":"object",
         "properties":{
            "lowPrice":{
               "type":"number",
               "format":"double"
            },
            "highPrice":{
               "type":"number",
               "format":"double"
            },
            "freightAmount":{
               "type":"number",
               "format":"double"
            }
         }
      },
      "AdminContextPlugin":{
         "type":"object"
      },
      "DropTargetContext":{
         "type":"object",
         "properties":{
            "dropTarget":{
               "$ref":"#/definitions/DropTarget"
            },
            "component":{
               "$ref":"#/definitions/Component"
            }
         }
      },
      "NameContext":{
         "type":"object",
         "properties":{
            "name":{
               "type":"string"
            },
            "nameContext":{
               "$ref":"#/definitions/NameContext"
            }
         }
      },
      "InventoryInfoBean":{
         "type":"object",
         "properties":{
            "deliveryDate":{
               "type":"string",
               "format":"date-time"
            },
            "requestInfo":{
               "$ref":"#/definitions/SkuDataRequest"
            },
            "overrideHomeDelivery":{
               "type":"boolean",
               "default":false
            },
            "miracleDateInventoryStatus":{
               "type":"integer",
               "format":"int64"
            },
            "serviceSku":{
               "type":"boolean",
               "default":false
            },
            "webPurchasable":{
               "type":"boolean",
               "default":false
            },
            "lineId":{
               "type":"string",
               "example":"line12345",
               "position":5,
               "description":"Used to return identifiers passed from ux back to ux."
            },
            "fullSkuId":{
               "type":"string",
               "example":"68170759 SNCK",
               "position":10,
               "description":"The full sku id used when determining availability."
            },
            "atgSkuId":{
               "type":"string",
               "example":"sku100001",
               "position":12,
               "description":"Platform specific ATG internal sku id used."
            },
            "postalCode":{
               "type":"string",
               "example":"M5V 1J9",
               "position":14,
               "description":"The postal code used when determining availability."
            },
            "inventoryCode":{
               "type":"integer",
               "format":"int64",
               "example":1000,
               "position":16,
               "description":"The inventory code used by the system."
            },
            "inventoryStatus":{
               "type":"string",
               "example":"1000",
               "position":18,
               "description":"The inventory status for the item."
            },
            "inventoryRemaining":{
               "type":"string",
               "example":"30",
               "position":20,
               "description":"Remaining inventory for the item populated only for small quantities."
            },
            "preOrder":{
               "type":"boolean",
               "position":21,
               "description":"Indicates the item is a pre order sku.",
               "default":false
            },
            "inventoryMessage":{
               "type":"string",
               "example":"Ready for delivery between 05/05/18 and 05/12/18",
               "position":22,
               "description":"The ETA delivery date if the item was purchased today."
            },
            "zeroDollarSwatch":{
               "type":"boolean",
               "position":22,
               "description":"Indicates the item is a swatch sku.",
               "default":false
            },
            "dateString":{
               "type":"string",
               "position":23,
               "description":"Indicates the item is a swatch sku."
            },
            "needPostalCode":{
               "type":"boolean",
               "position":24,
               "description":"Indicates the postal code is missing and is required to get availability info.",
               "default":false
            },
            "itemsInStockMessage":{
               "type":"string",
               "position":24,
               "description":"Indicates the Stock message verbiage."
            },
            "postalCodeSpecific":{
               "type":"boolean",
               "position":26,
               "description":"Indicates that inventory information is specific to postal code.",
               "default":false
            },
            "lineItemMessage":{
               "type":"string",
               "example":"This item is in stock and will be ready for delivery between 05/13/21 and 05/17/21 for [zip code]",
               "position":30,
               "description":"The ETA delivery date if the item was purchased today."
            }
         }
      },
      "TaxExemption":{
         "type":"object",
         "properties":{
            "itemClass":{
               "type":"string"
            },
            "country":{
               "type":"string"
            },
            "state":{
               "type":"string"
            },
            "postalCodes":{
               "type":"string"
            },
            "maxUnitPrice":{
               "type":"number",
               "format":"double"
            },
            "taxAmountOverMax":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "OrderInfo":{
         "type":"object",
         "properties":{
            "items":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/OrderItem"
               }
            },
            "shippingCarrier":{
               "type":"string"
            },
            "shippingMethod":{
               "type":"string"
            },
            "orderDate":{
               "type":"string"
            },
            "orderTime":{
               "type":"string"
            },
            "orderTotal":{
               "type":"string"
            }
         }
      },
      "AddressBean":{
         "type":"object",
         "properties":{
            "firstName":{
               "type":"string"
            },
            "lastName":{
               "type":"string"
            },
            "country":{
               "type":"string"
            },
            "address1":{
               "type":"string"
            },
            "address2":{
               "type":"string"
            },
            "city":{
               "type":"string"
            },
            "state":{
               "type":"string"
            },
            "postalCode":{
               "type":"string"
            },
            "phoneNumber":{
               "type":"string"
            }
         }
      },
      "DisplayMode":{
         "type":"object",
         "properties":{
            "bitDepth":{
               "type":"integer",
               "format":"int32"
            },
            "refreshRate":{
               "type":"integer",
               "format":"int32"
            },
            "width":{
               "type":"integer",
               "format":"int32"
            },
            "height":{
               "type":"integer",
               "format":"int32"
            }
         }
      },
      "OrderItemsBean":{
         "type":"object",
         "properties":{
            "orderId":{
               "type":"string",
               "example":"R12345",
               "description":"The ATG order id"
            },
            "items":{
               "type":"array",
               "position":1,
               "description":"List of line item ids in proper display order",
               "items":{
                  "type":"string"
               }
            },
            "details":{
               "type":"object",
               "position":2,
               "description":"Map of line item details by id",
               "additionalProperties":{
                  "$ref":"#/definitions/LineItemBean"
               }
            }
         }
      },
      "VirtualFileSystemDescriptor":{
         "type":"object",
         "properties":{
            "displayName":{
               "type":"string"
            },
            "name":{
               "type":"string"
            },
            "readOnly":{
               "type":"boolean",
               "default":false
            },
            "allFileTypes":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            }
         }
      },
      "DynamicBeanInfo":{
         "type":"object",
         "properties":{
            "propertyDescriptors":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/DynamicPropertyDescriptor"
               }
            },
            "propertyNames":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "beanDescriptor":{
               "$ref":"#/definitions/DynamicBeanDescriptor"
            }
         }
      },
      "BufferCapabilities":{
         "type":"object",
         "properties":{
            "flipContents":{
               "$ref":"#/definitions/FlipContents"
            },
            "backBufferCapabilities":{
               "$ref":"#/definitions/ImageCapabilities"
            },
            "frontBufferCapabilities":{
               "$ref":"#/definitions/ImageCapabilities"
            },
            "fullScreenRequired":{
               "type":"boolean",
               "default":false
            },
            "multiBufferAvailable":{
               "type":"boolean",
               "default":false
            },
            "pageFlipping":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "ContainerListener":{
         "type":"object"
      },
      "Associate":{
         "type":"object",
         "properties":{
            "id":{
               "type":"string"
            },
            "firstName":{
               "type":"string"
            },
            "lastName":{
               "type":"string"
            }
         }
      },
      "SchedulingItemInfoBean":{
         "type":"object",
         "properties":{
            "item_id":{
               "type":"string"
            },
            "is_eligible":{
               "type":"boolean",
               "default":false
            },
            "eligible_quantity":{
               "type":"integer",
               "format":"int32"
            },
            "is_scheduled":{
               "type":"boolean",
               "default":false
            },
            "scheduled_date":{
               "type":"string"
            },
            "synthetic_checklist":{
               "type":"string"
            },
            "description":{
               "type":"string"
            },
            "long_description":{
               "type":"string"
            },
            "quantity":{
               "type":"integer",
               "format":"int64"
            },
            "is_stocked_item":{
               "type":"boolean",
               "default":false
            },
            "ship_via":{
               "type":"string"
            },
            "eta_start":{
               "type":"string"
            },
            "eta_end":{
               "type":"string"
            },
            "future_dated":{
               "type":"string"
            },
            "cube":{
               "type":"string"
            },
            "weight":{
               "type":"string"
            },
            "price":{
               "type":"number",
               "format":"double"
            },
            "length":{
               "type":"string"
            },
            "width":{
               "type":"string"
            },
            "height":{
               "type":"string"
            },
            "line_type":{
               "type":"string"
            },
            "shipping_dc":{
               "type":"string"
            },
            "ship_date":{
               "type":"string"
            },
            "line_item_id":{
               "type":"string"
            },
            "color":{
               "type":"string"
            },
            "size":{
               "type":"string"
            },
            "pre_schedule_flag":{
               "type":"boolean",
               "default":false
            },
            "ecomm_item_id":{
               "type":"string"
            },
            "grouping_id":{
               "type":"string"
            },
            "is_bom_sku":{
               "type":"boolean",
               "default":false
            },
            "appointment_id":{
               "type":"string"
            },
            "scheduling_id":{
               "type":"string"
            },
            "image_url":{
               "type":"string"
            },
            "quoted_date":{
               "type":"string"
            }
         }
      },
      "UpdateItemFromProjectRequest":{
         "type":"object",
         "required":[
            "divisionId",
            "divisionItemId",
            "projectId"
         ],
         "properties":{
            "projectId":{
               "type":"string"
            },
            "divisionId":{
               "type":"string"
            },
            "divisionItemId":{
               "type":"string"
            },
            "itemToBeUpdated":{
               "$ref":"#/definitions/RHAddProductInfoBean"
            }
         }
      },
      "ProjectUserAttribute":{
         "type":"object",
         "properties":{
            "projectId":{
               "type":"string"
            },
            "id":{
               "type":"string"
            },
            "associateId":{
               "type":"string"
            },
            "hidden":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "ConciergeCustomerInfo":{
         "type":"object",
         "properties":{
            "email":{
               "type":"string",
               "example":"foo@bar.com",
               "description":"Client email"
            },
            "firstName":{
               "type":"string",
               "example":"Slarty",
               "position":1,
               "description":"First Name"
            },
            "lastName":{
               "type":"string",
               "example":"Bartfast",
               "position":2,
               "description":"Last Name"
            },
            "registered":{
               "type":"boolean",
               "position":3,
               "description":"Indicates the user has an online estore account",
               "default":false
            },
            "hasMembershipSku":{
               "type":"boolean",
               "position":4,
               "description":"Indicates the user has a membership sku in cart",
               "default":false
            }
         }
      },
      "AddItemsToWishlistRequest":{
         "type":"object",
         "properties":{
            "addItems":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/AddItemToWishlistBean"
               }
            },
            "giftListId":{
               "type":"string"
            }
         }
      },
      "AccessibleStateSet":{
         "type":"object"
      },
      "Address":{
         "type":"object",
         "properties":{
            "firstName":{
               "type":"string"
            },
            "lastName":{
               "type":"string"
            },
            "addressLine1":{
               "type":"string"
            },
            "addressLine2":{
               "type":"string"
            },
            "city":{
               "type":"string"
            },
            "state":{
               "type":"string"
            },
            "country":{
               "type":"string"
            },
            "postalCode":{
               "type":"string"
            },
            "phone":{
               "type":"string"
            },
            "email":{
               "type":"string"
            }
         }
      },
      "ShippingRestriction":{
         "type":"object",
         "properties":{
            "sku":{
               "type":"string"
            },
            "shipRestriction":{
               "type":"boolean",
               "default":false
            },
            "billRestriction":{
               "type":"boolean",
               "default":false
            },
            "reasonCode":{
               "type":"string"
            },
            "countries":{
               "type":"array",
               "uniqueItems":true,
               "items":{
                  "type":"string"
               }
            },
            "states":{
               "type":"array",
               "uniqueItems":true,
               "items":{
                  "type":"string"
               }
            },
            "postalCodes":{
               "type":"string"
            }
         }
      },
      "AccessibleText":{
         "type":"object",
         "properties":{
            "caretPosition":{
               "type":"integer",
               "format":"int32"
            },
            "selectionEnd":{
               "type":"integer",
               "format":"int32"
            },
            "selectionStart":{
               "type":"integer",
               "format":"int32"
            },
            "selectedText":{
               "type":"string"
            },
            "charCount":{
               "type":"integer",
               "format":"int32"
            }
         }
      },
      "CBCustomItemTemplate":{
         "type":"object",
         "properties":{
            "type":{
               "type":"string"
            },
            "fulfillmentCode":{
               "type":"string"
            },
            "trim":{
               "type":"string"
            },
            "roomLabel":{
               "type":"string"
            },
            "panel":{
               "type":"string"
            },
            "finish":{
               "type":"string"
            },
            "style":{
               "type":"string"
            },
            "controlType":{
               "type":"string"
            },
            "controlPosition":{
               "type":"string"
            },
            "hardwareType":{
               "type":"string"
            },
            "mountType":{
               "type":"string"
            },
            "bracketColor":{
               "type":"string"
            },
            "rollType":{
               "type":"string"
            },
            "lining":{
               "type":"string"
            },
            "tiltType":{
               "type":"string"
            },
            "controlAndTilt":{
               "type":"string"
            },
            "controlLength":{
               "type":"number",
               "format":"double"
            },
            "length":{
               "type":"number",
               "format":"double"
            },
            "width":{
               "type":"number",
               "format":"double"
            },
            "diameter":{
               "type":"number",
               "format":"double"
            }
         }
      },
      "SFClientAccount":{
         "type":"object",
         "properties":{
            "id":{
               "type":"string"
            },
            "accountId":{
               "type":"string"
            },
            "name":{
               "type":"string"
            },
            "accountType":{
               "type":"string"
            },
            "phoneNumbers":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/SFClientPhoneNumber"
               }
            },
            "tradeId":{
               "type":"string"
            },
            "taxExempt":{
               "type":"boolean",
               "default":false
            },
            "contacts":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/SFClientContact"
               }
            },
            "fraudWarning":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "Rectangle":{
         "type":"object",
         "properties":{
            "x":{
               "type":"number",
               "format":"double"
            },
            "y":{
               "type":"number",
               "format":"double"
            },
            "width":{
               "type":"number",
               "format":"double"
            },
            "height":{
               "type":"number",
               "format":"double"
            },
            "bounds":{
               "$ref":"#/definitions/Rectangle"
            },
            "location":{
               "$ref":"#/definitions/Point"
            },
            "empty":{
               "type":"boolean",
               "default":false
            },
            "size":{
               "$ref":"#/definitions/Dimension"
            },
            "bounds2D":{
               "$ref":"#/definitions/Rectangle2D"
            },
            "frame":{
               "$ref":"#/definitions/Rectangle2D"
            },
            "minX":{
               "type":"number",
               "format":"double"
            },
            "minY":{
               "type":"number",
               "format":"double"
            },
            "maxX":{
               "type":"number",
               "format":"double"
            },
            "maxY":{
               "type":"number",
               "format":"double"
            },
            "centerX":{
               "type":"number",
               "format":"double"
            },
            "centerY":{
               "type":"number",
               "format":"double"
            }
         }
      },
      "DivisionBean":{
         "type":"object",
         "properties":{
            "divisionId":{
               "type":"string"
            },
            "divisionName":{
               "type":"string"
            },
            "opportunityNumber":{
               "type":"string"
            },
            "displayable":{
               "type":"boolean",
               "default":false
            },
            "orderBeanInfo":{
               "$ref":"#/definitions/OrderBeanInfo"
            },
            "divisionItemBeans":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/DivisionItemBean"
               }
            },
            "divisionItemIds":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "moodboardDivisionItemsRepresentation":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/MoodBoardAttribute"
               }
            },
            "selected":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "MoveOutDivision":{
         "type":"object",
         "required":[
            "divisionId",
            "divisionItemId"
         ],
         "properties":{
            "divisionId":{
               "type":"string"
            },
            "divisionItemId":{
               "type":"string"
            }
         }
      },
      "Image":{
         "type":"object",
         "properties":{
            "accelerationPriority":{
               "type":"number",
               "format":"float"
            },
            "source":{
               "$ref":"#/definitions/ImageProducer"
            },
            "graphics":{
               "$ref":"#/definitions/Graphics"
            }
         }
      },
      "MouseMotionListener":{
         "type":"object"
      },
      "GraphicsConfiguration":{
         "type":"object",
         "properties":{
            "bounds":{
               "$ref":"#/definitions/Rectangle"
            },
            "bufferCapabilities":{
               "$ref":"#/definitions/BufferCapabilities"
            },
            "defaultTransform":{
               "$ref":"#/definitions/AffineTransform"
            },
            "imageCapabilities":{
               "$ref":"#/definitions/ImageCapabilities"
            },
            "normalizingTransform":{
               "$ref":"#/definitions/AffineTransform"
            },
            "translucencyCapable":{
               "type":"boolean",
               "default":false
            },
            "colorModel":{
               "$ref":"#/definitions/ColorModel"
            },
            "device":{
               "$ref":"#/definitions/GraphicsDevice"
            }
         }
      },
      "Item":{
         "type":"object",
         "properties":{
            "itemId":{
               "type":"string"
            },
            "selected":{
               "type":"boolean",
               "default":false
            },
            "checkedOut":{
               "type":"boolean",
               "default":false
            },
            "moodBoardRepresentation":{
               "$ref":"#/definitions/MoodBoardRepresentation"
            },
            "sequenceOrder":{
               "type":"integer",
               "format":"int32"
            },
            "commerceItem":{
               "$ref":"#/definitions/ComItem"
            },
            "price":{
               "$ref":"#/definitions/Price"
            },
            "priceOverride":{
               "$ref":"#/definitions/PriceOverride"
            }
         }
      },
      "AddItemsToOrderRequest":{
         "type":"object",
         "properties":{
            "addItems":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/AddItemToOrderBean"
               }
            }
         }
      },
      "ServletRegistration":{
         "type":"object",
         "properties":{
            "mappings":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "runAsRole":{
               "type":"string"
            },
            "name":{
               "type":"string"
            },
            "className":{
               "type":"string"
            },
            "initParameters":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            }
         }
      },
      "SearchSFClientAccountRequest":{
         "type":"object",
         "required":[
            "request"
         ],
         "properties":{
            "request":{
               "$ref":"#/definitions/SearchSFClientAccountBean"
            }
         }
      },
      "ConfigCreationFilter":{
         "type":"object"
      },
      "ProjectBean":{
         "type":"object",
         "properties":{
            "projectId":{
               "type":"string"
            },
            "projectName":{
               "type":"string"
            },
            "clientAccountId":{
               "type":"string"
            },
            "isoCurrency":{
               "type":"string"
            },
            "divisions":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/DivisionBean"
               }
            },
            "clients":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/Client"
               }
            },
            "associates":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/Associate"
               }
            },
            "forecastings":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/Forecasting"
               }
            },
            "divisionsByOpportunity":{
               "type":"object",
               "additionalProperties":{
                  "type":"array",
                  "items":{
                     "$ref":"#/definitions/DivisionBean"
                  }
               }
            },
            "createdBy":{
               "type":"string"
            },
            "createdDate":{
               "type":"string"
            },
            "postalCode":{
               "type":"string"
            },
            "projectType":{
               "type":"string"
            },
            "lastModifiedDate":{
               "type":"string"
            },
            "editedBy":{
               "type":"string"
            },
            "galleries":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "currencySymbol":{
               "type":"string"
            },
            "currencyLabel":{
               "type":"string"
            },
            "city":{
               "type":"string"
            },
            "state":{
               "type":"string"
            },
            "country":{
               "type":"string"
            },
            "taxExempt":{
               "type":"boolean",
               "default":false
            },
            "taxExemptRequest":{
               "type":"boolean",
               "default":false
            },
            "sameShipping":{
               "type":"boolean",
               "default":false
            },
            "clientType":{
               "type":"string",
               "enum":[
                  "designClient",
                  "tradeClient"
               ]
            },
            "designClient":{
               "$ref":"#/definitions/DesignClientResponse"
            },
            "tradeClient":{
               "$ref":"#/definitions/TradeClientResponse"
            },
            "pricingType":{
               "type":"string",
               "enum":[
                  "non-member",
                  "member",
                  "non-trade",
                  "trade"
               ]
            },
            "projectPDFShippingAddress":{
               "$ref":"#/definitions/ProjectPDFShippingAddress"
            },
            "opportunities":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/SFOpportunityBean"
               }
            },
            "account":{
               "type":"string"
            },
            "activeOpportunity":{
               "type":"string"
            },
            "contact":{
               "$ref":"#/definitions/SFProjectContact"
            },
            "id":{
               "type":"string"
            }
         }
      },
      "ColorModel":{
         "type":"object",
         "properties":{
            "transparency":{
               "type":"integer",
               "format":"int32"
            },
            "numComponents":{
               "type":"integer",
               "format":"int32"
            },
            "numColorComponents":{
               "type":"integer",
               "format":"int32"
            },
            "colorSpace":{
               "$ref":"#/definitions/ColorSpace"
            },
            "transferType":{
               "type":"integer",
               "format":"int32"
            },
            "componentSize":{
               "type":"array",
               "items":{
                  "type":"integer",
                  "format":"int32"
               }
            },
            "pixelSize":{
               "type":"integer",
               "format":"int32"
            },
            "alphaPremultiplied":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "SkuInfoBean":{
         "type":"object",
         "properties":{
            "skuId":{
               "type":"string"
            },
            "displayName":{
               "type":"string"
            },
            "fullSkuId":{
               "type":"string"
            },
            "optionBean":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/OptionBean"
               }
            },
            "cogSku":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "SoftSelfCleaningCache":{
         "type":"object"
      },
      "RemoveShippingPriceOverrideRequest":{
         "type":"object",
         "required":[
            "projectId",
            "shippingOverrideType"
         ],
         "properties":{
            "projectId":{
               "type":"string"
            },
            "opportunityNumber":{
               "type":"string"
            },
            "shippingOverrideType":{
               "type":"string",
               "enum":[
                  "standardDelivery",
                  "unlimitedFurnitureDelivery"
               ]
            }
         }
      },
      "SFClientAddress":{
         "type":"object",
         "properties":{
            "state":{
               "type":"string"
            },
            "id":{
               "type":"string"
            },
            "country":{
               "type":"string"
            },
            "postalCode":{
               "type":"string"
            },
            "city":{
               "type":"string"
            },
            "companyName":{
               "type":"string"
            },
            "streetAddress1":{
               "type":"string"
            },
            "streetAddress2":{
               "type":"string"
            },
            "isPrimary":{
               "type":"boolean",
               "default":false
            },
            "isInactive":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "AdsAccountLookupRequest":{
         "type":"object",
         "properties":{
            "firstName":{
               "type":"string"
            },
            "lastName":{
               "type":"string"
            },
            "postalCode":{
               "type":"string"
            },
            "ssn":{
               "type":"string"
            },
            "dobMonth":{
               "type":"string"
            },
            "dobDay":{
               "type":"string"
            },
            "accountNumber":{
               "type":"string"
            },
            "storeId":{
               "type":"string"
            },
            "profileId":{
               "type":"string"
            },
            "associateId":{
               "type":"string"
            },
            "dob":{
               "type":"string"
            },
            "recorgType":{
               "type":"string",
               "enum":[
                  "ACCOUNT_SSN",
                  "SSN_POSTAL_DOB",
                  "ACCOUNT_POSTAL",
                  "SSN_POSTAL",
                  "ACCOUNT_POSTAL_SSN",
                  "ACCOUNT",
                  "ACCOUNT_FIRST_LAST_POSTAL"
               ]
            }
         }
      },
      "ProjectSearchRequest":{
         "type":"object",
         "required":[
            "fieldName"
         ],
         "properties":{
            "fieldName":{
               "type":"string",
               "enum":[
                  "associates",
                  "clients",
                  "createdBy",
                  "editedBy",
                  "projectName",
                  "type",
                  "galleries",
                  "id",
                  "all"
               ]
            },
            "sortByField":{
               "type":"string"
            },
            "sortDirection":{
               "type":"string",
               "enum":[
                  "ONE",
                  "TWO"
               ]
            },
            "pageNum":{
               "type":"integer",
               "format":"int32",
               "description":"1"
            },
            "recordsPerPage":{
               "type":"integer",
               "format":"int32",
               "description":"10"
            },
            "paginationEnabled":{
               "type":"boolean",
               "default":false
            },
            "text1":{
               "type":"string"
            },
            "text2":{
               "type":"string"
            },
            "partial":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "Accessible":{
         "type":"object",
         "properties":{
            "accessibleContext":{
               "$ref":"#/definitions/AccessibleContext"
            }
         }
      },
      "FlavorMap":{
         "type":"object"
      },
      "CreateSFPersonAccountRequest":{
         "type":"object",
         "required":[
            "account"
         ],
         "properties":{
            "account":{
               "$ref":"#/definitions/CreateSFPersonAccountBean"
            }
         }
      },
      "OrderBeanInfo":{
         "type":"object",
         "properties":{
            "orderTotal":{
               "type":"number",
               "format":"double"
            },
            "standardDeliveryAmount":{
               "type":"number",
               "format":"double"
            },
            "homeDeliveryAmount":{
               "type":"number",
               "format":"double"
            },
            "taxAmount":{
               "type":"number",
               "format":"double"
            },
            "orderSubtotal":{
               "type":"number",
               "format":"double"
            },
            "orderId":{
               "type":"string"
            },
            "mattressRecyclingFee":{
               "type":"number",
               "format":"double"
            },
            "additionalShippingSurcharge":{
               "type":"number",
               "format":"double"
            },
            "orderTotalExcludeTaxAmount":{
               "type":"number",
               "format":"double"
            }
         }
      },
      "NameUnresolver":{
         "type":"object"
      },
      "ConfigurationSource":{
         "type":"object",
         "properties":{
            "path":{
               "type":"string"
            },
            "specific":{
               "type":"boolean",
               "default":false
            },
            "fileSystemName":{
               "type":"string"
            },
            "fileSystemDisplayName":{
               "type":"string"
            },
            "fileSystemDescriptor":{
               "$ref":"#/definitions/VirtualFileSystemDescriptor"
            }
         }
      },
      "InventoryMaster":{
         "type":"object",
         "properties":{
            "sku":{
               "type":"string"
            },
            "allowable":{
               "type":"boolean",
               "default":false
            },
            "warehouseDetail":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/WarehouseInventory"
               }
            }
         }
      },
      "SearchSFClientAccountBean":{
         "type":"object",
         "properties":{
            "concAccountID":{
               "type":"string"
            },
            "firstName":{
               "type":"string",
               "example":"Samuel",
               "description":"First name of the Client Account"
            },
            "lastName":{
               "type":"string",
               "example":"Adams",
               "description":"Last name of the Client Account"
            },
            "email":{
               "type":"string"
            },
            "company":{
               "type":"string"
            },
            "postalCode":{
               "type":"string"
            },
            "phone":{
               "type":"string"
            },
            "atgid":{
               "type":"string"
            },
            "tradeID":{
               "type":"string"
            },
            "accountTypes":{
               "type":"string"
            },
            "contactId":{
               "type":"string"
            },
            "rhmemberID":{
               "type":"string"
            }
         }
      },
      "BufferStrategy":{
         "type":"object",
         "properties":{
            "drawGraphics":{
               "$ref":"#/definitions/Graphics"
            },
            "capabilities":{
               "$ref":"#/definitions/BufferCapabilities"
            }
         }
      },
      "EnumerationServlet":{
         "type":"object"
      },
      "RegistryBean":{
         "type":"object",
         "properties":{
            "event":{
               "type":"string",
               "description":"Event Name"
            },
            "shortDesc":{
               "type":"string",
               "description":"Event Description"
            },
            "eventDateTime":{
               "type":"string",
               "example":"2020-11-30 21:45:00",
               "description":"Event expiry date"
            },
            "lineItems":{
               "type":"array",
               "description":"Items in the gift registry",
               "items":{
                  "$ref":"#/definitions/CBAddItem"
               }
            },
            "purchasedLineItems":{
               "type":"array",
               "description":"Purchased Items in the gift registry",
               "items":{
                  "$ref":"#/definitions/PurchasedItemBean"
               }
            },
            "registrantAddress":{
               "description":"The address of the registrant",
               "$ref":"#/definitions/Address"
            },
            "coRegistrantAddress":{
               "description":"The address of the co-registrant",
               "$ref":"#/definitions/Address"
            },
            "preEventAddress":{
               "description":"The address to ship to prior to the event.",
               "$ref":"#/definitions/Address"
            },
            "postEventAddress":{
               "description":"The address to ship to after to the event.",
               "$ref":"#/definitions/Address"
            },
            "accessLevel":{
               "type":"string",
               "example":"unlimited",
               "description":"Default is 'none'.  Indicates how discoverable this registry is supposed to be.  'unlimited' means anyone can find it, 'password' means a password is required for non-owner to access it.  'none' means only the registry owner can access it."
            },
            "brand":{
               "type":"string",
               "example":"RH",
               "description":"Default is RH.  Identifies the site used to create the registry.  Must be one of RH,BC,TN,MO"
            },
            "acceptGiftCard":{
               "type":"boolean",
               "description":"Indicates the registrant is accepting gift cards too",
               "default":false
            },
            "atgRegistryId":{
               "type":"string",
               "description":"ATG Registry Id"
            },
            "ownerEmail":{
               "type":"string",
               "description":"Registry owner email"
            },
            "registrantEmail":{
               "type":"string",
               "description":"Registry Registrant email"
            },
            "ownerFirstName":{
               "type":"string",
               "description":"Registry owner firstName"
            },
            "ownerLastName":{
               "type":"string",
               "description":"Registry owner lastName"
            },
            "gallery":{
               "$ref":"#/definitions/Gallery"
            },
            "galleryAgent":{
               "$ref":"#/definitions/GalleryAgent"
            },
            "password":{
               "type":"string"
            }
         }
      },
      "UpdateItemBean":{
         "type":"object",
         "required":[
            "skuId"
         ],
         "properties":{
            "skuId":{
               "type":"string",
               "example":"sku35452",
               "position":1,
               "description":"sku id"
            },
            "quantity":{
               "type":"integer",
               "format":"int32",
               "example":1,
               "position":2,
               "description":"quantity",
               "minimum":0
            }
         }
      },
      "ServletConfig":{
         "type":"object",
         "properties":{
            "servletName":{
               "type":"string"
            },
            "servletContext":{
               "$ref":"#/definitions/ServletContext"
            },
            "initParameterNames":{
               "$ref":"#/definitions/EnumerationString"
            }
         }
      },
      "SendProjectEmailRequest":{
         "type":"object",
         "properties":{
            "projectId":{
               "type":"string"
            },
            "projectType":{
               "type":"string"
            },
            "projectName":{
               "type":"string"
            },
            "email":{
               "type":"string"
            },
            "message":{
               "type":"string"
            },
            "subject":{
               "type":"string"
            },
            "bccAssociate":{
               "type":"boolean",
               "default":false
            },
            "additionalEmails":{
               "type":"string"
            },
            "opportunityId":{
               "type":"string"
            },
            "opportunity":{
               "$ref":"#/definitions/Opportunity"
            },
            "clientType":{
               "type":"string"
            },
            "associateEmail":{
               "type":"string"
            },
            "bccEmail":{
               "type":"string"
            },
            "senderGalleryId":{
               "type":"string"
            },
            "senderFirstName":{
               "type":"string"
            },
            "senderLastName":{
               "type":"string"
            },
            "currency":{
               "type":"string"
            },
            "currencyLabel":{
               "type":"string"
            }
         }
      },
      "CBLineItem":{
         "type":"object",
         "properties":{
            "lineId":{
               "type":"string"
            },
            "quantity":{
               "type":"integer",
               "format":"int32"
            },
            "sku":{
               "type":"string"
            },
            "skuType":{
               "type":"string"
            },
            "brand":{
               "type":"string"
            },
            "displayName":{
               "type":"string"
            },
            "shipVia":{
               "type":"string"
            },
            "shipViaCode":{
               "type":"string"
            },
            "giftWrap":{
               "type":"boolean",
               "default":false
            },
            "dc":{
               "type":"string"
            },
            "deliveryEta":{
               "type":"string"
            },
            "deliveryEtaStart":{
               "type":"string"
            },
            "deliveryEtaEnd":{
               "type":"string"
            },
            "coordGroup":{
               "type":"string"
            },
            "registryId":{
               "type":"string"
            },
            "sourceCode":{
               "type":"string"
            },
            "spoTermsAcceptedDate":{
               "type":"string"
            },
            "groundFreightExempt":{
               "type":"boolean",
               "default":false
            },
            "price":{
               "$ref":"#/definitions/CBLineItemPrice"
            },
            "options":{
               "type":"array",
               "uniqueItems":true,
               "items":{
                  "$ref":"#/definitions/CBSkuOption"
               }
            },
            "monogram":{
               "$ref":"#/definitions/CBMonogramTemplate"
            },
            "skuCustomization":{
               "$ref":"#/definitions/CBCustomItemTemplate"
            },
            "giftTo":{
               "type":"string"
            },
            "giftFrom":{
               "type":"string"
            }
         }
      },
      "AccessibleSelection":{
         "type":"object",
         "properties":{
            "accessibleSelectionCount":{
               "type":"integer",
               "format":"int32"
            }
         }
      },
      "MarketingRequestBean":{
         "type":"object",
         "properties":{
            "firstName":{
               "type":"string"
            },
            "middleName":{
               "type":"string"
            },
            "lastName":{
               "type":"string"
            },
            "address1":{
               "type":"string"
            },
            "address2":{
               "type":"string"
            },
            "city":{
               "type":"string"
            },
            "state":{
               "type":"string"
            },
            "postalCode":{
               "type":"string"
            },
            "country":{
               "type":"string"
            },
            "phoneNumber":{
               "type":"string"
            },
            "emailAddress":{
               "type":"string"
            },
            "confirmEmailAddress":{
               "type":"string"
            },
            "marketingRequestType":{
               "type":"string"
            },
            "marketingRequestStatus":{
               "type":"string"
            },
            "optIn":{
               "type":"boolean",
               "default":false
            },
            "optIns":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "extraInfo":{
               "type":"string"
            },
            "source":{
               "type":"string"
            },
            "dateRequested":{
               "type":"string",
               "format":"date-time"
            },
            "emailConfirmation":{
               "type":"boolean",
               "default":false
            },
            "validatePostalCode":{
               "type":"boolean",
               "default":false
            },
            "catalogRequestBean":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/CatalogRequestBean"
               }
            },
            "siteId":{
               "type":"string"
            },
            "launchName":{
               "type":"string"
            },
            "contactInfoId":{
               "type":"string"
            },
            "repositoryName":{
               "type":"string"
            },
            "sourceBookIndex":{
               "type":"string"
            },
            "eventDate":{
               "type":"string",
               "format":"date-time"
            },
            "itemDescriptorName":{
               "type":"string"
            },
            "repositoryId":{
               "type":"string"
            }
         }
      },
      "BeanConfigurator":{
         "type":"object"
      },
      "AccessibleAction":{
         "type":"object",
         "properties":{
            "accessibleActionCount":{
               "type":"integer",
               "format":"int32"
            }
         }
      },
      "SFTradeAccountResponseContact":{
         "type":"object",
         "properties":{
            "address":{
               "$ref":"#/definitions/SFTradeAccountResponseAddress"
            },
            "firstName":{
               "type":"string"
            },
            "lastName":{
               "type":"string"
            },
            "contactId":{
               "type":"string"
            },
            "phone":{
               "type":"string"
            },
            "primaryContact":{
               "type":"boolean",
               "default":false
            },
            "homePhone":{
               "type":"string"
            },
            "assistantPhone":{
               "type":"string"
            },
            "mobile":{
               "type":"string"
            },
            "workPhone":{
               "type":"string"
            },
            "email":{
               "type":"string"
            }
         }
      },
      "ConfigurationFileSystems":{
         "type":"object",
         "properties":{
            "defaultUpdateSystem":{
               "$ref":"#/definitions/VirtualFileSystem"
            },
            "fileSystems":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/VirtualFileSystem"
               }
            }
         }
      },
      "CommerceItemId":{
         "type":"object",
         "required":[
            "id"
         ],
         "properties":{
            "id":{
               "type":"string",
               "example":"ci100001",
               "position":1,
               "description":"line item id"
            }
         }
      },
      "GetOpportunityResponse":{
         "type":"object",
         "properties":{
            "statusCode":{
               "type":"string",
               "enum":[
                  "SUCCESS",
                  "ERROR"
               ]
            },
            "errorCode":{
               "type":"string",
               "enum":[
                  "SYSTEM",
                  "VALIDATION",
                  "NOT_FOUND",
                  "URL_UNSUPPORTED",
                  "SERVICE_ERROR",
                  "BAD_REQUEST",
                  "NOT_AUTHENTICATED",
                  "SESSION_TIMEOUT",
                  "FORBIDDEN",
                  "CONFLICT",
                  "SERVICE_UNAVAILABLE"
               ]
            },
            "messages":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "errorMessages":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "fieldErrors":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "formErrors":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "opportunity":{
               "$ref":"#/definitions/SFOpportunityBean"
            },
            "projectUserConfig":{
               "$ref":"#/definitions/ProjectUserAttribute"
            },
            "success":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "UserAuthority":{
         "type":"object",
         "properties":{
            "userAuthorityName":{
               "type":"string"
            }
         }
      },
      "FocusListener":{
         "type":"object"
      },
      "SkuInfoOptionsBean":{
         "type":"object",
         "properties":{
            "skuOptions":{
               "$ref":"#/definitions/SkuOptionInfo"
            },
            "skuInfo":{
               "$ref":"#/definitions/SkuCartDetailsBean"
            },
            "fullSkuId":{
               "type":"string"
            },
            "productId":{
               "type":"string"
            }
         }
      },
      "CBAddItem":{
         "type":"object",
         "properties":{
            "sku":{
               "type":"string"
            },
            "productId":{
               "type":"string"
            },
            "brand":{
               "type":"string"
            },
            "registryId":{
               "type":"string"
            },
            "quantity":{
               "type":"integer",
               "format":"int32"
            },
            "spoTermsAccepted":{
               "type":"boolean",
               "default":false
            },
            "spoTerms":{
               "type":"string"
            },
            "giftTo":{
               "type":"string"
            },
            "giftFrom":{
               "type":"string"
            },
            "monogram":{
               "$ref":"#/definitions/CBMonogramTemplate"
            },
            "customInfo":{
               "$ref":"#/definitions/CBCustomItemTemplate"
            }
         }
      },
      "ProjectServiceResponse":{
         "type":"object",
         "properties":{
            "statusCode":{
               "type":"string",
               "enum":[
                  "SUCCESS",
                  "ERROR"
               ]
            },
            "errorCode":{
               "type":"string",
               "enum":[
                  "SYSTEM",
                  "VALIDATION",
                  "NOT_FOUND",
                  "URL_UNSUPPORTED",
                  "SERVICE_ERROR",
                  "BAD_REQUEST",
                  "NOT_AUTHENTICATED",
                  "SESSION_TIMEOUT",
                  "FORBIDDEN",
                  "CONFLICT",
                  "SERVICE_UNAVAILABLE"
               ]
            },
            "messages":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "errorMessages":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "fieldErrors":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "formErrors":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "project":{
               "$ref":"#/definitions/ProjectBean"
            },
            "success":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "Shape":{
         "type":"object",
         "properties":{
            "bounds":{
               "$ref":"#/definitions/Rectangle"
            },
            "bounds2D":{
               "$ref":"#/definitions/Rectangle2D"
            }
         }
      },
      "Persona":{
         "type":"object",
         "properties":{
            "name":{
               "type":"string"
            },
            "subPersonae":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/Persona"
               }
            },
            "accessRights":{
               "type":"array",
               "items":{
                  "type":"object"
               }
            },
            "userAuthority":{
               "$ref":"#/definitions/UserAuthority"
            }
         }
      },
      "CBItemFee":{
         "type":"object",
         "properties":{
            "feeType":{
               "type":"string"
            },
            "quantity":{
               "type":"integer",
               "format":"int32"
            },
            "linkedLineItemId":{
               "type":"string"
            },
            "unitCost":{
               "type":"integer",
               "format":"int32"
            },
            "value":{
               "type":"integer",
               "format":"int32"
            }
         }
      },
      "AWTEventListener":{
         "type":"object"
      },
      "PaymentInstrument":{
         "type":"object",
         "required":[
            "payInstrumenttype"
         ],
         "properties":{
            "payInstrumenttype":{
               "type":"string",
               "enum":[
                  "DISCOVER",
                  "MASTERCARD",
                  "VISA",
                  "AMEX"
               ]
            },
            "payInstrumentId":{
               "type":"string",
               "minLength":1,
               "maxLength":50
            },
            "securityCode":{
               "type":"string",
               "minLength":3,
               "maxLength":4
            },
            "expirationMonth":{
               "type":"string",
               "minLength":1,
               "maxLength":2
            },
            "expirationYear":{
               "type":"string",
               "minLength":4,
               "maxLength":2147483647
            }
         }
      },
      "ProductSkuViewRequest":{
         "type":"object",
         "properties":{
            "productId":{
               "type":"string"
            },
            "fullSkuId":{
               "type":"string"
            },
            "imageKey":{
               "type":"string"
            },
            "diameter":{
               "type":"string"
            },
            "length":{
               "type":"string"
            },
            "width":{
               "type":"string"
            },
            "lineId":{
               "type":"string"
            },
            "siteId":{
               "type":"string"
            },
            "qty":{
               "type":"integer",
               "format":"int32"
            },
            "monogram":{
               "type":"boolean",
               "default":false
            },
            "continiousLoop":{
               "type":"boolean",
               "default":false
            },
            "motorized":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "SkuOptionInfo":{
         "type":"object",
         "properties":{
            "sku":{
               "type":"string"
            },
            "name":{
               "type":"string"
            },
            "options":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/OptionBean"
               }
            },
            "swatchIds":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            }
         }
      },
      "RegistryAnnoucementCardsBean":{
         "type":"object",
         "properties":{
            "firstName":{
               "type":"string"
            },
            "middleName":{
               "type":"string"
            },
            "lastName":{
               "type":"string"
            },
            "address1":{
               "type":"string"
            },
            "address2":{
               "type":"string"
            },
            "city":{
               "type":"string"
            },
            "state":{
               "type":"string"
            },
            "postalCode":{
               "type":"string"
            },
            "country":{
               "type":"string"
            },
            "phoneNumber":{
               "type":"string"
            },
            "emailAddress":{
               "type":"string"
            },
            "numberOfCards":{
               "type":"integer",
               "format":"int32"
            },
            "site":{
               "type":"string"
            },
            "optIns":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            }
         }
      },
      "OptionBean":{
         "type":"object",
         "properties":{
            "id":{
               "type":"string"
            },
            "label":{
               "type":"string"
            },
            "optionType":{
               "type":"string"
            },
            "sortPriority":{
               "type":"integer",
               "format":"int32"
            },
            "optionTypePriority":{
               "type":"integer",
               "format":"int32"
            }
         }
      },
      "DataFlavor":{
         "type":"object",
         "properties":{
            "mimeType":{
               "type":"string"
            },
            "humanPresentableName":{
               "type":"string"
            },
            "defaultRepresentationClassAsString":{
               "type":"string"
            },
            "flavorJavaFileListType":{
               "type":"boolean",
               "default":false
            },
            "flavorRemoteObjectType":{
               "type":"boolean",
               "default":false
            },
            "flavorSerializedObjectType":{
               "type":"boolean",
               "default":false
            },
            "flavorTextType":{
               "type":"boolean",
               "default":false
            },
            "mimeTypeSerializedObject":{
               "type":"boolean",
               "default":false
            },
            "representationClassByteBuffer":{
               "type":"boolean",
               "default":false
            },
            "representationClassCharBuffer":{
               "type":"boolean",
               "default":false
            },
            "representationClassInputStream":{
               "type":"boolean",
               "default":false
            },
            "representationClassReader":{
               "type":"boolean",
               "default":false
            },
            "representationClassRemote":{
               "type":"boolean",
               "default":false
            },
            "representationClassSerializable":{
               "type":"boolean",
               "default":false
            },
            "subType":{
               "type":"string"
            },
            "primaryType":{
               "type":"string"
            }
         }
      },
      "ProductSkuViewResponse":{
         "type":"object",
         "properties":{
            "response":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/ProductCombinedBean"
               }
            },
            "skuResponse":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/SkuInfoOptionsBean"
               }
            },
            "altImageResponse":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/ProductAltImagesBean"
               }
            }
         }
      },
      "MoveInDivision":{
         "type":"object",
         "required":[
            "divisionId"
         ],
         "properties":{
            "divisionId":{
               "type":"string"
            }
         }
      },
      "VirtualFileSystem":{
         "type":"object",
         "properties":{
            "descriptor":{
               "$ref":"#/definitions/VirtualFileSystemDescriptor"
            },
            "vfsname":{
               "type":"string"
            }
         }
      },
      "FontMetrics":{
         "type":"object",
         "properties":{
            "font":{
               "$ref":"#/definitions/Font"
            },
            "maxAdvance":{
               "type":"integer",
               "format":"int32"
            },
            "maxAscent":{
               "type":"integer",
               "format":"int32"
            },
            "maxDecent":{
               "type":"integer",
               "format":"int32"
            },
            "maxDescent":{
               "type":"integer",
               "format":"int32"
            },
            "widths":{
               "type":"array",
               "items":{
                  "type":"integer",
                  "format":"int32"
               }
            },
            "fontRenderContext":{
               "$ref":"#/definitions/FontRenderContext"
            },
            "ascent":{
               "type":"integer",
               "format":"int32"
            },
            "descent":{
               "type":"integer",
               "format":"int32"
            },
            "leading":{
               "type":"integer",
               "format":"int32"
            },
            "height":{
               "type":"integer",
               "format":"int32"
            }
         }
      },
      "CustomInfo":{
         "type":"object",
         "properties":{
            "type":{
               "type":"string"
            },
            "mountType":{
               "type":"string"
            },
            "lining":{
               "type":"string"
            },
            "panel":{
               "type":"string"
            },
            "controlType":{
               "type":"string"
            },
            "controlPosition":{
               "type":"string"
            },
            "controlLength":{
               "type":"number",
               "format":"double"
            },
            "tiltType":{
               "type":"string"
            },
            "controlAndTilt":{
               "type":"string"
            },
            "trim":{
               "type":"string"
            },
            "width":{
               "type":"number",
               "format":"double"
            },
            "length":{
               "type":"number",
               "format":"double"
            },
            "diameter":{
               "type":"number",
               "format":"double"
            },
            "roomLabel":{
               "type":"string"
            },
            "bracketColor":{
               "type":"string"
            },
            "rollType":{
               "type":"string"
            },
            "fulfillmentCode":{
               "type":"string"
            },
            "customHardwareLength":{
               "type":"number",
               "format":"double"
            },
            "trimColor":{
               "type":"string"
            },
            "hardwareType":{
               "type":"string"
            }
         }
      },
      "UnconfirmedDepositPaymentInfo":{
         "type":"object",
         "properties":{
            "orderId":{
               "type":"string",
               "example":"H1234567890",
               "description":"Reference order id"
            },
            "paymentCardId":{
               "type":"string"
            },
            "paymentType":{
               "type":"string"
            },
            "ipAddress":{
               "type":"string"
            },
            "amountToApply":{
               "type":"number",
               "format":"double",
               "example":201.51,
               "position":1,
               "description":"Amount to Charge"
            },
            "currency":{
               "type":"string",
               "example":"CAD",
               "position":2,
               "description":"Currency in which to Charge",
               "enum":[
                  "CAD",
                  "USD"
               ]
            },
            "firstName":{
               "type":"string",
               "example":"Arthur",
               "position":10,
               "description":"First Name."
            },
            "lastName":{
               "type":"string",
               "example":"Dent",
               "position":11,
               "description":"Last name"
            },
            "address1":{
               "type":"string",
               "example":"100 Pine Street",
               "position":12,
               "description":"Address Part 1"
            },
            "address2":{
               "type":"string",
               "example":"Suite 102",
               "position":13,
               "description":"Address Part 2"
            },
            "city":{
               "type":"string",
               "example":"San Francisco",
               "position":14,
               "description":"City"
            },
            "state":{
               "type":"string",
               "example":"CA",
               "position":15,
               "description":"State/Province"
            },
            "postalCode":{
               "type":"string",
               "example":"94111",
               "position":16,
               "description":"Postal Code"
            },
            "country":{
               "type":"string",
               "example":"US",
               "position":17,
               "description":"Country"
            },
            "phoneNumber":{
               "type":"string",
               "example":"5555555555",
               "position":18,
               "description":"Phone Number"
            },
            "cardType":{
               "type":"string",
               "example":"masterCard",
               "position":20,
               "description":"Type of credit card"
            },
            "creditCardNumber":{
               "type":"string",
               "example":"5555555555554444",
               "position":21,
               "description":"Credit Card Number"
            },
            "cvNumber":{
               "type":"string",
               "example":"123",
               "position":22,
               "description":"CVV2"
            },
            "expirationMonth":{
               "type":"string",
               "example":"01",
               "position":23,
               "description":"cc expiration month"
            },
            "expirationYear":{
               "type":"string",
               "example":"2020",
               "position":24,
               "description":"cc expiration year"
            },
            "paymentPlan":{
               "type":"string",
               "position":25,
               "description":"RH cc payment plan"
            },
            "avsStatus":{
               "type":"string",
               "example":"userOverride",
               "position":26,
               "description":"used for when user overrides AVS suggested values"
            },
            "email":{
               "type":"string",
               "position":29,
               "description":"Email address"
            },
            "encryptedCardNumber":{
               "type":"string",
               "position":31,
               "description":"Encrypted Credit Card Number"
            },
            "encryptedExpiryMonth":{
               "type":"string",
               "position":32,
               "description":"Encrypted Expiration Month"
            },
            "encryptedExpiryYear":{
               "type":"string",
               "position":33,
               "description":"Encrypted Expiration Year"
            },
            "encryptedSecurityCode":{
               "type":"string",
               "position":34,
               "description":"Encrypted Security Code"
            }
         }
      },
      "Servlet":{
         "type":"object",
         "properties":{
            "servletConfig":{
               "$ref":"#/definitions/ServletConfig"
            },
            "servletInfo":{
               "type":"string"
            }
         }
      },
      "CommerceItemNotesRequestBean":{
         "type":"object",
         "required":[
            "commerceItemId"
         ],
         "properties":{
            "commerceItemId":{
               "type":"string",
               "example":"ci207000001"
            },
            "notes":{
               "type":"string",
               "minLength":0,
               "maxLength":300
            }
         }
      },
      "Toolkit":{
         "type":"object",
         "properties":{
            "alwaysOnTopSupported":{
               "type":"boolean",
               "default":false
            },
            "awteventListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/AWTEventListener"
               }
            },
            "fontList":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "maximumCursorColors":{
               "type":"integer",
               "format":"int32"
            },
            "menuShortcutKeyMask":{
               "type":"integer",
               "format":"int32"
            },
            "screenResolution":{
               "type":"integer",
               "format":"int32"
            },
            "screenSize":{
               "$ref":"#/definitions/Dimension"
            },
            "systemClipboard":{
               "$ref":"#/definitions/Clipboard"
            },
            "systemEventQueue":{
               "$ref":"#/definitions/EventQueue"
            },
            "systemSelection":{
               "$ref":"#/definitions/Clipboard"
            },
            "dynamicLayoutActive":{
               "type":"boolean",
               "default":false
            },
            "propertyChangeListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/PropertyChangeListener"
               }
            },
            "colorModel":{
               "$ref":"#/definitions/ColorModel"
            }
         }
      },
      "SessionCookieConfig":{
         "type":"object",
         "properties":{
            "comment":{
               "type":"string"
            },
            "path":{
               "type":"string"
            },
            "domain":{
               "type":"string"
            },
            "secure":{
               "type":"boolean",
               "default":false
            },
            "maxAge":{
               "type":"integer",
               "format":"int32"
            },
            "name":{
               "type":"string"
            },
            "httpOnly":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "RegistrationInfoResponse":{
         "type":"object",
         "properties":{
            "statusCode":{
               "type":"string",
               "enum":[
                  "SUCCESS",
                  "ERROR"
               ]
            },
            "errorCode":{
               "type":"string",
               "enum":[
                  "SYSTEM",
                  "VALIDATION",
                  "NOT_FOUND",
                  "URL_UNSUPPORTED",
                  "SERVICE_ERROR",
                  "BAD_REQUEST",
                  "NOT_AUTHENTICATED",
                  "SESSION_TIMEOUT",
                  "FORBIDDEN",
                  "CONFLICT",
                  "SERVICE_UNAVAILABLE"
               ]
            },
            "messages":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "errorMessages":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "fieldErrors":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "formErrors":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "id":{
               "type":"string"
            },
            "firstName":{
               "type":"string"
            },
            "email":{
               "type":"string"
            },
            "registryAssigned":{
               "type":"boolean",
               "default":false
            },
            "success":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "AccountInfo":{
         "type":"object",
         "required":[
            "email",
            "firstName",
            "lastName"
         ],
         "properties":{
            "id":{
               "type":"string"
            },
            "firstName":{
               "type":"string",
               "minLength":3,
               "maxLength":20
            },
            "lastName":{
               "type":"string",
               "minLength":3,
               "maxLength":20
            },
            "email":{
               "type":"string",
               "minLength":1,
               "maxLength":80
            }
         }
      },
      "MoveItemWithInSpaceRequest":{
         "type":"object",
         "required":[
            "divisionId",
            "projectId"
         ],
         "properties":{
            "projectId":{
               "type":"string"
            },
            "divisionId":{
               "type":"string"
            },
            "divisionItemIds":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            }
         }
      },
      "WindowListener":{
         "type":"object"
      },
      "SkuPriceInfo":{
         "type":"object",
         "properties":{
            "fullSkuId":{
               "type":"string"
            },
            "currencySymbol":{
               "type":"string"
            },
            "currencyLabel":{
               "type":"string"
            },
            "listPrice":{
               "type":"number",
               "format":"double"
            },
            "salePrice":{
               "type":"number",
               "format":"double"
            },
            "memberPrice":{
               "type":"number",
               "format":"double"
            },
            "tradePrice":{
               "type":"number",
               "format":"double"
            },
            "contractPrice":{
               "type":"number",
               "format":"double"
            },
            "onSale":{
               "type":"boolean",
               "default":false
            },
            "onClearance":{
               "type":"boolean",
               "default":false
            },
            "showMemberPrice":{
               "type":"boolean",
               "default":false
            },
            "giftCardProduct":{
               "type":"boolean",
               "default":false
            },
            "customProductErrorCode":{
               "type":"string"
            },
            "customProductErrorMsg":{
               "type":"string"
            },
            "requestId":{
               "type":"string"
            }
         }
      },
      "LoginInfo":{
         "type":"object",
         "required":[
            "login",
            "password"
         ],
         "properties":{
            "password":{
               "type":"string",
               "example":"gr8passWurd",
               "description":"password",
               "minLength":3,
               "maxLength":20
            },
            "loginAndCheckoutMergeCart":{
               "type":"boolean",
               "default":false
            },
            "giftListToken":{
               "type":"string"
            },
            "trustAnswer":{
               "type":"string"
            },
            "login":{
               "type":"string",
               "example":"sbartfast@some.com",
               "position":1,
               "description":"login",
               "minLength":1,
               "maxLength":80
            },
            "autoLogin":{
               "type":"boolean",
               "position":3,
               "description":"sets remember me",
               "default":false
            }
         }
      },
      "PersistDivisionsSelectionRequest":{
         "type":"object",
         "required":[
            "divisions",
            "projectId"
         ],
         "properties":{
            "projectId":{
               "type":"string"
            },
            "divisions":{
               "type":"object",
               "additionalProperties":{
                  "type":"boolean"
               }
            }
         }
      },
      "SkuCartDetailsBean":{
         "type":"object",
         "properties":{
            "productName":{
               "type":"string"
            },
            "fullSkuId":{
               "type":"string"
            },
            "skuImageUrl":{
               "type":"string"
            },
            "productPath":{
               "type":"string"
            },
            "productId":{
               "type":"string"
            },
            "webPurchasable":{
               "type":"boolean",
               "default":false
            },
            "monogrammable":{
               "type":"boolean",
               "default":false
            },
            "personalizable":{
               "type":"boolean",
               "default":false
            },
            "regularPriceLabel":{
               "type":"string"
            },
            "salePriceLabel":{
               "type":"string"
            },
            "tradePriceLabel":{
               "type":"string"
            },
            "contractPriceLabel":{
               "type":"string"
            },
            "memberPriceLabel":{
               "type":"string"
            },
            "personalizeInfo":{
               "$ref":"#/definitions/PersonalizeInfo"
            },
            "colorizeInfo":{
               "$ref":"#/definitions/ColorizeInfo"
            },
            "giftCard":{
               "type":"boolean",
               "default":false
            },
            "skuPriceInfo":{
               "$ref":"#/definitions/SkuPriceInfo"
            },
            "giftBoxDetails":{
               "$ref":"#/definitions/GiftBoxDetail"
            }
         }
      },
      "Dimension":{
         "type":"object",
         "properties":{
            "width":{
               "type":"number",
               "format":"double"
            },
            "height":{
               "type":"number",
               "format":"double"
            },
            "size":{
               "$ref":"#/definitions/Dimension"
            }
         }
      },
      "SFCreateTradeAccountResponseBean":{
         "type":"object",
         "properties":{
            "address":{
               "$ref":"#/definitions/SFTradeAccountResponseAddress"
            },
            "accountId":{
               "type":"string"
            },
            "segment":{
               "type":"string"
            },
            "name":{
               "type":"string"
            },
            "memberSince":{
               "type":"string"
            },
            "phone":{
               "type":"string"
            },
            "contacts":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/SFTradeAccountResponseContact"
               }
            },
            "email":{
               "type":"string"
            }
         }
      },
      "Graphics":{
         "type":"object",
         "properties":{
            "color":{
               "$ref":"#/definitions/Color"
            },
            "clip":{
               "$ref":"#/definitions/Shape"
            },
            "font":{
               "$ref":"#/definitions/Font"
            },
            "fontMetrics":{
               "$ref":"#/definitions/FontMetrics"
            },
            "clipBounds":{
               "$ref":"#/definitions/Rectangle"
            },
            "clipRect":{
               "$ref":"#/definitions/Rectangle"
            }
         }
      },
      "AdminServletConfiguration":{
         "type":"object",
         "properties":{
            "defaultStyleIndex":{
               "type":"integer",
               "format":"int32"
            },
            "bodyHeaderAdminContentPlugins":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/AdminContextPlugin"
               }
            },
            "running":{
               "type":"boolean",
               "default":false
            },
            "name":{
               "type":"string"
            },
            "root":{
               "$ref":"#/definitions/NameContext"
            },
            "absoluteName":{
               "type":"string"
            },
            "loggingWarning":{
               "type":"boolean",
               "default":false
            },
            "loggingDebug":{
               "type":"boolean",
               "default":false
            },
            "loggingError":{
               "type":"boolean",
               "default":false
            },
            "adminServletOutputStreamEncoding":{
               "type":"string"
            },
            "adminServletUseServletOutputStream":{
               "type":"boolean",
               "default":false
            },
            "serviceInfo":{
               "type":"string"
            },
            "logListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/LogListener"
               }
            },
            "logListenerCount":{
               "type":"integer",
               "format":"int32"
            },
            "nameContext":{
               "$ref":"#/definitions/NameContext"
            },
            "nucleus":{
               "$ref":"#/definitions/Nucleus"
            },
            "serviceConfiguration":{
               "$ref":"#/definitions/Configuration"
            },
            "loggingInfo":{
               "type":"boolean",
               "default":false
            },
            "loggingTrace":{
               "type":"boolean",
               "default":false
            },
            "adminServlet":{
               "$ref":"#/definitions/Servlet"
            }
         }
      },
      "CommerceItemInfoBean":{
         "type":"object",
         "properties":{
            "productId":{
               "type":"string"
            },
            "itemNumber":{
               "type":"string"
            },
            "quantity":{
               "type":"integer",
               "format":"int64"
            },
            "priceInformation":{
               "$ref":"#/definitions/CommerceItemPriceBean"
            },
            "productDisplayName":{
               "type":"string"
            },
            "customProduct":{
               "type":"boolean",
               "default":false
            },
            "customProductType":{
               "type":"string"
            },
            "customHardware":{
               "type":"boolean",
               "default":false
            },
            "customProductOptions":{
               "type":"object",
               "additionalProperties":{
                  "type":"object"
               }
            },
            "customProductHomeDelivery":{
               "type":"boolean",
               "default":false
            },
            "continuousLoop":{
               "type":"boolean",
               "default":false
            },
            "motorized":{
               "type":"boolean",
               "default":false
            },
            "imageURL":{
               "type":"string"
            },
            "trackHardware":{
               "type":"boolean",
               "default":false
            },
            "skuInfoBean":{
               "$ref":"#/definitions/SkuInfoBean"
            },
            "commerceItemId":{
               "type":"string"
            },
            "siteId":{
               "type":"string"
            },
            "notes":{
               "type":"string"
            }
         }
      },
      "InputMethodRequests":{
         "type":"object",
         "properties":{
            "committedTextLength":{
               "type":"integer",
               "format":"int32"
            },
            "insertPositionOffset":{
               "type":"integer",
               "format":"int32"
            }
         }
      },
      "OrderItem":{
         "type":"object",
         "properties":{
            "productId":{
               "type":"string",
               "minLength":1,
               "maxLength":50
            },
            "skuType":{
               "type":"string",
               "minLength":1,
               "maxLength":50
            },
            "itemDesc":{
               "type":"string",
               "minLength":1,
               "maxLength":200
            },
            "price":{
               "type":"string",
               "minLength":1,
               "maxLength":50
            },
            "quantity":{
               "type":"string",
               "minLength":1,
               "maxLength":50
            },
            "categoryRefId":{
               "type":"string",
               "minLength":1,
               "maxLength":50
            }
         }
      },
      "ExpeditedShippingBean":{
         "type":"object",
         "properties":{
            "commerceItemIds":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "shippingType":{
               "type":"string"
            }
         }
      },
      "RemovePriceOverrideRequest":{
         "type":"object",
         "required":[
            "divisionItemId",
            "projectId"
         ],
         "properties":{
            "projectId":{
               "type":"string"
            },
            "divisionItemId":{
               "type":"string"
            },
            "opportunityNumber":{
               "type":"string"
            },
            "applyOverrideToAllItems":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "Clipboard":{
         "type":"object",
         "properties":{
            "name":{
               "type":"string"
            },
            "flavorListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/FlavorListener"
               }
            },
            "availableDataFlavors":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/DataFlavor"
               }
            }
         }
      },
      "Principal":{
         "type":"object",
         "properties":{
            "name":{
               "type":"string"
            }
         }
      },
      "Locale":{
         "type":"object",
         "properties":{
            "language":{
               "type":"string"
            },
            "country":{
               "type":"string"
            },
            "displayCountry":{
               "type":"string"
            },
            "displayLanguage":{
               "type":"string"
            },
            "displayName":{
               "type":"string"
            },
            "displayScript":{
               "type":"string"
            },
            "displayVariant":{
               "type":"string"
            },
            "extensionKeys":{
               "type":"array",
               "uniqueItems":true,
               "items":{
                  "type":"string"
               }
            },
            "iso3Country":{
               "type":"string"
            },
            "iso3Language":{
               "type":"string"
            },
            "script":{
               "type":"string"
            },
            "unicodeLocaleAttributes":{
               "type":"array",
               "uniqueItems":true,
               "items":{
                  "type":"string"
               }
            },
            "unicodeLocaleKeys":{
               "type":"array",
               "uniqueItems":true,
               "items":{
                  "type":"string"
               }
            },
            "variant":{
               "type":"string"
            }
         }
      },
      "CreateSFTradeAccountContact":{
         "type":"object",
         "properties":{
            "firstName":{
               "type":"string"
            },
            "lastName":{
               "type":"string"
            },
            "email":{
               "type":"string"
            },
            "phone":{
               "type":"string"
            },
            "mobile":{
               "type":"string"
            },
            "homePhone":{
               "type":"string"
            },
            "assistantPhone":{
               "type":"string"
            },
            "workPhone":{
               "type":"string"
            },
            "primaryContact":{
               "type":"boolean",
               "default":false
            },
            "contactId":{
               "type":"string"
            },
            "address":{
               "$ref":"#/definitions/CreateSFTradeAccountAddress"
            }
         }
      },
      "RHAddProductInfoBean":{
         "type":"object",
         "required":[
            "catalogRefId",
            "productId",
            "siteId"
         ],
         "properties":{
            "productId":{
               "type":"string",
               "example":"prod7030019"
            },
            "catalogRefId":{
               "type":"string",
               "example":"sku38970001_BLBK"
            },
            "quantity":{
               "type":"integer",
               "format":"int64"
            },
            "categoryId":{
               "type":"string"
            },
            "siteId":{
               "type":"string",
               "example":"RH",
               "enum":[
                  "RH",
                  "MO",
                  "BC",
                  "TN"
               ]
            },
            "mountTypeId":{
               "type":"string"
            },
            "controlTypeId":{
               "type":"string"
            },
            "controlLength":{
               "type":"number",
               "format":"float"
            },
            "controlPositionId":{
               "type":"string"
            },
            "liningId":{
               "type":"string"
            },
            "roomLabel":{
               "type":"string"
            },
            "shadeWidth":{
               "type":"number",
               "format":"float"
            },
            "shadeLength":{
               "type":"number",
               "format":"float"
            },
            "customProduct":{
               "type":"boolean",
               "default":false
            },
            "customProductType":{
               "type":"string"
            },
            "bracketColorId":{
               "type":"string"
            },
            "rollTypeId":{
               "type":"string"
            },
            "tiltTypeId":{
               "type":"string"
            },
            "controlAndTiltId":{
               "type":"string"
            },
            "customProductTrim":{
               "type":"string"
            },
            "customProductTrimColor":{
               "type":"string"
            },
            "customProductWidth":{
               "type":"string"
            },
            "customProductLength":{
               "type":"string"
            },
            "customProductDiameter":{
               "type":"string"
            },
            "finishId":{
               "type":"string"
            },
            "panelId":{
               "type":"string"
            },
            "drapeWidth":{
               "type":"number",
               "format":"double"
            },
            "drapeLength":{
               "type":"number",
               "format":"double"
            },
            "styleId":{
               "type":"string"
            },
            "hardwareTypeId":{
               "type":"string"
            },
            "customHardwareLength":{
               "type":"string"
            },
            "trackHardwareLength":{
               "type":"number",
               "format":"double"
            },
            "jewellery":{
               "type":"boolean",
               "default":false
            },
            "trackHardware":{
               "type":"boolean",
               "default":false
            },
            "fullSkuId":{
               "type":"string"
            }
         }
      },
      "OpportunityOwner":{
         "type":"object",
         "properties":{
            "lastName":{
               "type":"string"
            },
            "firstName":{
               "type":"string"
            },
            "adId":{
               "type":"string"
            }
         }
      },
      "AddItemsToProjectRequest":{
         "type":"object",
         "required":[
            "divisionId",
            "itemsToBeAdded",
            "projectId"
         ],
         "properties":{
            "projectId":{
               "type":"string"
            },
            "divisionId":{
               "type":"string"
            },
            "opportunityNumber":{
               "type":"string"
            },
            "itemsToBeAdded":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/RHAddProductInfoBean"
               }
            }
         }
      },
      "Cursor":{
         "type":"object",
         "properties":{
            "type":{
               "type":"integer",
               "format":"int32"
            },
            "name":{
               "type":"string"
            }
         }
      },
      "TaxAddress":{
         "type":"object",
         "properties":{
            "address1":{
               "type":"string"
            },
            "address2":{
               "type":"string"
            },
            "city":{
               "type":"string"
            },
            "county":{
               "type":"string"
            },
            "state":{
               "type":"string"
            },
            "country":{
               "type":"string"
            },
            "postalCode":{
               "type":"string"
            }
         }
      },
      "HierarchyListener":{
         "type":"object"
      },
      "GalleryAgent":{
         "type":"object",
         "properties":{
            "firstName":{
               "type":"string",
               "description":"Gallery Agent first Name"
            },
            "lastName":{
               "type":"string",
               "description":"Gallery Agent last Name"
            }
         }
      },
      "StartupComponentProcessor":{
         "type":"object"
      },
      "AccountUpdateInfo":{
         "type":"object",
         "properties":{
            "firstName":{
               "type":"string",
               "minLength":3,
               "maxLength":20
            },
            "lastName":{
               "type":"string",
               "minLength":3,
               "maxLength":20
            },
            "email":{
               "type":"string",
               "minLength":1,
               "maxLength":80
            },
            "password":{
               "type":"string",
               "example":"gr8passWurd",
               "description":"password",
               "minLength":8,
               "maxLength":20
            }
         }
      },
      "AccessibleComponent":{
         "type":"object",
         "properties":{
            "enabled":{
               "type":"boolean",
               "default":false
            },
            "visible":{
               "type":"boolean",
               "default":false
            },
            "bounds":{
               "$ref":"#/definitions/Rectangle"
            },
            "location":{
               "$ref":"#/definitions/Point"
            },
            "size":{
               "$ref":"#/definitions/Dimension"
            },
            "cursor":{
               "$ref":"#/definitions/Cursor"
            },
            "background":{
               "$ref":"#/definitions/Color"
            },
            "font":{
               "$ref":"#/definitions/Font"
            },
            "foreground":{
               "$ref":"#/definitions/Color"
            },
            "locationOnScreen":{
               "$ref":"#/definitions/Point"
            },
            "focusTraversable":{
               "type":"boolean",
               "default":false
            },
            "showing":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "FutureDateInstruction":{
         "type":"object",
         "required":[
            "futureDate",
            "reasonCode"
         ],
         "properties":{
            "futureDate":{
               "type":"string",
               "example":"12/01/2018",
               "position":1,
               "description":"the requested date in MM-dd-yyyy format"
            },
            "reasonCode":{
               "type":"string",
               "example":"1",
               "position":2,
               "description":"reason code or value for the requested date"
            }
         }
      },
      "AWTEvent":{
         "type":"object",
         "properties":{
            "id":{
               "type":"integer",
               "format":"int32"
            },
            "source":{
               "type":"object"
            }
         }
      },
      "FlavorListener":{
         "type":"object"
      },
      "Client":{
         "type":"object",
         "properties":{
            "clientId":{
               "type":"string"
            },
            "firstName":{
               "type":"string"
            },
            "lastName":{
               "type":"string"
            },
            "email":{
               "type":"string"
            },
            "address":{
               "type":"string"
            },
            "city":{
               "type":"string"
            },
            "state":{
               "type":"string"
            },
            "postalCode":{
               "type":"string"
            },
            "tradeAccountName":{
               "type":"string"
            }
         }
      },
      "TaxCalculationResponse":{
         "type":"object",
         "properties":{
            "orderId":{
               "type":"string"
            },
            "traceId":{
               "type":"string"
            },
            "billAddress":{
               "$ref":"#/definitions/TaxAddress"
            },
            "shipments":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/TaxShipment"
               }
            },
            "tax":{
               "$ref":"#/definitions/TaxStatusDetail"
            }
         }
      },
      "TradeServiceRequest":{
         "type":"object",
         "properties":{
            "tradeAccountNumber":{
               "type":"string"
            },
            "zip":{
               "type":"string"
            },
            "message":{
               "type":"string"
            },
            "customerEmail":{
               "type":"string"
            },
            "customerPhone":{
               "type":"string"
            },
            "galleryContact":{
               "type":"string"
            },
            "preferredContact":{
               "type":"string",
               "enum":[
                  "EMPTY",
                  "PHONE",
                  "EMAIL",
                  "TEXT",
                  "VIDEO"
               ]
            },
            "customerName":{
               "type":"string"
            }
         }
      },
      "CBMonogramTemplate":{
         "type":"object",
         "properties":{
            "styleId":{
               "type":"string"
            },
            "description":{
               "type":"string"
            },
            "maxLines":{
               "type":"integer",
               "format":"int32"
            },
            "fontCode":{
               "type":"string"
            },
            "fontColorCode":{
               "type":"string"
            },
            "lines":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "borderCode":{
               "type":"string"
            },
            "fulfillmentCode":{
               "type":"string"
            },
            "itemGroupId":{
               "type":"string"
            }
         }
      },
      "MonogramOptions":{
         "type":"object",
         "properties":{
            "border":{
               "type":"string"
            },
            "color":{
               "type":"string"
            },
            "font":{
               "type":"string"
            },
            "style":{
               "type":"string"
            },
            "textLines":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            }
         }
      },
      "GiftWrapOptions":{
         "type":"object",
         "properties":{
            "giftBoxColor":{
               "type":"string"
            }
         }
      },
      "Guest":{
         "type":"object",
         "properties":{
            "email":{
               "type":"string"
            }
         }
      },
      "MessageSourceContext":{
         "type":"object"
      },
      "SiteCheckboxBean":{
         "type":"object",
         "properties":{
            "key":{
               "type":"string"
            },
            "value":{
               "type":"string"
            },
            "label":{
               "type":"string"
            }
         }
      },
      "MimeTyper":{
         "type":"object"
      },
      "WarehouseInventory":{
         "type":"object",
         "properties":{
            "warehouseNumber":{
               "type":"string",
               "example":"95",
               "description":"Warehouse ID"
            },
            "poDate":{
               "type":"string",
               "example":"2019-11-27",
               "description":"Date of current purchase order."
            },
            "onHandQty":{
               "type":"integer",
               "format":"int32",
               "example":5,
               "description":"Quantity on hand."
            },
            "backorderQty":{
               "type":"integer",
               "format":"int32",
               "example":3,
               "description":"Quantity on backorder."
            },
            "status":{
               "type":"integer",
               "format":"int32",
               "example":1000,
               "description":"Inventory status code."
            }
         }
      },
      "DynamicPropertyDescriptor":{
         "type":"object",
         "properties":{
            "expert":{
               "type":"boolean",
               "default":false
            },
            "hidden":{
               "type":"boolean",
               "default":false
            },
            "preferred":{
               "type":"boolean",
               "default":false
            },
            "shortDescription":{
               "type":"string"
            },
            "name":{
               "type":"string"
            },
            "displayName":{
               "type":"string"
            },
            "readable":{
               "type":"boolean",
               "default":false
            },
            "writable":{
               "type":"boolean",
               "default":false
            },
            "required":{
               "type":"boolean",
               "default":false
            },
            "multiValued":{
               "type":"boolean",
               "default":false
            },
            "propertyBeanInfo":{
               "$ref":"#/definitions/DynamicBeanInfo"
            },
            "componentPropertyBeanInfo":{
               "$ref":"#/definitions/DynamicBeanInfo"
            },
            "uipropertyEditor":{
               "$ref":"#/definitions/PropertyEditor"
            },
            "resourceBundle":{
               "$ref":"#/definitions/ResourceBundle"
            },
            "localizedResourceBundle":{
               "$ref":"#/definitions/ResourceBundle"
            },
            "displaySortString":{
               "type":"string"
            },
            "sortString":{
               "type":"string"
            },
            "displayNameResource":{
               "type":"string"
            },
            "shortDescriptionResource":{
               "type":"string"
            }
         }
      },
      "FreightExemptInfoBean":{
         "type":"object",
         "properties":{
            "fullSKUId":{
               "type":"string",
               "example":"68170759 SNCK",
               "description":"The full sku id for fetching freight exempt channel information."
            },
            "channelInfo":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/FreightExemptChannelInfoBean"
               }
            },
            "hashValue":{
               "type":"string"
            }
         }
      },
      "NameContextPreBindingListener":{
         "type":"object"
      },
      "Transaction":{
         "type":"object",
         "properties":{
            "status":{
               "type":"integer",
               "format":"int32"
            }
         }
      },
      "Price":{
         "type":"object",
         "properties":{
            "currency":{
               "type":"string"
            },
            "amount":{
               "type":"number",
               "format":"double"
            }
         }
      },
      "AddItemToOrderBean":{
         "type":"object",
         "required":[
            "fullSkuId",
            "productId"
         ],
         "properties":{
            "shade":{
               "type":"boolean",
               "default":false
            },
            "rug":{
               "type":"boolean",
               "default":false
            },
            "customProductTrimColor":{
               "type":"string"
            },
            "drape":{
               "type":"boolean",
               "default":false
            },
            "hardwareTypeId":{
               "type":"string"
            },
            "drapeWidth":{
               "type":"number",
               "format":"double"
            },
            "drapeLength":{
               "type":"number",
               "format":"double"
            },
            "partsParentFullSkuId":{
               "type":"string"
            },
            "panelId":{
               "type":"string"
            },
            "finishId":{
               "type":"string"
            },
            "styleId":{
               "type":"string"
            },
            "monogram":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/MonogramBean"
               }
            },
            "personalizeAll":{
               "type":"boolean",
               "default":false
            },
            "mAcceptanceRequired":{
               "type":"boolean",
               "default":false
            },
            "cogitem":{
               "type":"boolean",
               "default":false
            },
            "customProductType":{
               "type":"string"
            },
            "customHardware":{
               "type":"boolean",
               "default":false
            },
            "customProduct":{
               "type":"boolean",
               "default":false
            },
            "mountTypeId":{
               "type":"string"
            },
            "controlLength":{
               "type":"number",
               "format":"float"
            },
            "controlTypeId":{
               "type":"string"
            },
            "controlPositionId":{
               "type":"string"
            },
            "liningId":{
               "type":"string"
            },
            "bracketColorId":{
               "type":"string"
            },
            "rollTypeId":{
               "type":"string"
            },
            "tiltTypeId":{
               "type":"string"
            },
            "controlAndTiltId":{
               "type":"string"
            },
            "roomLabel":{
               "type":"string"
            },
            "shadeWidth":{
               "type":"number",
               "format":"float"
            },
            "shadeLength":{
               "type":"number",
               "format":"float"
            },
            "customHardwareLength":{
               "type":"string"
            },
            "acceptanceRequired":{
               "type":"boolean",
               "default":false
            },
            "termsAccepted":{
               "type":"boolean",
               "default":false
            },
            "termsItemId":{
               "type":"string"
            },
            "customProductTrim":{
               "type":"string"
            },
            "customProductWidth":{
               "type":"string"
            },
            "customProductLength":{
               "type":"string"
            },
            "customProductDiameter":{
               "type":"string"
            },
            "trackHardware":{
               "type":"boolean",
               "default":false
            },
            "trackHardwareLength":{
               "type":"number",
               "format":"double"
            },
            "productId":{
               "type":"string",
               "example":"prod14880064",
               "position":1,
               "description":"the system product id"
            },
            "fullSkuId":{
               "type":"string",
               "example":"68590943 BRZ",
               "position":2,
               "description":"the full sku id"
            },
            "atgSkuId":{
               "type":"string",
               "example":"sku68590943_BRZ",
               "position":3,
               "description":"the atg sku id."
            },
            "qty":{
               "type":"integer",
               "format":"int32",
               "example":2,
               "position":4,
               "description":"the quantity to add.",
               "minimum":1
            },
            "acceptSpoTerms":{
               "type":"boolean",
               "position":5,
               "description":"Indicates spo terms and conditions accepted",
               "default":false
            },
            "fusionId":{
               "type":"string",
               "position":6,
               "description":"Unique fusion id from search results page."
            },
            "giftTo":{
               "type":"string",
               "position":7,
               "description":"gift card to field."
            },
            "giftFrom":{
               "type":"string",
               "position":8,
               "description":"gift card from field."
            },
            "giftMessage":{
               "type":"string",
               "position":9,
               "description":"gift card message."
            },
            "registryId":{
               "type":"string",
               "position":10,
               "description":"registry id"
            }
         }
      },
      "ConfigurationFinder":{
         "type":"object"
      },
      "TaglibDescriptor":{
         "type":"object",
         "properties":{
            "taglibURI":{
               "type":"string"
            },
            "taglibLocation":{
               "type":"string"
            }
         }
      },
      "DropTarget":{
         "type":"object",
         "properties":{
            "dropTargetContext":{
               "$ref":"#/definitions/DropTargetContext"
            },
            "component":{
               "$ref":"#/definitions/Component"
            },
            "active":{
               "type":"boolean",
               "default":false
            },
            "defaultActions":{
               "type":"integer",
               "format":"int32"
            },
            "flavorMap":{
               "$ref":"#/definitions/FlavorMap"
            }
         }
      },
      "FontRenderContext":{
         "type":"object",
         "properties":{
            "transform":{
               "$ref":"#/definitions/AffineTransform"
            },
            "transformType":{
               "type":"integer",
               "format":"int32"
            },
            "antiAliased":{
               "type":"boolean",
               "default":false
            },
            "antiAliasingHint":{
               "type":"object"
            },
            "fractionalMetricsHint":{
               "type":"object"
            },
            "transformed":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "File":{
         "type":"object",
         "properties":{
            "path":{
               "type":"string"
            },
            "name":{
               "type":"string"
            },
            "canonicalPath":{
               "type":"string"
            },
            "parent":{
               "type":"string"
            },
            "absolute":{
               "type":"boolean",
               "default":false
            },
            "absoluteFile":{
               "$ref":"#/definitions/File"
            },
            "absolutePath":{
               "type":"string"
            },
            "canonicalFile":{
               "$ref":"#/definitions/File"
            },
            "freeSpace":{
               "type":"integer",
               "format":"int64"
            },
            "parentFile":{
               "$ref":"#/definitions/File"
            },
            "totalSpace":{
               "type":"integer",
               "format":"int64"
            },
            "usableSpace":{
               "type":"integer",
               "format":"int64"
            },
            "directory":{
               "type":"boolean",
               "default":false
            },
            "file":{
               "type":"boolean",
               "default":false
            },
            "hidden":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "AccountUpdateResponse":{
         "type":"object",
         "properties":{
            "statusCode":{
               "type":"string",
               "enum":[
                  "SUCCESS",
                  "ERROR"
               ]
            },
            "errorCode":{
               "type":"string",
               "enum":[
                  "SYSTEM",
                  "VALIDATION",
                  "NOT_FOUND",
                  "URL_UNSUPPORTED",
                  "SERVICE_ERROR",
                  "BAD_REQUEST",
                  "NOT_AUTHENTICATED",
                  "SESSION_TIMEOUT",
                  "FORBIDDEN",
                  "CONFLICT",
                  "SERVICE_UNAVAILABLE"
               ]
            },
            "messages":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "errorMessages":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "fieldErrors":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "formErrors":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "accountInfo":{
               "$ref":"#/definitions/AccountInfo"
            },
            "success":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "SFClientPhoneNumber":{
         "type":"object",
         "properties":{
            "isPrimary":{
               "type":"boolean",
               "default":false
            },
            "isInactive":{
               "type":"boolean",
               "default":false
            },
            "phone":{
               "type":"string"
            }
         }
      },
      "MoodBoardAttribute":{
         "type":"object",
         "required":[
            "divisionItemId",
            "scaleHeight",
            "scaleWidth"
         ],
         "properties":{
            "divisionItemId":{
               "type":"string"
            },
            "scaleWidth":{
               "type":"integer",
               "format":"int32"
            },
            "scaleHeight":{
               "type":"integer",
               "format":"int32"
            },
            "selected":{
               "type":"boolean",
               "default":false
            },
            "hidden":{
               "type":"boolean",
               "default":false
            },
            "alternateImages":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "selectedImageIndex":{
               "type":"integer",
               "format":"int32"
            },
            "flippedImages":{
               "type":"object",
               "additionalProperties":{
                  "type":"boolean"
               }
            },
            "checkedOut":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "Insets":{
         "type":"object",
         "properties":{
            "top":{
               "type":"integer",
               "format":"int32"
            },
            "left":{
               "type":"integer",
               "format":"int32"
            },
            "bottom":{
               "type":"integer",
               "format":"int32"
            },
            "right":{
               "type":"integer",
               "format":"int32"
            }
         }
      },
      "GroupingInstruction":{
         "type":"object",
         "properties":{
            "groupOrder":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "TradeClientResponse":{
         "type":"object",
         "properties":{
            "clientId":{
               "type":"string"
            },
            "firstName":{
               "type":"string"
            },
            "lastName":{
               "type":"string"
            },
            "phone":{
               "type":"string"
            },
            "address":{
               "type":"string"
            },
            "city":{
               "type":"string"
            },
            "state":{
               "type":"string"
            },
            "postalCode":{
               "type":"string"
            },
            "email":{
               "type":"string"
            },
            "tradeAccountName":{
               "type":"string"
            }
         }
      },
      "ComponentProxyFactory":{
         "type":"object",
         "properties":{
            "enabled":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "DASMessageSource":{
         "type":"object",
         "properties":{
            "transactionManager":{
               "$ref":"#/definitions/TransactionManager"
            },
            "messageSourceContext":{
               "$ref":"#/definitions/MessageSourceContext"
            },
            "running":{
               "type":"boolean",
               "default":false
            },
            "name":{
               "type":"string"
            },
            "root":{
               "$ref":"#/definitions/NameContext"
            },
            "absoluteName":{
               "type":"string"
            },
            "loggingWarning":{
               "type":"boolean",
               "default":false
            },
            "loggingDebug":{
               "type":"boolean",
               "default":false
            },
            "loggingError":{
               "type":"boolean",
               "default":false
            },
            "adminServletOutputStreamEncoding":{
               "type":"string"
            },
            "adminServletUseServletOutputStream":{
               "type":"boolean",
               "default":false
            },
            "serviceInfo":{
               "type":"string"
            },
            "logListeners":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/LogListener"
               }
            },
            "logListenerCount":{
               "type":"integer",
               "format":"int32"
            },
            "nameContext":{
               "$ref":"#/definitions/NameContext"
            },
            "nucleus":{
               "$ref":"#/definitions/Nucleus"
            },
            "serviceConfiguration":{
               "$ref":"#/definitions/Configuration"
            },
            "loggingInfo":{
               "type":"boolean",
               "default":false
            },
            "loggingTrace":{
               "type":"boolean",
               "default":false
            },
            "adminServlet":{
               "$ref":"#/definitions/Servlet"
            }
         }
      },
      "OrderAddressBean":{
         "type":"object",
         "properties":{
            "soldToAddress":{
               "$ref":"#/definitions/AddressBean"
            },
            "billingAddress":{
               "$ref":"#/definitions/AddressBean"
            },
            "shippingAddress":{
               "$ref":"#/definitions/AddressBean"
            }
         }
      },
      "CreateSFPersonAccountBean":{
         "type":"object",
         "properties":{
            "lastName":{
               "type":"string"
            },
            "firstName":{
               "type":"string"
            },
            "email":{
               "type":"string"
            },
            "phone":{
               "type":"string"
            },
            "mobilePhone":{
               "type":"string"
            },
            "homePhone":{
               "type":"string"
            },
            "assistantPhone":{
               "type":"string"
            },
            "otherPhone":{
               "type":"string"
            },
            "accountId":{
               "type":"string"
            },
            "contactId":{
               "type":"string"
            },
            "address":{
               "$ref":"#/definitions/CreateSFPersonAccountRequestAddress"
            }
         }
      },
      "JspPropertyGroupDescriptor":{
         "type":"object",
         "properties":{
            "buffer":{
               "type":"string"
            },
            "urlPatterns":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "includePreludes":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "includeCodas":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "deferredSyntaxAllowedAsLiteral":{
               "type":"string"
            },
            "elIgnored":{
               "type":"string"
            },
            "isXml":{
               "type":"string"
            },
            "pageEncoding":{
               "type":"string"
            },
            "scriptingInvalid":{
               "type":"string"
            },
            "trimDirectiveWhitespaces":{
               "type":"string"
            },
            "defaultContentType":{
               "type":"string"
            },
            "errorOnUndeclaredNamespace":{
               "type":"string"
            }
         }
      },
      "FontPeer":{
         "type":"object"
      },
      "CreateSFTradeAccountResponse":{
         "type":"object",
         "properties":{
            "statusCode":{
               "type":"string",
               "enum":[
                  "SUCCESS",
                  "ERROR"
               ]
            },
            "errorCode":{
               "type":"string",
               "enum":[
                  "SYSTEM",
                  "VALIDATION",
                  "NOT_FOUND",
                  "URL_UNSUPPORTED",
                  "SERVICE_ERROR",
                  "BAD_REQUEST",
                  "NOT_AUTHENTICATED",
                  "SESSION_TIMEOUT",
                  "FORBIDDEN",
                  "CONFLICT",
                  "SERVICE_UNAVAILABLE"
               ]
            },
            "messages":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "errorMessages":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "fieldErrors":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "formErrors":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "account":{
               "$ref":"#/definitions/SFCreateTradeAccountResponseBean"
            },
            "success":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "MonogramFont":{
         "type":"object",
         "properties":{
            "image":{
               "type":"string"
            },
            "previewImage":{
               "type":"string"
            },
            "displayName":{
               "type":"string"
            },
            "id":{
               "type":"string"
            },
            "borders":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/MonogramBorder"
               }
            }
         }
      },
      "MonogramColor":{
         "type":"object",
         "properties":{
            "image":{
               "type":"string"
            },
            "id":{
               "type":"string"
            },
            "displayName":{
               "type":"string"
            }
         }
      },
      "RHAddressValidationRequest":{
         "type":"object",
         "properties":{
            "firstName":{
               "type":"string"
            },
            "lastName":{
               "type":"string"
            },
            "address1":{
               "type":"string"
            },
            "address2":{
               "type":"string"
            },
            "city":{
               "type":"string"
            },
            "state":{
               "type":"string"
            },
            "postalCode":{
               "type":"string"
            },
            "country":{
               "type":"string"
            },
            "phoneNumber":{
               "type":"string"
            },
            "reserved":{
               "type":"string"
            }
         }
      },
      "InputMethodListener":{
         "type":"object"
      },
      "ClassLoader":{
         "type":"object",
         "properties":{
            "parent":{
               "$ref":"#/definitions/ClassLoader"
            }
         }
      },
      "ComItem":{
         "type":"object",
         "properties":{
            "productId":{
               "type":"string"
            },
            "sku":{
               "type":"string"
            },
            "quantity":{
               "type":"integer",
               "format":"int32"
            },
            "monogrammed":{
               "type":"boolean",
               "default":false
            },
            "shipVia":{
               "type":"string"
            },
            "istSSInstallation":{
               "type":"boolean",
               "default":false
            },
            "customInfo":{
               "$ref":"#/definitions/CustomInfo"
            }
         }
      },
      "QuoteArchiveRequest":{
         "type":"object",
         "required":[
            "reason"
         ],
         "properties":{
            "reason":{
               "type":"string"
            }
         }
      },
      "RepositoryItemDescriptor":{
         "type":"object",
         "properties":{
            "repositoryView":{
               "$ref":"#/definitions/RepositoryView"
            },
            "contextMembershipProperty":{
               "$ref":"#/definitions/RepositoryPropertyDescriptor"
            },
            "displayNameProperty":{
               "$ref":"#/definitions/RepositoryPropertyDescriptor"
            },
            "contextMembershipEnabled":{
               "type":"boolean",
               "default":false
            },
            "itemDescriptorName":{
               "type":"string"
            },
            "repository":{
               "$ref":"#/definitions/Repository"
            },
            "propertyDescriptors":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/DynamicPropertyDescriptor"
               }
            },
            "propertyNames":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "beanDescriptor":{
               "$ref":"#/definitions/DynamicBeanDescriptor"
            }
         }
      },
      "AddQuickLookItemsToCartRequest":{
         "type":"object",
         "required":[
            "promoDisplayImageSkuId"
         ],
         "properties":{
            "promoDisplayImageSkuId":{
               "type":"string"
            },
            "quantity":{
               "type":"integer",
               "format":"int32"
            }
         }
      },
      "AccessRight":{
         "type":"object",
         "properties":{
            "description":{
               "type":"string"
            },
            "name":{
               "type":"string"
            },
            "displayName":{
               "type":"string"
            }
         }
      },
      "SourceBookBean":{
         "type":"object",
         "properties":{
            "id":{
               "type":"string",
               "example":"promo10001",
               "description":"the id of the item"
            },
            "imageUrl":{
               "type":"string",
               "example":"https://media.restorationhardware.com/is/image/rhis/catalog_2017_interiors",
               "description":"image url"
            },
            "name":{
               "type":"string",
               "example":"RH Interiors Catalog",
               "description":"name"
            },
            "brand":{
               "type":"string",
               "example":"TN",
               "description":"the brand of the book"
            },
            "linkText":{
               "type":"string",
               "example":"Select Interiors Source Book",
               "description":"linkText"
            }
         }
      },
      "AccessibleContext":{
         "type":"object",
         "properties":{
            "accessibleParent":{
               "$ref":"#/definitions/Accessible"
            },
            "accessibleName":{
               "type":"string"
            },
            "accessibleDescription":{
               "type":"string"
            },
            "locale":{
               "$ref":"#/definitions/Locale"
            },
            "accessibleChildrenCount":{
               "type":"integer",
               "format":"int32"
            },
            "accessibleComponent":{
               "$ref":"#/definitions/AccessibleComponent"
            },
            "accessibleAction":{
               "$ref":"#/definitions/AccessibleAction"
            },
            "accessibleEditableText":{
               "$ref":"#/definitions/AccessibleEditableText"
            },
            "accessibleIcon":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/AccessibleIcon"
               }
            },
            "accessibleRelationSet":{
               "$ref":"#/definitions/AccessibleRelationSet"
            },
            "accessibleRole":{
               "$ref":"#/definitions/AccessibleRole"
            },
            "accessibleTable":{
               "$ref":"#/definitions/AccessibleTable"
            },
            "accessibleText":{
               "$ref":"#/definitions/AccessibleText"
            },
            "accessibleValue":{
               "$ref":"#/definitions/AccessibleValue"
            },
            "accessibleIndexInParent":{
               "type":"integer",
               "format":"int32"
            },
            "accessibleSelection":{
               "$ref":"#/definitions/AccessibleSelection"
            },
            "accessibleStateSet":{
               "$ref":"#/definitions/AccessibleStateSet"
            }
         }
      },
      "MonogramPanelItem":{
         "type":"object",
         "properties":{
            "id":{
               "type":"string"
            },
            "displayName":{
               "type":"string"
            },
            "image":{
               "$ref":"#/definitions/RepositoryItem"
            },
            "altImage":{
               "$ref":"#/definitions/RepositoryItem"
            },
            "maxLength":{
               "type":"integer",
               "format":"int32"
            },
            "minLength":{
               "type":"integer",
               "format":"int32"
            },
            "numberOfLines":{
               "type":"integer",
               "format":"int32"
            },
            "cwCode":{
               "type":"string"
            },
            "sortPriority":{
               "type":"integer",
               "format":"int32"
            }
         }
      },
      "PersistFlippedImageRequest":{
         "type":"object",
         "required":[
            "divisionId",
            "divisionItemId",
            "flippedImages",
            "projectId"
         ],
         "properties":{
            "projectId":{
               "type":"string"
            },
            "divisionId":{
               "type":"string"
            },
            "divisionItemId":{
               "type":"string"
            },
            "flippedImages":{
               "type":"object",
               "additionalProperties":{
                  "type":"boolean"
               }
            }
         }
      },
      "InputContext":{
         "type":"object",
         "properties":{
            "locale":{
               "$ref":"#/definitions/Locale"
            },
            "inputMethodControlObject":{
               "type":"object"
            },
            "compositionEnabled":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "ProjectSFStakeholder":{
         "type":"object",
         "properties":{
            "lastName":{
               "type":"string"
            },
            "firstName":{
               "type":"string"
            },
            "adId":{
               "type":"string"
            }
         }
      },
      "SFProjectContact":{
         "type":"object",
         "properties":{
            "name":{
               "type":"string"
            },
            "contactId":{
               "type":"string"
            }
         }
      },
      "CheckOutProjectOrderDetailBean":{
         "type":"object",
         "properties":{
            "orderId":{
               "type":"string"
            },
            "quantity":{
               "type":"integer",
               "format":"int64"
            },
            "submittedDate":{
               "type":"string"
            }
         }
      },
      "Point":{
         "type":"object",
         "properties":{
            "x":{
               "type":"number",
               "format":"double"
            },
            "y":{
               "type":"number",
               "format":"double"
            },
            "location":{
               "$ref":"#/definitions/Point"
            }
         }
      },
      "MattressFee":{
         "type":"object",
         "properties":{
            "state":{
               "type":"string"
            },
            "taxable":{
               "type":"boolean",
               "default":false
            },
            "fee":{
               "type":"number",
               "format":"double"
            }
         }
      },
      "ConfigurationLock":{
         "type":"object"
      },
      "PersonalizeInfo":{
         "type":"object",
         "properties":{
            "waiveMonogramFee":{
               "type":"boolean",
               "default":false
            },
            "personalizable":{
               "type":"boolean",
               "default":false
            },
            "monogrammable":{
               "type":"boolean",
               "default":false
            },
            "photoEditable":{
               "type":"boolean",
               "default":false
            },
            "description":{
               "type":"string"
            },
            "features":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "feeLow":{
               "type":"number",
               "format":"double"
            },
            "feeHigh":{
               "type":"number",
               "format":"double"
            },
            "fonts":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/MonogramFont"
               }
            },
            "styles":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/MonogramStyle"
               }
            },
            "colors":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/MonogramColor"
               }
            }
         }
      },
      "PriceOverrideRequest":{
         "type":"object",
         "required":[
            "divisionItemId",
            "overrideCalculationType",
            "overrideReasonCode",
            "overrideValue",
            "projectId"
         ],
         "properties":{
            "projectId":{
               "type":"string"
            },
            "divisionItemId":{
               "type":"string"
            },
            "opportunityNumber":{
               "type":"string"
            },
            "overrideCalculationType":{
               "type":"string",
               "enum":[
                  "percentOff",
                  "amountOff",
                  "overridePrice"
               ]
            },
            "overrideValue":{
               "type":"number",
               "format":"double"
            },
            "overrideReasonCode":{
               "type":"string",
               "enum":[
                  "G",
                  "Z",
                  "C",
                  "U"
               ]
            },
            "applyOverrideToAllItems":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "FlipContents":{
         "type":"object"
      },
      "MonogramBorder":{
         "type":"object",
         "properties":{
            "image":{
               "type":"string"
            },
            "minLength":{
               "type":"integer",
               "format":"int32"
            },
            "maxLength":{
               "type":"integer",
               "format":"int32"
            },
            "numberOfLines":{
               "type":"integer",
               "format":"int32"
            },
            "id":{
               "type":"string"
            },
            "alt":{
               "type":"string"
            },
            "displayName":{
               "type":"string"
            },
            "previewImage":{
               "type":"string"
            }
         }
      },
      "PhoneNumberBean":{
         "type":"object",
         "required":[
            "nickName",
            "phoneNumber"
         ],
         "properties":{
            "id":{
               "type":"string",
               "description":"Only used for updates"
            },
            "phoneNumber":{
               "type":"string",
               "example":"555-555-5555",
               "position":1
            },
            "nickName":{
               "type":"string",
               "example":"homeNumber",
               "position":2
            },
            "defaultPhoneNumber":{
               "type":"boolean",
               "example":false,
               "position":3,
               "description":"default Address",
               "default":false
            }
         }
      },
      "ShippingAddress":{
         "type":"object",
         "properties":{
            "companyName":{
               "type":"string"
            },
            "addressLine1":{
               "type":"string"
            },
            "city":{
               "type":"string"
            },
            "state":{
               "type":"string"
            },
            "country":{
               "type":"string"
            },
            "firstName":{
               "type":"string"
            },
            "lastName":{
               "type":"string"
            },
            "postalCode":{
               "type":"string"
            }
         }
      },
      "LineItemGroup":{
         "type":"object",
         "properties":{
            "rushOrderable":{
               "type":"boolean",
               "default":false
            },
            "homeDelivery":{
               "type":"boolean",
               "default":false
            },
            "groupId":{
               "type":"string"
            },
            "deliveryDate":{
               "type":"string",
               "format":"date-time",
               "position":2,
               "description":"The raw delivery date for the items in the group.  Used primarily for sorting."
            },
            "deliveryDateString":{
               "type":"string",
               "position":4,
               "description":"The formated delivery date.  Provided as a convenience."
            },
            "deliveryMessage":{
               "type":"string",
               "position":6,
               "description":"Formatted message containing the delivery date or range."
            },
            "shipVia":{
               "type":"string",
               "position":8,
               "description":"Indicates the system shipping method code."
            },
            "items":{
               "type":"array",
               "position":20,
               "description":"List of line item ids in this group",
               "items":{
                  "type":"string"
               }
            }
         }
      },
      "FulfillmentAggrBean":{
         "type":"object",
         "properties":{
            "deliveryInfo":{
               "$ref":"#/definitions/DeliveryInfoBean"
            },
            "restrictionInfo":{
               "$ref":"#/definitions/DeliveryRestrictionBean"
            },
            "inventoryInfo":{
               "$ref":"#/definitions/InventoryInfoBean"
            }
         }
      },
      "ProjectPDFShippingAddress":{
         "type":"object",
         "properties":{
            "firstName":{
               "type":"string"
            },
            "lastName":{
               "type":"string"
            },
            "street1":{
               "type":"string"
            },
            "street2":{
               "type":"string"
            },
            "city":{
               "type":"string"
            },
            "state":{
               "type":"string"
            },
            "country":{
               "type":"string"
            },
            "postalCode":{
               "type":"string"
            },
            "companyName":{
               "type":"string"
            },
            "phoneNumber":{
               "type":"string"
            },
            "emailAddress":{
               "type":"string"
            }
         }
      },
      "CreateSFPersonAccountResponse":{
         "type":"object",
         "properties":{
            "statusCode":{
               "type":"string",
               "enum":[
                  "SUCCESS",
                  "ERROR"
               ]
            },
            "errorCode":{
               "type":"string",
               "enum":[
                  "SYSTEM",
                  "VALIDATION",
                  "NOT_FOUND",
                  "URL_UNSUPPORTED",
                  "SERVICE_ERROR",
                  "BAD_REQUEST",
                  "NOT_AUTHENTICATED",
                  "SESSION_TIMEOUT",
                  "FORBIDDEN",
                  "CONFLICT",
                  "SERVICE_UNAVAILABLE"
               ]
            },
            "messages":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "errorMessages":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "fieldErrors":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "formErrors":{
               "type":"object",
               "additionalProperties":{
                  "type":"string"
               }
            },
            "account":{
               "$ref":"#/definitions/CreateSFPersonAccountBean"
            },
            "success":{
               "type":"boolean",
               "default":false
            }
         }
      },
      "UpdatePostalBean":{
         "type":"object",
         "required":[
            "postalCode"
         ],
         "properties":{
            "postalCode":{
               "type":"string",
               "example":"99732",
               "position":1,
               "description":"postal code"
            }
         }
      },
      "ProductAltImagesBean":{
         "type":"object",
         "properties":{
            "id":{
               "type":"string"
            },
            "alternateImages":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/AltImageBean"
               }
            }
         }
      }
   }
}